spring.profiles.include=embedded-redis,no-auth,security-stub,kafka

#opentsp.kafka.bootstrap.servers=ZBMM:9092
opentsp.kafka.bootstrap.servers=base-jm-docker01-95-101:9092,base-jm-docker02-95-105:9092,base-jm-docker03-95-109:9092
#producer config
opentsp.kafka.producer.key.serializer.class=org.apache.kafka.common.serialization.StringSerializer
opentsp.kafka.producer.value.serializer.class=com.navinfo.opentspcore.common.kafka.serializers.KafkaJsonSerializer
opentsp.kafka.producer.batch.size=131072
opentsp.kafka.producer.buffer.memory=33554432
opentsp.kafka.producer.request.timeout.ms=30000
opentsp.kafka.producer.retries=0
opentsp.kafka.producer.linger.ms=1
opentsp.kafka.producer.compression.type=gzip

#consumer config
opentsp.kafka.consumer.concurrency.size=1
opentsp.kafka.consumer.listener.topics=daposdone
opentsp.kafka.consumer.session.timeout.ms=15000
opentsp.kafka.consumer.enable.auto.commit=true
opentsp.kafka.consumer.auto.commit.interval.ms=500
opentsp.kafka.consumer.client.id=opentsp-location-kafka-mongo
opentsp.kafka.consumer.group.id=opentsp-location-kafka-mongo
opentsp.kafka.consumer.key.serializer.class=org.apache.kafka.common.serialization.StringDeserializer
opentsp.kafka.consumer.value.serializer.class=com.navinfo.opentspcore.common.kafka.serializers.KafkaJsonDeserializer
opentsp.kafka.consumer.fetch.min.bytes=40
opentsp.kafka.consumer.fetch.max.wait.ms=500
opentsp.kafka.consumer.max.partition.fetch.bytes=1048576


logging.level.root=INFO 
opentsp.location.save.date=20170411

#spring.data.mongodb.host=192.168.135.66
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=GpsLocationData
#spring.data.mongodb.repositories.enabled=true
opentsp.gps.collection.name=GpsDataEntity_1704
spring.data.mongodb.uri=mongodb://GpsZhlcData:quY6vm0vJ4CsQBSaDUAMxBO0@10.102.95.101:40000,10.102.95.101:40001,10.102.95.105:40000,10.102.95.105:40001,10.102.95.109:40000,10.102.95.109:40001/GpsZhlcData?AutoConnectRetry=true&authMode=scram-sha1