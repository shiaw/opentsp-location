spring.profiles.include=eureka,rabbitmq,kafka
#rabbitmq.host=localhost
#rabbitmq.host=192.168.135.57
#rabbitmq.port=5672
#rabbitmq.username=admin
#rabbitmq.password=opentsp
rabbitmq.host=10.30.50.21
rabbitmq.port=5672
rabbitmq.username=shenyang
rabbitmq.password=shenyang

spring.redis.host=10.30.50.21
spring.redis.port=6369
spring.redis.database=0
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
#spring.redis.sentinel.master=master1
#spring.redis.sentinel.nodes=10.30.50.21:26399
#spring.redis.password=123456
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1

#Redis Clusters Config
REDIS.CLUSTERS.COUNT=1
REDIS.CLUSTERS.VIRTUAL.NUMBER=1024

REDIS.CLUSTERS.1.NODECODE=100411
#old 10.10.10.167
REDIS.CLUSTERS.1.MASTER.IP=10.30.50.21
REDIS.CLUSTERS.1.MASTER.PORT=6369
REDIS.CLUSTERS.1.SLAVE.IP=10.30.50.21
REDIS.CLUSTERS.1.SLAVE.PORT=6369

opentsp.kafka.bootstrap.servers=10.30.50.21:9092
#producer config
opentsp.kafka.producer.key.serializer.class=org.apache.kafka.common.serialization.StringSerializer
opentsp.kafka.producer.value.serializer.class=com.navinfo.opentspcore.common.kafka.serializers.KafkaJsonSerializer
opentsp.kafka.producer.batch.size=131072
opentsp.kafka.producer.buffer.memory=33554432
opentsp.kafka.producer.request.timeout.ms=30000
opentsp.kafka.producer.retries=0
opentsp.kafka.producer.linger.ms=1
opentsp.kafka.producer.compression.type=gzip

#consumer config
opentsp.kafka.consumer.concurrency.size=1
opentsp.kafka.consumer.listener.topics=
opentsp.kafka.consumer.session.timeout.ms=15000
opentsp.kafka.consumer.enable.auto.commit=true
opentsp.kafka.consumer.auto.commit.interval.ms=500
opentsp.kafka.consumer.client.id=opentsp-gateway-tcp-location
opentsp.kafka.consumer.group.id=opentsp-gateway-tcp-location
opentsp.kafka.consumer.key.serializer.class=org.apache.kafka.common.serialization.StringDeserializer
opentsp.kafka.consumer.value.serializer.class=com.navinfo.opentspcore.common.kafka.serializers.KafkaJsonDeserializer
opentsp.kafka.consumer.fetch.min.bytes=40
opentsp.kafka.consumer.fetch.max.wait.ms=500
opentsp.kafka.consumer.max.partition.fetch.bytes=1048576

#¦Ë???????????????
opentsp.3002.packtet.count.start=12000
#?????????????
opentsp.carsInDistrictOnline.count=6

logging.level.com.navinfo.opentspcore.common.kafka.KafkaConsumerListener:ERROR


#spring.data.mongodb.host=10.30.50.21
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=GpsZhlcData
#spring.data.mongodb.username=root
#spring.data.mongodb.password=123456
#spring.data.mongodb.database=test
#mongodb.master.ip=mongodb://10.30.10.11:43001,10.30.10.12:43001,10.30.10.13:43001,10.30.10.11:43002,10.30.10.12:43002,10.30.10.13:43002/wzyol?AutoConnectRetry=true
#mongodb.master.port=43001
#mongodb.master.poolSize=2000
#mongodb.master.blockSize=5000
spring.data.mongodb.uri=mongodb://10.30.10.11:43001,10.30.10.12:43001,10.30.10.13:43001,10.30.10.11:43002,10.30.10.12:43002,10.30.10.13:43002/GpsZhlcData?AutoConnectRetry=true

opentsp.rprest.scheduler.onlinecar.cron=0 0 5 * * ?
opentsp.rprest.service.onlinecar.overgpstime=10

spring.datasource.url=jdbc:mysql://10.30.50.21:3306/wzyol
spring.datasource.username=wzyol
spring.datasource.password=wzyol

spring.datasource.test-on-borrow=true
spring.datasource.test-while-idle=true

spring.datasource.validation-query=SELECT 1;
spring.datasource.driverClassName=com.mysql.jdbc.Driver


eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone: http://10.30.50.21:8761/eureka/
#eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/
eureka.client.registryFetchIntervalSeconds=5
eureka.instance.preferIpAddress = false
eureka.instance.leaseRenewalIntervalInSeconds=3
eureka.instance.leaseExpirationDurationInSeconds=20
