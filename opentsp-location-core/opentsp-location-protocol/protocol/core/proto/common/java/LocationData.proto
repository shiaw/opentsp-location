option java_outer_classname = "LCLocationData";
option java_package = "com.navinfo.opentsp.platform.location.protocol.common";

import "core/proto/common/java/AreaType.proto";
import "core/proto/common/java/VehicleStatusData.proto";
import "core/proto/common/java/VehicleBreakdown.proto";
import "core/proto/common/java/DrivingBehaviorAnalysis.proto";
import "core/proto/common/java/TireTemperatureAddition.proto";


message LocationData{
	required	int64						alarm						=1;
	required	int64						status						=2;
	optional	int32						longitude					=3;
	optional	int32						latitude					=4;
	optional	int32						originalLng					=5;
	optional	int32						originalLat					=6;
	required	int32						height						=7;
	required	int32						speed						=8;
	required	int32						direction					=9;
	required	int64						gpsDate						=10;
	optional	int64						mileage						=11;
	required	int64						receiveDate					=12;
	required	bool						isPatch						=13;
	optional	int32						oil							=14;
	optional	int32						recorderSpeed				=15;
	repeated	SpeedAddition				speedAddition				=16;
	repeated	AreaAddition				areaAddition				=17;
	repeated	RouteAddition				routeAddition				=18;
	repeated	TemAddition					temAlarm					=19;
	optional	int32						starStatus					=20;
	optional	int32						starNumber					=21;
	repeated	int32						alarmIdentify				=22;
	optional	int32						signalStatus				=23;
	optional	int32						ioStatus					=24;
	optional	int32						analogAD0					=25;
	optional	int32						analogAD1					=26;
	optional	int32						signalStrength				=27;
	optional	int32						satelliteNumber				=28;
	optional	bool						isValid						=29;
	repeated	KeyPointFenceAddition		defenceAddition				=30;
	repeated	OvertimeParkingAddition     parkingAddition             =31;
	optional	VehicleStatusAddition	    statusAddition              =32;
	optional	VehicleBreakdownAddition	breakdownAddition           =33;
	optional	bytes						additionAlarm				=34;
	optional	DrivingBehaviorAnalysis	    analysisData                =35;
	optional	int32						batteryPower				=36;
	repeated	ModuleVoltage				moduleVoltages				=37;
	optional	int64						electricVehicle				=38;
	optional 	BatteryVehicleInfo			batteryInfo					=39;
	optional	int64						alarmFilter					=40;
	optional	float						standardMileage				=42;
	optional	float						standardFuelCon				=43;
	repeated	StaytimeParkingAddition     staytimeParkingAddition     =44;
	optional	int64						ecuDate						=45;
	optional    TireTemperatureAddition     temperatureAddition         =46;
	optional    VehicleBreakdownAddition    cancleBreakdownAddition     =47;
}
enum SignalStatus{
	nearLight				= 0x00000001;
	farLight				= 0x00000002;
	rightTurningLight		= 0x00000004;
	leftTurningLight		= 0x00000008;
	braking					= 0x00000010;
	reverse					= 0x00000020;
	fogLight				= 0x00000040;
	markerLight				= 0x00000080;
	speaker					= 0x00000100;
	airConditioning			= 0x00000200;
	neutral					= 0x00000400;
	retarder				= 0x00000800;
	absWorking				= 0x00001000;
	heaterWorking			= 0x00002000;
	clutchStatus			= 0x00004000;
}
enum IoStauts{
	deepSleeping			= 0x00000001;
	sleeping				= 0x00000002;
}

message SpeedAddition{
	required	AreaType	types		=1;
	optional	int64		areaId		=2;
	optional	int64		lineId		=3;
}

message AreaAddition{
	required	AreaType	areaType =1;
	required	int64	areaId =2;
	required	bool	direction =3;
}

message RouteAddition{
	required	int64	areaId				=1;
	optional	int64	lineId				=2;
	required	int32	routeTime			=3;
	required	bool	routeResult			=4;
}

message TemAddition{
	required	int32	channelId 			=1;
	required	bool	temAlarm 			=2;
	optional	int32	temperature 		=3;
}

message KeyPointFenceAddition{
	required   	AreaType  	areaType	=1;
	required    int64    	areaId 		=2;
	required    bool   	 	fenceAlarm  =3;
}

message OvertimeParkingAddition{
	required   	AreaType  	areaType	=1;
	required    int64    	areaId 		=2;
}

message StaytimeParkingAddition{
	required   	AreaType  	areaType	=1;
	required    int64    	areaId 		=2;
}

message VehicleStatusAddition{
	repeated	VehicleStatusData	status	=1;
}

message VehicleBreakdownAddition{
	repeated	VehicleBreakdown	breakdown	=1;
}

message ModuleVoltage{
	required	int32	moduleNum	=1;
	required	int32	number		=2;
	required	float	voltage		=3;

}

message BatteryVehicleInfo{
	optional	int32	motorTemperature		=1;
	optional	int32	motorControlTemp		=2;
	optional	int32	mcuFaultCode			=3;
	optional	int32	bmsStatus				=4;
	optional	int32	batteryAveTem			=5;
	optional	float	batteryCurrent			=6;
	optional	float	totalBatteryV			=7;
	optional	int32	batteryFaultCode		=8;
	optional	int32	batteryMaxTem			=9;
	optional	int32	batteryMinTem			=10;
	optional	int32	batteryMinSoc			=11;
	optional	float	maxChargingV			=12;
	optional	float	maxChargingE			=13;
	optional	int32	totalStatus				=14;
	optional	float	vehicleSpeed			=15;
	optional	int32	shiftStatus				=16;
	optional	int32	vcuFaultCode			=17;
	optional	int32	enduranceMileage		=18;
	optional	float	acceleratorPedal 		=19;
	optional	float	brakePedal				=20;
	optional	int32	modelInfo				=21;
	optional	int32	switchInfo				=22;
	optional	int32	electricAttachment		=23;
	optional	int32	motorRpm				=24;


}







