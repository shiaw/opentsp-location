// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace AeroCloud.Protocol {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class QueryRegularDataRes {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_QueryRegularDataRes__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::AeroCloud.Protocol.QueryRegularDataRes, global::AeroCloud.Protocol.QueryRegularDataRes.Builder> internal__static_QueryRegularDataRes__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static QueryRegularDataRes() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Cjtjb3JlL3Byb3RvL2RhdGFhY2Nlc3MvcmVndWxhci9uZXQvUXVlcnlSZWd1" + 
            "bGFyRGF0YVJlcy5wcm90bxoUY3NoYXJwX29wdGlvbnMucHJvdG8aMmNvcmUv" + 
            "cHJvdG8vZGF0YWFjY2Vzcy9jb21tb24vbmV0L1JlZ3VsYXJEYXRhLnByb3Rv" + 
            "IjIKE1F1ZXJ5UmVndWxhckRhdGFSZXMSGwoFZGF0YXMYASADKAsyDC5SZWd1" + 
            "bGFyRGF0YUJXCidjb20ubGMuY29yZS5wcm90b2NvbC5kYXRhYWNjZXNzLnJl" + 
            "Z3VsYXJCFUxDUXVlcnlSZWd1bGFyRGF0YVJlc8I+FAoSQWVyb0Nsb3VkLlBy" + 
            "b3RvY29s");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_QueryRegularDataRes__Descriptor = Descriptor.MessageTypes[0];
          internal__static_QueryRegularDataRes__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::AeroCloud.Protocol.QueryRegularDataRes, global::AeroCloud.Protocol.QueryRegularDataRes.Builder>(internal__static_QueryRegularDataRes__Descriptor,
                  new string[] { "Datas", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
          global::AeroCloud.Protocol.Proto.RegularData.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
            global::AeroCloud.Protocol.Proto.RegularData.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryRegularDataRes : pb::GeneratedMessage<QueryRegularDataRes, QueryRegularDataRes.Builder> {
    private QueryRegularDataRes() { }
    private static readonly QueryRegularDataRes defaultInstance = new QueryRegularDataRes().MakeReadOnly();
    private static readonly string[] _queryRegularDataResFieldNames = new string[] { "datas" };
    private static readonly uint[] _queryRegularDataResFieldTags = new uint[] { 10 };
    public static QueryRegularDataRes DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryRegularDataRes DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryRegularDataRes ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::AeroCloud.Protocol.Proto.QueryRegularDataRes.internal__static_QueryRegularDataRes__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryRegularDataRes, QueryRegularDataRes.Builder> InternalFieldAccessors {
      get { return global::AeroCloud.Protocol.Proto.QueryRegularDataRes.internal__static_QueryRegularDataRes__FieldAccessorTable; }
    }
    
    public const int DatasFieldNumber = 1;
    private pbc::PopsicleList<global::AeroCloud.Protocol.RegularData> datas_ = new pbc::PopsicleList<global::AeroCloud.Protocol.RegularData>();
    public scg::IList<global::AeroCloud.Protocol.RegularData> DatasList {
      get { return datas_; }
    }
    public int DatasCount {
      get { return datas_.Count; }
    }
    public global::AeroCloud.Protocol.RegularData GetDatas(int index) {
      return datas_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::AeroCloud.Protocol.RegularData element in DatasList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryRegularDataResFieldNames;
      if (datas_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], datas_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::AeroCloud.Protocol.RegularData element in DatasList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryRegularDataRes ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryRegularDataRes ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryRegularDataRes ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryRegularDataRes ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryRegularDataRes MakeReadOnly() {
      datas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryRegularDataRes prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryRegularDataRes, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryRegularDataRes cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryRegularDataRes result;
      
      private QueryRegularDataRes PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryRegularDataRes original = result;
          result = new QueryRegularDataRes();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryRegularDataRes MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::AeroCloud.Protocol.QueryRegularDataRes.Descriptor; }
      }
      
      public override QueryRegularDataRes DefaultInstanceForType {
        get { return global::AeroCloud.Protocol.QueryRegularDataRes.DefaultInstance; }
      }
      
      public override QueryRegularDataRes BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryRegularDataRes) {
          return MergeFrom((QueryRegularDataRes) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryRegularDataRes other) {
        if (other == global::AeroCloud.Protocol.QueryRegularDataRes.DefaultInstance) return this;
        PrepareBuilder();
        if (other.datas_.Count != 0) {
          result.datas_.Add(other.datas_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryRegularDataResFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryRegularDataResFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.datas_, global::AeroCloud.Protocol.RegularData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::AeroCloud.Protocol.RegularData> DatasList {
        get { return PrepareBuilder().datas_; }
      }
      public int DatasCount {
        get { return result.DatasCount; }
      }
      public global::AeroCloud.Protocol.RegularData GetDatas(int index) {
        return result.GetDatas(index);
      }
      public Builder SetDatas(int index, global::AeroCloud.Protocol.RegularData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.datas_[index] = value;
        return this;
      }
      public Builder SetDatas(int index, global::AeroCloud.Protocol.RegularData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.datas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDatas(global::AeroCloud.Protocol.RegularData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.datas_.Add(value);
        return this;
      }
      public Builder AddDatas(global::AeroCloud.Protocol.RegularData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.datas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDatas(scg::IEnumerable<global::AeroCloud.Protocol.RegularData> values) {
        PrepareBuilder();
        result.datas_.Add(values);
        return this;
      }
      public Builder ClearDatas() {
        PrepareBuilder();
        result.datas_.Clear();
        return this;
      }
    }
    static QueryRegularDataRes() {
      object.ReferenceEquals(global::AeroCloud.Protocol.Proto.QueryRegularDataRes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
