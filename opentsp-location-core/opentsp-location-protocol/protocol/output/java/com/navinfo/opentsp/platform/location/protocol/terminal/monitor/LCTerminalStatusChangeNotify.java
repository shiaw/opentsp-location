// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/monitor/java/TerminalStatusChangeNotify.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.monitor;

public final class LCTerminalStatusChangeNotify {
  private LCTerminalStatusChangeNotify() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TerminalStatusChangeNotifyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 currentDate = 1;
    boolean hasCurrentDate();
    long getCurrentDate();
    
    // required int32 pattern = 2;
    boolean hasPattern();
    int getPattern();
    
    // required int32 sign = 3;
    boolean hasSign();
    int getSign();
    
    // required int64 gpsID = 4;
    boolean hasGpsID();
    long getGpsID();
    
    // required int64 fixedKey = 5;
    boolean hasFixedKey();
    long getFixedKey();
    
    // required int32 ecuType = 6;
    boolean hasEcuType();
    int getEcuType();
    
    // required int32 ecuVersion = 7;
    boolean hasEcuVersion();
    int getEcuVersion();
    
    // required int32 ecuRunStatus = 8;
    boolean hasEcuRunStatus();
    int getEcuRunStatus();
    
    // required int32 ecuActivationStatus = 9;
    boolean hasEcuActivationStatus();
    int getEcuActivationStatus();
    
    // required int32 ecuLockStatus = 10;
    boolean hasEcuLockStatus();
    int getEcuLockStatus();
    
    // required int32 key = 11;
    boolean hasKey();
    int getKey();
    
    // required int32 gpsIDBool = 12;
    boolean hasGpsIDBool();
    int getGpsIDBool();
    
    // required int64 ecuTotalhandshake = 13;
    boolean hasEcuTotalhandshake();
    long getEcuTotalhandshake();
    
    // required int64 ecuSuccesshandshake = 14;
    boolean hasEcuSuccesshandshake();
    long getEcuSuccesshandshake();
    
    // required int32 ecuLockErrorCode = 15;
    boolean hasEcuLockErrorCode();
    int getEcuLockErrorCode();
  }
  public static final class TerminalStatusChangeNotify extends
      com.google.protobuf.GeneratedMessage
      implements TerminalStatusChangeNotifyOrBuilder {
    // Use TerminalStatusChangeNotify.newBuilder() to construct.
    private TerminalStatusChangeNotify(Builder builder) {
      super(builder);
    }
    private TerminalStatusChangeNotify(boolean noInit) {}
    
    private static final TerminalStatusChangeNotify defaultInstance;
    public static TerminalStatusChangeNotify getDefaultInstance() {
      return defaultInstance;
    }
    
    public TerminalStatusChangeNotify getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.internal_static_TerminalStatusChangeNotify_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.internal_static_TerminalStatusChangeNotify_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 currentDate = 1;
    public static final int CURRENTDATE_FIELD_NUMBER = 1;
    private long currentDate_;
    public boolean hasCurrentDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCurrentDate() {
      return currentDate_;
    }
    
    // required int32 pattern = 2;
    public static final int PATTERN_FIELD_NUMBER = 2;
    private int pattern_;
    public boolean hasPattern() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPattern() {
      return pattern_;
    }
    
    // required int32 sign = 3;
    public static final int SIGN_FIELD_NUMBER = 3;
    private int sign_;
    public boolean hasSign() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSign() {
      return sign_;
    }
    
    // required int64 gpsID = 4;
    public static final int GPSID_FIELD_NUMBER = 4;
    private long gpsID_;
    public boolean hasGpsID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getGpsID() {
      return gpsID_;
    }
    
    // required int64 fixedKey = 5;
    public static final int FIXEDKEY_FIELD_NUMBER = 5;
    private long fixedKey_;
    public boolean hasFixedKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getFixedKey() {
      return fixedKey_;
    }
    
    // required int32 ecuType = 6;
    public static final int ECUTYPE_FIELD_NUMBER = 6;
    private int ecuType_;
    public boolean hasEcuType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getEcuType() {
      return ecuType_;
    }
    
    // required int32 ecuVersion = 7;
    public static final int ECUVERSION_FIELD_NUMBER = 7;
    private int ecuVersion_;
    public boolean hasEcuVersion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getEcuVersion() {
      return ecuVersion_;
    }
    
    // required int32 ecuRunStatus = 8;
    public static final int ECURUNSTATUS_FIELD_NUMBER = 8;
    private int ecuRunStatus_;
    public boolean hasEcuRunStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getEcuRunStatus() {
      return ecuRunStatus_;
    }
    
    // required int32 ecuActivationStatus = 9;
    public static final int ECUACTIVATIONSTATUS_FIELD_NUMBER = 9;
    private int ecuActivationStatus_;
    public boolean hasEcuActivationStatus() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getEcuActivationStatus() {
      return ecuActivationStatus_;
    }
    
    // required int32 ecuLockStatus = 10;
    public static final int ECULOCKSTATUS_FIELD_NUMBER = 10;
    private int ecuLockStatus_;
    public boolean hasEcuLockStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getEcuLockStatus() {
      return ecuLockStatus_;
    }
    
    // required int32 key = 11;
    public static final int KEY_FIELD_NUMBER = 11;
    private int key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getKey() {
      return key_;
    }
    
    // required int32 gpsIDBool = 12;
    public static final int GPSIDBOOL_FIELD_NUMBER = 12;
    private int gpsIDBool_;
    public boolean hasGpsIDBool() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getGpsIDBool() {
      return gpsIDBool_;
    }
    
    // required int64 ecuTotalhandshake = 13;
    public static final int ECUTOTALHANDSHAKE_FIELD_NUMBER = 13;
    private long ecuTotalhandshake_;
    public boolean hasEcuTotalhandshake() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public long getEcuTotalhandshake() {
      return ecuTotalhandshake_;
    }
    
    // required int64 ecuSuccesshandshake = 14;
    public static final int ECUSUCCESSHANDSHAKE_FIELD_NUMBER = 14;
    private long ecuSuccesshandshake_;
    public boolean hasEcuSuccesshandshake() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public long getEcuSuccesshandshake() {
      return ecuSuccesshandshake_;
    }
    
    // required int32 ecuLockErrorCode = 15;
    public static final int ECULOCKERRORCODE_FIELD_NUMBER = 15;
    private int ecuLockErrorCode_;
    public boolean hasEcuLockErrorCode() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getEcuLockErrorCode() {
      return ecuLockErrorCode_;
    }
    
    private void initFields() {
      currentDate_ = 0L;
      pattern_ = 0;
      sign_ = 0;
      gpsID_ = 0L;
      fixedKey_ = 0L;
      ecuType_ = 0;
      ecuVersion_ = 0;
      ecuRunStatus_ = 0;
      ecuActivationStatus_ = 0;
      ecuLockStatus_ = 0;
      key_ = 0;
      gpsIDBool_ = 0;
      ecuTotalhandshake_ = 0L;
      ecuSuccesshandshake_ = 0L;
      ecuLockErrorCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCurrentDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPattern()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSign()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixedKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuRunStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuActivationStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuLockStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGpsIDBool()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuTotalhandshake()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuSuccesshandshake()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcuLockErrorCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, currentDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pattern_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, sign_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, gpsID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, fixedKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, ecuType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, ecuVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, ecuRunStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ecuActivationStatus_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, ecuLockStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, key_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, gpsIDBool_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, ecuTotalhandshake_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, ecuSuccesshandshake_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, ecuLockErrorCode_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, currentDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pattern_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sign_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, gpsID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, fixedKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, ecuType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ecuVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, ecuRunStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ecuActivationStatus_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, ecuLockStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, key_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, gpsIDBool_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, ecuTotalhandshake_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, ecuSuccesshandshake_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, ecuLockErrorCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.internal_static_TerminalStatusChangeNotify_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.internal_static_TerminalStatusChangeNotify_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        currentDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        pattern_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sign_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gpsID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        fixedKey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        ecuType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ecuVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        ecuRunStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        ecuActivationStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ecuLockStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        key_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        gpsIDBool_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        ecuTotalhandshake_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        ecuSuccesshandshake_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        ecuLockErrorCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify result = new com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentDate_ = currentDate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pattern_ = pattern_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sign_ = sign_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gpsID_ = gpsID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fixedKey_ = fixedKey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ecuType_ = ecuType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.ecuVersion_ = ecuVersion_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ecuRunStatus_ = ecuRunStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ecuActivationStatus_ = ecuActivationStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ecuLockStatus_ = ecuLockStatus_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.gpsIDBool_ = gpsIDBool_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.ecuTotalhandshake_ = ecuTotalhandshake_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ecuSuccesshandshake_ = ecuSuccesshandshake_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.ecuLockErrorCode_ = ecuLockErrorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.getDefaultInstance()) return this;
        if (other.hasCurrentDate()) {
          setCurrentDate(other.getCurrentDate());
        }
        if (other.hasPattern()) {
          setPattern(other.getPattern());
        }
        if (other.hasSign()) {
          setSign(other.getSign());
        }
        if (other.hasGpsID()) {
          setGpsID(other.getGpsID());
        }
        if (other.hasFixedKey()) {
          setFixedKey(other.getFixedKey());
        }
        if (other.hasEcuType()) {
          setEcuType(other.getEcuType());
        }
        if (other.hasEcuVersion()) {
          setEcuVersion(other.getEcuVersion());
        }
        if (other.hasEcuRunStatus()) {
          setEcuRunStatus(other.getEcuRunStatus());
        }
        if (other.hasEcuActivationStatus()) {
          setEcuActivationStatus(other.getEcuActivationStatus());
        }
        if (other.hasEcuLockStatus()) {
          setEcuLockStatus(other.getEcuLockStatus());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasGpsIDBool()) {
          setGpsIDBool(other.getGpsIDBool());
        }
        if (other.hasEcuTotalhandshake()) {
          setEcuTotalhandshake(other.getEcuTotalhandshake());
        }
        if (other.hasEcuSuccesshandshake()) {
          setEcuSuccesshandshake(other.getEcuSuccesshandshake());
        }
        if (other.hasEcuLockErrorCode()) {
          setEcuLockErrorCode(other.getEcuLockErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCurrentDate()) {
          
          return false;
        }
        if (!hasPattern()) {
          
          return false;
        }
        if (!hasSign()) {
          
          return false;
        }
        if (!hasGpsID()) {
          
          return false;
        }
        if (!hasFixedKey()) {
          
          return false;
        }
        if (!hasEcuType()) {
          
          return false;
        }
        if (!hasEcuVersion()) {
          
          return false;
        }
        if (!hasEcuRunStatus()) {
          
          return false;
        }
        if (!hasEcuActivationStatus()) {
          
          return false;
        }
        if (!hasEcuLockStatus()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        if (!hasGpsIDBool()) {
          
          return false;
        }
        if (!hasEcuTotalhandshake()) {
          
          return false;
        }
        if (!hasEcuSuccesshandshake()) {
          
          return false;
        }
        if (!hasEcuLockErrorCode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currentDate_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pattern_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sign_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gpsID_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fixedKey_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ecuType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              ecuVersion_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              ecuRunStatus_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ecuActivationStatus_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              ecuLockStatus_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              key_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              gpsIDBool_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              ecuTotalhandshake_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              ecuSuccesshandshake_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              ecuLockErrorCode_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 currentDate = 1;
      private long currentDate_ ;
      public boolean hasCurrentDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCurrentDate() {
        return currentDate_;
      }
      public Builder setCurrentDate(long value) {
        bitField0_ |= 0x00000001;
        currentDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentDate_ = 0L;
        onChanged();
        return this;
      }
      
      // required int32 pattern = 2;
      private int pattern_ ;
      public boolean hasPattern() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPattern() {
        return pattern_;
      }
      public Builder setPattern(int value) {
        bitField0_ |= 0x00000002;
        pattern_ = value;
        onChanged();
        return this;
      }
      public Builder clearPattern() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pattern_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 sign = 3;
      private int sign_ ;
      public boolean hasSign() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getSign() {
        return sign_;
      }
      public Builder setSign(int value) {
        bitField0_ |= 0x00000004;
        sign_ = value;
        onChanged();
        return this;
      }
      public Builder clearSign() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sign_ = 0;
        onChanged();
        return this;
      }
      
      // required int64 gpsID = 4;
      private long gpsID_ ;
      public boolean hasGpsID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getGpsID() {
        return gpsID_;
      }
      public Builder setGpsID(long value) {
        bitField0_ |= 0x00000008;
        gpsID_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gpsID_ = 0L;
        onChanged();
        return this;
      }
      
      // required int64 fixedKey = 5;
      private long fixedKey_ ;
      public boolean hasFixedKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public long getFixedKey() {
        return fixedKey_;
      }
      public Builder setFixedKey(long value) {
        bitField0_ |= 0x00000010;
        fixedKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixedKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fixedKey_ = 0L;
        onChanged();
        return this;
      }
      
      // required int32 ecuType = 6;
      private int ecuType_ ;
      public boolean hasEcuType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getEcuType() {
        return ecuType_;
      }
      public Builder setEcuType(int value) {
        bitField0_ |= 0x00000020;
        ecuType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ecuType_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 ecuVersion = 7;
      private int ecuVersion_ ;
      public boolean hasEcuVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getEcuVersion() {
        return ecuVersion_;
      }
      public Builder setEcuVersion(int value) {
        bitField0_ |= 0x00000040;
        ecuVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ecuVersion_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 ecuRunStatus = 8;
      private int ecuRunStatus_ ;
      public boolean hasEcuRunStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getEcuRunStatus() {
        return ecuRunStatus_;
      }
      public Builder setEcuRunStatus(int value) {
        bitField0_ |= 0x00000080;
        ecuRunStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuRunStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ecuRunStatus_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 ecuActivationStatus = 9;
      private int ecuActivationStatus_ ;
      public boolean hasEcuActivationStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getEcuActivationStatus() {
        return ecuActivationStatus_;
      }
      public Builder setEcuActivationStatus(int value) {
        bitField0_ |= 0x00000100;
        ecuActivationStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuActivationStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ecuActivationStatus_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 ecuLockStatus = 10;
      private int ecuLockStatus_ ;
      public boolean hasEcuLockStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getEcuLockStatus() {
        return ecuLockStatus_;
      }
      public Builder setEcuLockStatus(int value) {
        bitField0_ |= 0x00000200;
        ecuLockStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuLockStatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ecuLockStatus_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 key = 11;
      private int key_ ;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getKey() {
        return key_;
      }
      public Builder setKey(int value) {
        bitField0_ |= 0x00000400;
        key_ = value;
        onChanged();
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000400);
        key_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 gpsIDBool = 12;
      private int gpsIDBool_ ;
      public boolean hasGpsIDBool() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getGpsIDBool() {
        return gpsIDBool_;
      }
      public Builder setGpsIDBool(int value) {
        bitField0_ |= 0x00000800;
        gpsIDBool_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsIDBool() {
        bitField0_ = (bitField0_ & ~0x00000800);
        gpsIDBool_ = 0;
        onChanged();
        return this;
      }
      
      // required int64 ecuTotalhandshake = 13;
      private long ecuTotalhandshake_ ;
      public boolean hasEcuTotalhandshake() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public long getEcuTotalhandshake() {
        return ecuTotalhandshake_;
      }
      public Builder setEcuTotalhandshake(long value) {
        bitField0_ |= 0x00001000;
        ecuTotalhandshake_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuTotalhandshake() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ecuTotalhandshake_ = 0L;
        onChanged();
        return this;
      }
      
      // required int64 ecuSuccesshandshake = 14;
      private long ecuSuccesshandshake_ ;
      public boolean hasEcuSuccesshandshake() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public long getEcuSuccesshandshake() {
        return ecuSuccesshandshake_;
      }
      public Builder setEcuSuccesshandshake(long value) {
        bitField0_ |= 0x00002000;
        ecuSuccesshandshake_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuSuccesshandshake() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ecuSuccesshandshake_ = 0L;
        onChanged();
        return this;
      }
      
      // required int32 ecuLockErrorCode = 15;
      private int ecuLockErrorCode_ ;
      public boolean hasEcuLockErrorCode() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getEcuLockErrorCode() {
        return ecuLockErrorCode_;
      }
      public Builder setEcuLockErrorCode(int value) {
        bitField0_ |= 0x00004000;
        ecuLockErrorCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearEcuLockErrorCode() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ecuLockErrorCode_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TerminalStatusChangeNotify)
    }
    
    static {
      defaultInstance = new TerminalStatusChangeNotify(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TerminalStatusChangeNotify)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TerminalStatusChangeNotify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TerminalStatusChangeNotify_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nAcore/proto/terminal/monitor/java/Termi" +
      "nalStatusChangeNotify.proto\"\322\002\n\032Terminal" +
      "StatusChangeNotify\022\023\n\013currentDate\030\001 \002(\003\022" +
      "\017\n\007pattern\030\002 \002(\005\022\014\n\004sign\030\003 \002(\005\022\r\n\005gpsID\030" +
      "\004 \002(\003\022\020\n\010fixedKey\030\005 \002(\003\022\017\n\007ecuType\030\006 \002(\005" +
      "\022\022\n\necuVersion\030\007 \002(\005\022\024\n\014ecuRunStatus\030\010 \002" +
      "(\005\022\033\n\023ecuActivationStatus\030\t \002(\005\022\025\n\recuLo" +
      "ckStatus\030\n \002(\005\022\013\n\003key\030\013 \002(\005\022\021\n\tgpsIDBool" +
      "\030\014 \002(\005\022\031\n\021ecuTotalhandshake\030\r \002(\003\022\033\n\023ecu" +
      "Successhandshake\030\016 \002(\003\022\030\n\020ecuLockErrorCo",
      "de\030\017 \002(\005B_\n?com.navinfo.opentsp.platform" +
      ".location.protocol.terminal.monitorB\034LCT" +
      "erminalStatusChangeNotify"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TerminalStatusChangeNotify_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TerminalStatusChangeNotify_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TerminalStatusChangeNotify_descriptor,
              new java.lang.String[] { "CurrentDate", "Pattern", "Sign", "GpsID", "FixedKey", "EcuType", "EcuVersion", "EcuRunStatus", "EcuActivationStatus", "EcuLockStatus", "Key", "GpsIDBool", "EcuTotalhandshake", "EcuSuccesshandshake", "EcuLockErrorCode", },
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTerminalStatusChangeNotify.TerminalStatusChangeNotify.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
