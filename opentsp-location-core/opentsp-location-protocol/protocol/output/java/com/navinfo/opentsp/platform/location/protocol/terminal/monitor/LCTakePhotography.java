// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/monitor/java/TakePhotography.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.monitor;

public final class LCTakePhotography {
  private LCTakePhotography() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TakePhotographyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 channels = 1;
    boolean hasChannels();
    int getChannels();
    
    // required .CommandType commandType = 2;
    boolean hasCommandType();
    com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType getCommandType();
    
    // required int32 photoNumber = 3;
    boolean hasPhotoNumber();
    int getPhotoNumber();
    
    // required int32 takeInterval = 4;
    boolean hasTakeInterval();
    int getTakeInterval();
    
    // required .SaveStatus saveStatus = 5;
    boolean hasSaveStatus();
    com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus getSaveStatus();
    
    // required .Resolution resolutions = 6;
    boolean hasResolutions();
    com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution getResolutions();
    
    // required int32 photoQuality = 7;
    boolean hasPhotoQuality();
    int getPhotoQuality();
    
    // required int32 saturation = 8;
    boolean hasSaturation();
    int getSaturation();
    
    // required int32 brightness = 9;
    boolean hasBrightness();
    int getBrightness();
    
    // required int32 contrast = 10;
    boolean hasContrast();
    int getContrast();
    
    // required int32 chroma = 11;
    boolean hasChroma();
    int getChroma();
  }
  public static final class TakePhotography extends
      com.google.protobuf.GeneratedMessage
      implements TakePhotographyOrBuilder {
    // Use TakePhotography.newBuilder() to construct.
    private TakePhotography(Builder builder) {
      super(builder);
    }
    private TakePhotography(boolean noInit) {}
    
    private static final TakePhotography defaultInstance;
    public static TakePhotography getDefaultInstance() {
      return defaultInstance;
    }
    
    public TakePhotography getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.internal_static_TakePhotography_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.internal_static_TakePhotography_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 channels = 1;
    public static final int CHANNELS_FIELD_NUMBER = 1;
    private int channels_;
    public boolean hasChannels() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getChannels() {
      return channels_;
    }
    
    // required .CommandType commandType = 2;
    public static final int COMMANDTYPE_FIELD_NUMBER = 2;
    private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType commandType_;
    public boolean hasCommandType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType getCommandType() {
      return commandType_;
    }
    
    // required int32 photoNumber = 3;
    public static final int PHOTONUMBER_FIELD_NUMBER = 3;
    private int photoNumber_;
    public boolean hasPhotoNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPhotoNumber() {
      return photoNumber_;
    }
    
    // required int32 takeInterval = 4;
    public static final int TAKEINTERVAL_FIELD_NUMBER = 4;
    private int takeInterval_;
    public boolean hasTakeInterval() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTakeInterval() {
      return takeInterval_;
    }
    
    // required .SaveStatus saveStatus = 5;
    public static final int SAVESTATUS_FIELD_NUMBER = 5;
    private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus saveStatus_;
    public boolean hasSaveStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus getSaveStatus() {
      return saveStatus_;
    }
    
    // required .Resolution resolutions = 6;
    public static final int RESOLUTIONS_FIELD_NUMBER = 6;
    private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution resolutions_;
    public boolean hasResolutions() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution getResolutions() {
      return resolutions_;
    }
    
    // required int32 photoQuality = 7;
    public static final int PHOTOQUALITY_FIELD_NUMBER = 7;
    private int photoQuality_;
    public boolean hasPhotoQuality() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getPhotoQuality() {
      return photoQuality_;
    }
    
    // required int32 saturation = 8;
    public static final int SATURATION_FIELD_NUMBER = 8;
    private int saturation_;
    public boolean hasSaturation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getSaturation() {
      return saturation_;
    }
    
    // required int32 brightness = 9;
    public static final int BRIGHTNESS_FIELD_NUMBER = 9;
    private int brightness_;
    public boolean hasBrightness() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getBrightness() {
      return brightness_;
    }
    
    // required int32 contrast = 10;
    public static final int CONTRAST_FIELD_NUMBER = 10;
    private int contrast_;
    public boolean hasContrast() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getContrast() {
      return contrast_;
    }
    
    // required int32 chroma = 11;
    public static final int CHROMA_FIELD_NUMBER = 11;
    private int chroma_;
    public boolean hasChroma() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getChroma() {
      return chroma_;
    }
    
    private void initFields() {
      channels_ = 0;
      commandType_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType.multiPhoto;
      photoNumber_ = 0;
      takeInterval_ = 0;
      saveStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus.terminalSave;
      resolutions_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution.R320x240;
      photoQuality_ = 0;
      saturation_ = 0;
      brightness_ = 0;
      contrast_ = 0;
      chroma_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasChannels()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPhotoNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTakeInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSaveStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResolutions()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPhotoQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSaturation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBrightness()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContrast()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChroma()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, channels_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, commandType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, photoNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, takeInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, saveStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, resolutions_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, photoQuality_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, saturation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, brightness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, contrast_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, chroma_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, channels_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, commandType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, photoNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, takeInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, saveStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, resolutions_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, photoQuality_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, saturation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, brightness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, contrast_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, chroma_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotographyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.internal_static_TakePhotography_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.internal_static_TakePhotography_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        channels_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        commandType_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType.multiPhoto;
        bitField0_ = (bitField0_ & ~0x00000002);
        photoNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        takeInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        saveStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus.terminalSave;
        bitField0_ = (bitField0_ & ~0x00000010);
        resolutions_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution.R320x240;
        bitField0_ = (bitField0_ & ~0x00000020);
        photoQuality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        saturation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        brightness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        contrast_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        chroma_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography result = new com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channels_ = channels_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commandType_ = commandType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.photoNumber_ = photoNumber_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.takeInterval_ = takeInterval_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.saveStatus_ = saveStatus_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.resolutions_ = resolutions_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.photoQuality_ = photoQuality_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.saturation_ = saturation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.brightness_ = brightness_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.contrast_ = contrast_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.chroma_ = chroma_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.getDefaultInstance()) return this;
        if (other.hasChannels()) {
          setChannels(other.getChannels());
        }
        if (other.hasCommandType()) {
          setCommandType(other.getCommandType());
        }
        if (other.hasPhotoNumber()) {
          setPhotoNumber(other.getPhotoNumber());
        }
        if (other.hasTakeInterval()) {
          setTakeInterval(other.getTakeInterval());
        }
        if (other.hasSaveStatus()) {
          setSaveStatus(other.getSaveStatus());
        }
        if (other.hasResolutions()) {
          setResolutions(other.getResolutions());
        }
        if (other.hasPhotoQuality()) {
          setPhotoQuality(other.getPhotoQuality());
        }
        if (other.hasSaturation()) {
          setSaturation(other.getSaturation());
        }
        if (other.hasBrightness()) {
          setBrightness(other.getBrightness());
        }
        if (other.hasContrast()) {
          setContrast(other.getContrast());
        }
        if (other.hasChroma()) {
          setChroma(other.getChroma());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasChannels()) {
          
          return false;
        }
        if (!hasCommandType()) {
          
          return false;
        }
        if (!hasPhotoNumber()) {
          
          return false;
        }
        if (!hasTakeInterval()) {
          
          return false;
        }
        if (!hasSaveStatus()) {
          
          return false;
        }
        if (!hasResolutions()) {
          
          return false;
        }
        if (!hasPhotoQuality()) {
          
          return false;
        }
        if (!hasSaturation()) {
          
          return false;
        }
        if (!hasBrightness()) {
          
          return false;
        }
        if (!hasContrast()) {
          
          return false;
        }
        if (!hasChroma()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              channels_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType value = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                commandType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              photoNumber_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              takeInterval_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                saveStatus_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution value = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                resolutions_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              photoQuality_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              saturation_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              brightness_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              contrast_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              chroma_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 channels = 1;
      private int channels_ ;
      public boolean hasChannels() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getChannels() {
        return channels_;
      }
      public Builder setChannels(int value) {
        bitField0_ |= 0x00000001;
        channels_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannels() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channels_ = 0;
        onChanged();
        return this;
      }
      
      // required .CommandType commandType = 2;
      private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType commandType_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType.multiPhoto;
      public boolean hasCommandType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType getCommandType() {
        return commandType_;
      }
      public Builder setCommandType(com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        commandType_ = value;
        onChanged();
        return this;
      }
      public Builder clearCommandType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commandType_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.CommandType.multiPhoto;
        onChanged();
        return this;
      }
      
      // required int32 photoNumber = 3;
      private int photoNumber_ ;
      public boolean hasPhotoNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPhotoNumber() {
        return photoNumber_;
      }
      public Builder setPhotoNumber(int value) {
        bitField0_ |= 0x00000004;
        photoNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearPhotoNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        photoNumber_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 takeInterval = 4;
      private int takeInterval_ ;
      public boolean hasTakeInterval() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTakeInterval() {
        return takeInterval_;
      }
      public Builder setTakeInterval(int value) {
        bitField0_ |= 0x00000008;
        takeInterval_ = value;
        onChanged();
        return this;
      }
      public Builder clearTakeInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        takeInterval_ = 0;
        onChanged();
        return this;
      }
      
      // required .SaveStatus saveStatus = 5;
      private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus saveStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus.terminalSave;
      public boolean hasSaveStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus getSaveStatus() {
        return saveStatus_;
      }
      public Builder setSaveStatus(com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        saveStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearSaveStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        saveStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.SaveStatus.terminalSave;
        onChanged();
        return this;
      }
      
      // required .Resolution resolutions = 6;
      private com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution resolutions_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution.R320x240;
      public boolean hasResolutions() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution getResolutions() {
        return resolutions_;
      }
      public Builder setResolutions(com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        resolutions_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutions() {
        bitField0_ = (bitField0_ & ~0x00000020);
        resolutions_ = com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.Resolution.R320x240;
        onChanged();
        return this;
      }
      
      // required int32 photoQuality = 7;
      private int photoQuality_ ;
      public boolean hasPhotoQuality() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getPhotoQuality() {
        return photoQuality_;
      }
      public Builder setPhotoQuality(int value) {
        bitField0_ |= 0x00000040;
        photoQuality_ = value;
        onChanged();
        return this;
      }
      public Builder clearPhotoQuality() {
        bitField0_ = (bitField0_ & ~0x00000040);
        photoQuality_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 saturation = 8;
      private int saturation_ ;
      public boolean hasSaturation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getSaturation() {
        return saturation_;
      }
      public Builder setSaturation(int value) {
        bitField0_ |= 0x00000080;
        saturation_ = value;
        onChanged();
        return this;
      }
      public Builder clearSaturation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        saturation_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 brightness = 9;
      private int brightness_ ;
      public boolean hasBrightness() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getBrightness() {
        return brightness_;
      }
      public Builder setBrightness(int value) {
        bitField0_ |= 0x00000100;
        brightness_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrightness() {
        bitField0_ = (bitField0_ & ~0x00000100);
        brightness_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 contrast = 10;
      private int contrast_ ;
      public boolean hasContrast() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getContrast() {
        return contrast_;
      }
      public Builder setContrast(int value) {
        bitField0_ |= 0x00000200;
        contrast_ = value;
        onChanged();
        return this;
      }
      public Builder clearContrast() {
        bitField0_ = (bitField0_ & ~0x00000200);
        contrast_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 chroma = 11;
      private int chroma_ ;
      public boolean hasChroma() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getChroma() {
        return chroma_;
      }
      public Builder setChroma(int value) {
        bitField0_ |= 0x00000400;
        chroma_ = value;
        onChanged();
        return this;
      }
      public Builder clearChroma() {
        bitField0_ = (bitField0_ & ~0x00000400);
        chroma_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TakePhotography)
    }
    
    static {
      defaultInstance = new TakePhotography(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TakePhotography)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TakePhotography_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TakePhotography_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6core/proto/terminal/monitor/java/TakeP" +
      "hotography.proto\0321core/proto/terminal/co" +
      "mmon/java/CommandType.proto\0320core/proto/" +
      "terminal/common/java/Resolution.proto\0320c" +
      "ore/proto/terminal/common/java/SaveStatu" +
      "s.proto\"\224\002\n\017TakePhotography\022\020\n\010channels\030" +
      "\001 \002(\005\022!\n\013commandType\030\002 \002(\0162\014.CommandType" +
      "\022\023\n\013photoNumber\030\003 \002(\005\022\024\n\014takeInterval\030\004 " +
      "\002(\005\022\037\n\nsaveStatus\030\005 \002(\0162\013.SaveStatus\022 \n\013" +
      "resolutions\030\006 \002(\0162\013.Resolution\022\024\n\014photoQ",
      "uality\030\007 \002(\005\022\022\n\nsaturation\030\010 \002(\005\022\022\n\nbrig" +
      "htness\030\t \002(\005\022\020\n\010contrast\030\n \002(\005\022\016\n\006chroma" +
      "\030\013 \002(\005BT\n?com.navinfo.opentsp.platform.l" +
      "ocation.protocol.terminal.monitorB\021LCTak" +
      "ePhotography"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TakePhotography_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TakePhotography_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TakePhotography_descriptor,
              new java.lang.String[] { "Channels", "CommandType", "PhotoNumber", "TakeInterval", "SaveStatus", "Resolutions", "PhotoQuality", "Saturation", "Brightness", "Contrast", "Chroma", },
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCTakePhotography.TakePhotography.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.navinfo.opentsp.platform.location.protocol.terminal.common.LCCommandType.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.terminal.common.LCResolution.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.terminal.common.LCSaveStatus.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
