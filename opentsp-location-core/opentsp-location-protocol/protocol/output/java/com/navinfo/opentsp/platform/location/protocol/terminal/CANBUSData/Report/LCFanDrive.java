// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/CANBUSData/Report/FanDrive.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report;

public final class LCFanDrive {
  private LCFanDrive() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum FanDriveState
      implements com.google.protobuf.ProtocolMessageEnum {
    fanOff(0, 0),
    engineSystem(1, 1),
    excessiveEngineAirTemp(2, 2),
    excessiveEngineOilTemp(3, 3),
    excessiveEngineCoolant(4, 4),
    manualControl(5, 9),
    transmissionRetarder(6, 10),
    aCSystem(7, 11),
    timer(8, 12),
    engineBrake(9, 13),
    other(10, 14),
    notAvailableFan(11, 15),
    ;
    
    public static final int fanOff_VALUE = 0;
    public static final int engineSystem_VALUE = 1;
    public static final int excessiveEngineAirTemp_VALUE = 2;
    public static final int excessiveEngineOilTemp_VALUE = 3;
    public static final int excessiveEngineCoolant_VALUE = 4;
    public static final int manualControl_VALUE = 9;
    public static final int transmissionRetarder_VALUE = 10;
    public static final int aCSystem_VALUE = 11;
    public static final int timer_VALUE = 12;
    public static final int engineBrake_VALUE = 13;
    public static final int other_VALUE = 14;
    public static final int notAvailableFan_VALUE = 15;
    
    
    public final int getNumber() { return value; }
    
    public static FanDriveState valueOf(int value) {
      switch (value) {
        case 0: return fanOff;
        case 1: return engineSystem;
        case 2: return excessiveEngineAirTemp;
        case 3: return excessiveEngineOilTemp;
        case 4: return excessiveEngineCoolant;
        case 9: return manualControl;
        case 10: return transmissionRetarder;
        case 11: return aCSystem;
        case 12: return timer;
        case 13: return engineBrake;
        case 14: return other;
        case 15: return notAvailableFan;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<FanDriveState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FanDriveState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FanDriveState>() {
            public FanDriveState findValueByNumber(int number) {
              return FanDriveState.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final FanDriveState[] VALUES = {
      fanOff, engineSystem, excessiveEngineAirTemp, excessiveEngineOilTemp, excessiveEngineCoolant, manualControl, transmissionRetarder, aCSystem, timer, engineBrake, other, notAvailableFan, 
    };
    
    public static FanDriveState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private FanDriveState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:FanDriveState)
  }
  
  public interface FanDriveOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional float fanSpeedPercent = 1;
    boolean hasFanSpeedPercent();
    float getFanSpeedPercent();
    
    // optional .FanDriveState state = 2;
    boolean hasState();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState getState();
    
    // optional float fanSpeed = 3;
    boolean hasFanSpeed();
    float getFanSpeed();
  }
  public static final class FanDrive extends
      com.google.protobuf.GeneratedMessage
      implements FanDriveOrBuilder {
    // Use FanDrive.newBuilder() to construct.
    private FanDrive(Builder builder) {
      super(builder);
    }
    private FanDrive(boolean noInit) {}
    
    private static final FanDrive defaultInstance;
    public static FanDrive getDefaultInstance() {
      return defaultInstance;
    }
    
    public FanDrive getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.internal_static_FanDrive_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.internal_static_FanDrive_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional float fanSpeedPercent = 1;
    public static final int FANSPEEDPERCENT_FIELD_NUMBER = 1;
    private float fanSpeedPercent_;
    public boolean hasFanSpeedPercent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getFanSpeedPercent() {
      return fanSpeedPercent_;
    }
    
    // optional .FanDriveState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState state_;
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState getState() {
      return state_;
    }
    
    // optional float fanSpeed = 3;
    public static final int FANSPEED_FIELD_NUMBER = 3;
    private float fanSpeed_;
    public boolean hasFanSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getFanSpeed() {
      return fanSpeed_;
    }
    
    private void initFields() {
      fanSpeedPercent_ = 0F;
      state_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState.fanOff;
      fanSpeed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, fanSpeedPercent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, state_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, fanSpeed_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, fanSpeedPercent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, state_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, fanSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.internal_static_FanDrive_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.internal_static_FanDrive_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        fanSpeedPercent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState.fanOff;
        bitField0_ = (bitField0_ & ~0x00000002);
        fanSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive result = new com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fanSpeedPercent_ = fanSpeedPercent_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fanSpeed_ = fanSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.getDefaultInstance()) return this;
        if (other.hasFanSpeedPercent()) {
          setFanSpeedPercent(other.getFanSpeedPercent());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasFanSpeed()) {
          setFanSpeed(other.getFanSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              fanSpeedPercent_ = input.readFloat();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                state_ = value;
              }
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              fanSpeed_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional float fanSpeedPercent = 1;
      private float fanSpeedPercent_ ;
      public boolean hasFanSpeedPercent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getFanSpeedPercent() {
        return fanSpeedPercent_;
      }
      public Builder setFanSpeedPercent(float value) {
        bitField0_ |= 0x00000001;
        fanSpeedPercent_ = value;
        onChanged();
        return this;
      }
      public Builder clearFanSpeedPercent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fanSpeedPercent_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .FanDriveState state = 2;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState state_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState.fanOff;
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState getState() {
        return state_;
      }
      public Builder setState(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        state_ = value;
        onChanged();
        return this;
      }
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDriveState.fanOff;
        onChanged();
        return this;
      }
      
      // optional float fanSpeed = 3;
      private float fanSpeed_ ;
      public boolean hasFanSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getFanSpeed() {
        return fanSpeed_;
      }
      public Builder setFanSpeed(float value) {
        bitField0_ |= 0x00000004;
        fanSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearFanSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fanSpeed_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FanDrive)
    }
    
    static {
      defaultInstance = new FanDrive(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FanDrive)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FanDrive_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FanDrive_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4core/proto/terminal/CANBUSData/Report/" +
      "FanDrive.proto\"T\n\010FanDrive\022\027\n\017fanSpeedPe" +
      "rcent\030\001 \001(\002\022\035\n\005state\030\002 \001(\0162\016.FanDriveSta" +
      "te\022\020\n\010fanSpeed\030\003 \001(\002*\370\001\n\rFanDriveState\022\n" +
      "\n\006fanOff\020\000\022\020\n\014engineSystem\020\001\022\032\n\026excessiv" +
      "eEngineAirTemp\020\002\022\032\n\026excessiveEngineOilTe" +
      "mp\020\003\022\032\n\026excessiveEngineCoolant\020\004\022\021\n\rmanu" +
      "alControl\020\t\022\030\n\024transmissionRetarder\020\n\022\014\n" +
      "\010aCSystem\020\013\022\t\n\005timer\020\014\022\017\n\013engineBrake\020\r\022" +
      "\t\n\005other\020\016\022\023\n\017notAvailableFan\020\017BW\nIcom.n",
      "avinfo.opentsp.platform.location.protoco" +
      "l.terminal.CANBUSData.ReportB\nLCFanDrive"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FanDrive_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FanDrive_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FanDrive_descriptor,
              new java.lang.String[] { "FanSpeedPercent", "State", "FanSpeed", },
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCFanDrive.FanDrive.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
