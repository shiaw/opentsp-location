// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/CANBUSData/Report/EngineConfiguration.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report;

public final class LCEngineConfiguration {
  private LCEngineConfiguration() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EngineConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional float speedAtIdle01 = 1;
    boolean hasSpeedAtIdle01();
    float getSpeedAtIdle01();
    
    // optional int32 torqueAtIdle01 = 2;
    boolean hasTorqueAtIdle01();
    int getTorqueAtIdle01();
    
    // optional float maxSpeed02 = 3;
    boolean hasMaxSpeed02();
    float getMaxSpeed02();
    
    // optional int32 torqueAtMaxSpeed02 = 4;
    boolean hasTorqueAtMaxSpeed02();
    int getTorqueAtMaxSpeed02();
    
    // optional float speed03 = 5;
    boolean hasSpeed03();
    float getSpeed03();
    
    // optional int32 torque03 = 6;
    boolean hasTorque03();
    int getTorque03();
    
    // optional float speed04 = 7;
    boolean hasSpeed04();
    float getSpeed04();
    
    // optional int32 torque04 = 8;
    boolean hasTorque04();
    int getTorque04();
    
    // optional float speed05 = 9;
    boolean hasSpeed05();
    float getSpeed05();
    
    // optional int32 torque05 = 10;
    boolean hasTorque05();
    int getTorque05();
    
    // optional float speed06 = 11;
    boolean hasSpeed06();
    float getSpeed06();
    
    // optional float speedGovernor = 12;
    boolean hasSpeedGovernor();
    float getSpeedGovernor();
    
    // optional int32 referenceTorque = 13;
    boolean hasReferenceTorque();
    int getReferenceTorque();
    
    // optional float maxMomentarySpeed = 14;
    boolean hasMaxMomentarySpeed();
    float getMaxMomentarySpeed();
    
    // optional float maxMomentaryTimeLimit = 15;
    boolean hasMaxMomentaryTimeLimit();
    float getMaxMomentaryTimeLimit();
    
    // optional int32 speedRangeLowerLimit = 16;
    boolean hasSpeedRangeLowerLimit();
    int getSpeedRangeLowerLimit();
    
    // optional int32 speedRangeUpperLimit04 = 17;
    boolean hasSpeedRangeUpperLimit04();
    int getSpeedRangeUpperLimit04();
    
    // optional int32 torqueRangeLowerLimit = 18;
    boolean hasTorqueRangeLowerLimit();
    int getTorqueRangeLowerLimit();
    
    // optional int32 torqueRangeUpperLimit = 19;
    boolean hasTorqueRangeUpperLimit();
    int getTorqueRangeUpperLimit();
    
    // optional int32 speedRangeUpperLimit05 = 20;
    boolean hasSpeedRangeUpperLimit05();
    int getSpeedRangeUpperLimit05();
    
    // optional float engineMomentOfInertia = 21;
    boolean hasEngineMomentOfInertia();
    float getEngineMomentOfInertia();
  }
  public static final class EngineConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements EngineConfigurationOrBuilder {
    // Use EngineConfiguration.newBuilder() to construct.
    private EngineConfiguration(Builder builder) {
      super(builder);
    }
    private EngineConfiguration(boolean noInit) {}
    
    private static final EngineConfiguration defaultInstance;
    public static EngineConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public EngineConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.internal_static_EngineConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.internal_static_EngineConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional float speedAtIdle01 = 1;
    public static final int SPEEDATIDLE01_FIELD_NUMBER = 1;
    private float speedAtIdle01_;
    public boolean hasSpeedAtIdle01() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getSpeedAtIdle01() {
      return speedAtIdle01_;
    }
    
    // optional int32 torqueAtIdle01 = 2;
    public static final int TORQUEATIDLE01_FIELD_NUMBER = 2;
    private int torqueAtIdle01_;
    public boolean hasTorqueAtIdle01() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTorqueAtIdle01() {
      return torqueAtIdle01_;
    }
    
    // optional float maxSpeed02 = 3;
    public static final int MAXSPEED02_FIELD_NUMBER = 3;
    private float maxSpeed02_;
    public boolean hasMaxSpeed02() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getMaxSpeed02() {
      return maxSpeed02_;
    }
    
    // optional int32 torqueAtMaxSpeed02 = 4;
    public static final int TORQUEATMAXSPEED02_FIELD_NUMBER = 4;
    private int torqueAtMaxSpeed02_;
    public boolean hasTorqueAtMaxSpeed02() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTorqueAtMaxSpeed02() {
      return torqueAtMaxSpeed02_;
    }
    
    // optional float speed03 = 5;
    public static final int SPEED03_FIELD_NUMBER = 5;
    private float speed03_;
    public boolean hasSpeed03() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getSpeed03() {
      return speed03_;
    }
    
    // optional int32 torque03 = 6;
    public static final int TORQUE03_FIELD_NUMBER = 6;
    private int torque03_;
    public boolean hasTorque03() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTorque03() {
      return torque03_;
    }
    
    // optional float speed04 = 7;
    public static final int SPEED04_FIELD_NUMBER = 7;
    private float speed04_;
    public boolean hasSpeed04() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getSpeed04() {
      return speed04_;
    }
    
    // optional int32 torque04 = 8;
    public static final int TORQUE04_FIELD_NUMBER = 8;
    private int torque04_;
    public boolean hasTorque04() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getTorque04() {
      return torque04_;
    }
    
    // optional float speed05 = 9;
    public static final int SPEED05_FIELD_NUMBER = 9;
    private float speed05_;
    public boolean hasSpeed05() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getSpeed05() {
      return speed05_;
    }
    
    // optional int32 torque05 = 10;
    public static final int TORQUE05_FIELD_NUMBER = 10;
    private int torque05_;
    public boolean hasTorque05() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getTorque05() {
      return torque05_;
    }
    
    // optional float speed06 = 11;
    public static final int SPEED06_FIELD_NUMBER = 11;
    private float speed06_;
    public boolean hasSpeed06() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getSpeed06() {
      return speed06_;
    }
    
    // optional float speedGovernor = 12;
    public static final int SPEEDGOVERNOR_FIELD_NUMBER = 12;
    private float speedGovernor_;
    public boolean hasSpeedGovernor() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public float getSpeedGovernor() {
      return speedGovernor_;
    }
    
    // optional int32 referenceTorque = 13;
    public static final int REFERENCETORQUE_FIELD_NUMBER = 13;
    private int referenceTorque_;
    public boolean hasReferenceTorque() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getReferenceTorque() {
      return referenceTorque_;
    }
    
    // optional float maxMomentarySpeed = 14;
    public static final int MAXMOMENTARYSPEED_FIELD_NUMBER = 14;
    private float maxMomentarySpeed_;
    public boolean hasMaxMomentarySpeed() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public float getMaxMomentarySpeed() {
      return maxMomentarySpeed_;
    }
    
    // optional float maxMomentaryTimeLimit = 15;
    public static final int MAXMOMENTARYTIMELIMIT_FIELD_NUMBER = 15;
    private float maxMomentaryTimeLimit_;
    public boolean hasMaxMomentaryTimeLimit() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public float getMaxMomentaryTimeLimit() {
      return maxMomentaryTimeLimit_;
    }
    
    // optional int32 speedRangeLowerLimit = 16;
    public static final int SPEEDRANGELOWERLIMIT_FIELD_NUMBER = 16;
    private int speedRangeLowerLimit_;
    public boolean hasSpeedRangeLowerLimit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getSpeedRangeLowerLimit() {
      return speedRangeLowerLimit_;
    }
    
    // optional int32 speedRangeUpperLimit04 = 17;
    public static final int SPEEDRANGEUPPERLIMIT04_FIELD_NUMBER = 17;
    private int speedRangeUpperLimit04_;
    public boolean hasSpeedRangeUpperLimit04() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getSpeedRangeUpperLimit04() {
      return speedRangeUpperLimit04_;
    }
    
    // optional int32 torqueRangeLowerLimit = 18;
    public static final int TORQUERANGELOWERLIMIT_FIELD_NUMBER = 18;
    private int torqueRangeLowerLimit_;
    public boolean hasTorqueRangeLowerLimit() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getTorqueRangeLowerLimit() {
      return torqueRangeLowerLimit_;
    }
    
    // optional int32 torqueRangeUpperLimit = 19;
    public static final int TORQUERANGEUPPERLIMIT_FIELD_NUMBER = 19;
    private int torqueRangeUpperLimit_;
    public boolean hasTorqueRangeUpperLimit() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getTorqueRangeUpperLimit() {
      return torqueRangeUpperLimit_;
    }
    
    // optional int32 speedRangeUpperLimit05 = 20;
    public static final int SPEEDRANGEUPPERLIMIT05_FIELD_NUMBER = 20;
    private int speedRangeUpperLimit05_;
    public boolean hasSpeedRangeUpperLimit05() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getSpeedRangeUpperLimit05() {
      return speedRangeUpperLimit05_;
    }
    
    // optional float engineMomentOfInertia = 21;
    public static final int ENGINEMOMENTOFINERTIA_FIELD_NUMBER = 21;
    private float engineMomentOfInertia_;
    public boolean hasEngineMomentOfInertia() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public float getEngineMomentOfInertia() {
      return engineMomentOfInertia_;
    }
    
    private void initFields() {
      speedAtIdle01_ = 0F;
      torqueAtIdle01_ = 0;
      maxSpeed02_ = 0F;
      torqueAtMaxSpeed02_ = 0;
      speed03_ = 0F;
      torque03_ = 0;
      speed04_ = 0F;
      torque04_ = 0;
      speed05_ = 0F;
      torque05_ = 0;
      speed06_ = 0F;
      speedGovernor_ = 0F;
      referenceTorque_ = 0;
      maxMomentarySpeed_ = 0F;
      maxMomentaryTimeLimit_ = 0F;
      speedRangeLowerLimit_ = 0;
      speedRangeUpperLimit04_ = 0;
      torqueRangeLowerLimit_ = 0;
      torqueRangeUpperLimit_ = 0;
      speedRangeUpperLimit05_ = 0;
      engineMomentOfInertia_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, speedAtIdle01_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, torqueAtIdle01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, maxSpeed02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, torqueAtMaxSpeed02_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, speed03_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, torque03_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, speed04_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, torque04_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, speed05_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, torque05_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, speed06_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, speedGovernor_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, referenceTorque_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, maxMomentarySpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, maxMomentaryTimeLimit_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, speedRangeLowerLimit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, speedRangeUpperLimit04_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, torqueRangeLowerLimit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, torqueRangeUpperLimit_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, speedRangeUpperLimit05_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(21, engineMomentOfInertia_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, speedAtIdle01_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, torqueAtIdle01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxSpeed02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, torqueAtMaxSpeed02_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, speed03_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, torque03_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, speed04_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, torque04_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, speed05_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, torque05_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, speed06_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, speedGovernor_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, referenceTorque_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, maxMomentarySpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, maxMomentaryTimeLimit_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, speedRangeLowerLimit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, speedRangeUpperLimit04_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, torqueRangeLowerLimit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, torqueRangeUpperLimit_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, speedRangeUpperLimit05_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, engineMomentOfInertia_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.internal_static_EngineConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.internal_static_EngineConfiguration_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        speedAtIdle01_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        torqueAtIdle01_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxSpeed02_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        torqueAtMaxSpeed02_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed03_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        torque03_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        speed04_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        torque04_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        speed05_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        torque05_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        speed06_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        speedGovernor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        referenceTorque_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        maxMomentarySpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        maxMomentaryTimeLimit_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        speedRangeLowerLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        speedRangeUpperLimit04_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        torqueRangeLowerLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        torqueRangeUpperLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        speedRangeUpperLimit05_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        engineMomentOfInertia_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration result = new com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speedAtIdle01_ = speedAtIdle01_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.torqueAtIdle01_ = torqueAtIdle01_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxSpeed02_ = maxSpeed02_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.torqueAtMaxSpeed02_ = torqueAtMaxSpeed02_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed03_ = speed03_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.torque03_ = torque03_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.speed04_ = speed04_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.torque04_ = torque04_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.speed05_ = speed05_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.torque05_ = torque05_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.speed06_ = speed06_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.speedGovernor_ = speedGovernor_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.referenceTorque_ = referenceTorque_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.maxMomentarySpeed_ = maxMomentarySpeed_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.maxMomentaryTimeLimit_ = maxMomentaryTimeLimit_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.speedRangeLowerLimit_ = speedRangeLowerLimit_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.speedRangeUpperLimit04_ = speedRangeUpperLimit04_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.torqueRangeLowerLimit_ = torqueRangeLowerLimit_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.torqueRangeUpperLimit_ = torqueRangeUpperLimit_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.speedRangeUpperLimit05_ = speedRangeUpperLimit05_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.engineMomentOfInertia_ = engineMomentOfInertia_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.getDefaultInstance()) return this;
        if (other.hasSpeedAtIdle01()) {
          setSpeedAtIdle01(other.getSpeedAtIdle01());
        }
        if (other.hasTorqueAtIdle01()) {
          setTorqueAtIdle01(other.getTorqueAtIdle01());
        }
        if (other.hasMaxSpeed02()) {
          setMaxSpeed02(other.getMaxSpeed02());
        }
        if (other.hasTorqueAtMaxSpeed02()) {
          setTorqueAtMaxSpeed02(other.getTorqueAtMaxSpeed02());
        }
        if (other.hasSpeed03()) {
          setSpeed03(other.getSpeed03());
        }
        if (other.hasTorque03()) {
          setTorque03(other.getTorque03());
        }
        if (other.hasSpeed04()) {
          setSpeed04(other.getSpeed04());
        }
        if (other.hasTorque04()) {
          setTorque04(other.getTorque04());
        }
        if (other.hasSpeed05()) {
          setSpeed05(other.getSpeed05());
        }
        if (other.hasTorque05()) {
          setTorque05(other.getTorque05());
        }
        if (other.hasSpeed06()) {
          setSpeed06(other.getSpeed06());
        }
        if (other.hasSpeedGovernor()) {
          setSpeedGovernor(other.getSpeedGovernor());
        }
        if (other.hasReferenceTorque()) {
          setReferenceTorque(other.getReferenceTorque());
        }
        if (other.hasMaxMomentarySpeed()) {
          setMaxMomentarySpeed(other.getMaxMomentarySpeed());
        }
        if (other.hasMaxMomentaryTimeLimit()) {
          setMaxMomentaryTimeLimit(other.getMaxMomentaryTimeLimit());
        }
        if (other.hasSpeedRangeLowerLimit()) {
          setSpeedRangeLowerLimit(other.getSpeedRangeLowerLimit());
        }
        if (other.hasSpeedRangeUpperLimit04()) {
          setSpeedRangeUpperLimit04(other.getSpeedRangeUpperLimit04());
        }
        if (other.hasTorqueRangeLowerLimit()) {
          setTorqueRangeLowerLimit(other.getTorqueRangeLowerLimit());
        }
        if (other.hasTorqueRangeUpperLimit()) {
          setTorqueRangeUpperLimit(other.getTorqueRangeUpperLimit());
        }
        if (other.hasSpeedRangeUpperLimit05()) {
          setSpeedRangeUpperLimit05(other.getSpeedRangeUpperLimit05());
        }
        if (other.hasEngineMomentOfInertia()) {
          setEngineMomentOfInertia(other.getEngineMomentOfInertia());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              speedAtIdle01_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              torqueAtIdle01_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxSpeed02_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              torqueAtMaxSpeed02_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              speed03_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              torque03_ = input.readInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              speed04_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              torque04_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              speed05_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              torque05_ = input.readInt32();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              speed06_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              speedGovernor_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              referenceTorque_ = input.readInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              maxMomentarySpeed_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              maxMomentaryTimeLimit_ = input.readFloat();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              speedRangeLowerLimit_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              speedRangeUpperLimit04_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              torqueRangeLowerLimit_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              torqueRangeUpperLimit_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              speedRangeUpperLimit05_ = input.readInt32();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              engineMomentOfInertia_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional float speedAtIdle01 = 1;
      private float speedAtIdle01_ ;
      public boolean hasSpeedAtIdle01() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getSpeedAtIdle01() {
        return speedAtIdle01_;
      }
      public Builder setSpeedAtIdle01(float value) {
        bitField0_ |= 0x00000001;
        speedAtIdle01_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeedAtIdle01() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speedAtIdle01_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 torqueAtIdle01 = 2;
      private int torqueAtIdle01_ ;
      public boolean hasTorqueAtIdle01() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTorqueAtIdle01() {
        return torqueAtIdle01_;
      }
      public Builder setTorqueAtIdle01(int value) {
        bitField0_ |= 0x00000002;
        torqueAtIdle01_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorqueAtIdle01() {
        bitField0_ = (bitField0_ & ~0x00000002);
        torqueAtIdle01_ = 0;
        onChanged();
        return this;
      }
      
      // optional float maxSpeed02 = 3;
      private float maxSpeed02_ ;
      public boolean hasMaxSpeed02() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getMaxSpeed02() {
        return maxSpeed02_;
      }
      public Builder setMaxSpeed02(float value) {
        bitField0_ |= 0x00000004;
        maxSpeed02_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxSpeed02() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxSpeed02_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 torqueAtMaxSpeed02 = 4;
      private int torqueAtMaxSpeed02_ ;
      public boolean hasTorqueAtMaxSpeed02() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTorqueAtMaxSpeed02() {
        return torqueAtMaxSpeed02_;
      }
      public Builder setTorqueAtMaxSpeed02(int value) {
        bitField0_ |= 0x00000008;
        torqueAtMaxSpeed02_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorqueAtMaxSpeed02() {
        bitField0_ = (bitField0_ & ~0x00000008);
        torqueAtMaxSpeed02_ = 0;
        onChanged();
        return this;
      }
      
      // optional float speed03 = 5;
      private float speed03_ ;
      public boolean hasSpeed03() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getSpeed03() {
        return speed03_;
      }
      public Builder setSpeed03(float value) {
        bitField0_ |= 0x00000010;
        speed03_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed03() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed03_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 torque03 = 6;
      private int torque03_ ;
      public boolean hasTorque03() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTorque03() {
        return torque03_;
      }
      public Builder setTorque03(int value) {
        bitField0_ |= 0x00000020;
        torque03_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorque03() {
        bitField0_ = (bitField0_ & ~0x00000020);
        torque03_ = 0;
        onChanged();
        return this;
      }
      
      // optional float speed04 = 7;
      private float speed04_ ;
      public boolean hasSpeed04() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getSpeed04() {
        return speed04_;
      }
      public Builder setSpeed04(float value) {
        bitField0_ |= 0x00000040;
        speed04_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed04() {
        bitField0_ = (bitField0_ & ~0x00000040);
        speed04_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 torque04 = 8;
      private int torque04_ ;
      public boolean hasTorque04() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getTorque04() {
        return torque04_;
      }
      public Builder setTorque04(int value) {
        bitField0_ |= 0x00000080;
        torque04_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorque04() {
        bitField0_ = (bitField0_ & ~0x00000080);
        torque04_ = 0;
        onChanged();
        return this;
      }
      
      // optional float speed05 = 9;
      private float speed05_ ;
      public boolean hasSpeed05() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getSpeed05() {
        return speed05_;
      }
      public Builder setSpeed05(float value) {
        bitField0_ |= 0x00000100;
        speed05_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed05() {
        bitField0_ = (bitField0_ & ~0x00000100);
        speed05_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 torque05 = 10;
      private int torque05_ ;
      public boolean hasTorque05() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getTorque05() {
        return torque05_;
      }
      public Builder setTorque05(int value) {
        bitField0_ |= 0x00000200;
        torque05_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorque05() {
        bitField0_ = (bitField0_ & ~0x00000200);
        torque05_ = 0;
        onChanged();
        return this;
      }
      
      // optional float speed06 = 11;
      private float speed06_ ;
      public boolean hasSpeed06() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getSpeed06() {
        return speed06_;
      }
      public Builder setSpeed06(float value) {
        bitField0_ |= 0x00000400;
        speed06_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed06() {
        bitField0_ = (bitField0_ & ~0x00000400);
        speed06_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float speedGovernor = 12;
      private float speedGovernor_ ;
      public boolean hasSpeedGovernor() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public float getSpeedGovernor() {
        return speedGovernor_;
      }
      public Builder setSpeedGovernor(float value) {
        bitField0_ |= 0x00000800;
        speedGovernor_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeedGovernor() {
        bitField0_ = (bitField0_ & ~0x00000800);
        speedGovernor_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 referenceTorque = 13;
      private int referenceTorque_ ;
      public boolean hasReferenceTorque() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getReferenceTorque() {
        return referenceTorque_;
      }
      public Builder setReferenceTorque(int value) {
        bitField0_ |= 0x00001000;
        referenceTorque_ = value;
        onChanged();
        return this;
      }
      public Builder clearReferenceTorque() {
        bitField0_ = (bitField0_ & ~0x00001000);
        referenceTorque_ = 0;
        onChanged();
        return this;
      }
      
      // optional float maxMomentarySpeed = 14;
      private float maxMomentarySpeed_ ;
      public boolean hasMaxMomentarySpeed() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public float getMaxMomentarySpeed() {
        return maxMomentarySpeed_;
      }
      public Builder setMaxMomentarySpeed(float value) {
        bitField0_ |= 0x00002000;
        maxMomentarySpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxMomentarySpeed() {
        bitField0_ = (bitField0_ & ~0x00002000);
        maxMomentarySpeed_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float maxMomentaryTimeLimit = 15;
      private float maxMomentaryTimeLimit_ ;
      public boolean hasMaxMomentaryTimeLimit() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public float getMaxMomentaryTimeLimit() {
        return maxMomentaryTimeLimit_;
      }
      public Builder setMaxMomentaryTimeLimit(float value) {
        bitField0_ |= 0x00004000;
        maxMomentaryTimeLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxMomentaryTimeLimit() {
        bitField0_ = (bitField0_ & ~0x00004000);
        maxMomentaryTimeLimit_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 speedRangeLowerLimit = 16;
      private int speedRangeLowerLimit_ ;
      public boolean hasSpeedRangeLowerLimit() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getSpeedRangeLowerLimit() {
        return speedRangeLowerLimit_;
      }
      public Builder setSpeedRangeLowerLimit(int value) {
        bitField0_ |= 0x00008000;
        speedRangeLowerLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeedRangeLowerLimit() {
        bitField0_ = (bitField0_ & ~0x00008000);
        speedRangeLowerLimit_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 speedRangeUpperLimit04 = 17;
      private int speedRangeUpperLimit04_ ;
      public boolean hasSpeedRangeUpperLimit04() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getSpeedRangeUpperLimit04() {
        return speedRangeUpperLimit04_;
      }
      public Builder setSpeedRangeUpperLimit04(int value) {
        bitField0_ |= 0x00010000;
        speedRangeUpperLimit04_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeedRangeUpperLimit04() {
        bitField0_ = (bitField0_ & ~0x00010000);
        speedRangeUpperLimit04_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 torqueRangeLowerLimit = 18;
      private int torqueRangeLowerLimit_ ;
      public boolean hasTorqueRangeLowerLimit() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getTorqueRangeLowerLimit() {
        return torqueRangeLowerLimit_;
      }
      public Builder setTorqueRangeLowerLimit(int value) {
        bitField0_ |= 0x00020000;
        torqueRangeLowerLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorqueRangeLowerLimit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        torqueRangeLowerLimit_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 torqueRangeUpperLimit = 19;
      private int torqueRangeUpperLimit_ ;
      public boolean hasTorqueRangeUpperLimit() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getTorqueRangeUpperLimit() {
        return torqueRangeUpperLimit_;
      }
      public Builder setTorqueRangeUpperLimit(int value) {
        bitField0_ |= 0x00040000;
        torqueRangeUpperLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearTorqueRangeUpperLimit() {
        bitField0_ = (bitField0_ & ~0x00040000);
        torqueRangeUpperLimit_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 speedRangeUpperLimit05 = 20;
      private int speedRangeUpperLimit05_ ;
      public boolean hasSpeedRangeUpperLimit05() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getSpeedRangeUpperLimit05() {
        return speedRangeUpperLimit05_;
      }
      public Builder setSpeedRangeUpperLimit05(int value) {
        bitField0_ |= 0x00080000;
        speedRangeUpperLimit05_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeedRangeUpperLimit05() {
        bitField0_ = (bitField0_ & ~0x00080000);
        speedRangeUpperLimit05_ = 0;
        onChanged();
        return this;
      }
      
      // optional float engineMomentOfInertia = 21;
      private float engineMomentOfInertia_ ;
      public boolean hasEngineMomentOfInertia() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public float getEngineMomentOfInertia() {
        return engineMomentOfInertia_;
      }
      public Builder setEngineMomentOfInertia(float value) {
        bitField0_ |= 0x00100000;
        engineMomentOfInertia_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineMomentOfInertia() {
        bitField0_ = (bitField0_ & ~0x00100000);
        engineMomentOfInertia_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EngineConfiguration)
    }
    
    static {
      defaultInstance = new EngineConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EngineConfiguration)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EngineConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EngineConfiguration_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n?core/proto/terminal/CANBUSData/Report/" +
      "EngineConfiguration.proto\"\223\004\n\023EngineConf" +
      "iguration\022\025\n\rspeedAtIdle01\030\001 \001(\002\022\026\n\016torq" +
      "ueAtIdle01\030\002 \001(\005\022\022\n\nmaxSpeed02\030\003 \001(\002\022\032\n\022" +
      "torqueAtMaxSpeed02\030\004 \001(\005\022\017\n\007speed03\030\005 \001(" +
      "\002\022\020\n\010torque03\030\006 \001(\005\022\017\n\007speed04\030\007 \001(\002\022\020\n\010" +
      "torque04\030\010 \001(\005\022\017\n\007speed05\030\t \001(\002\022\020\n\010torqu" +
      "e05\030\n \001(\005\022\017\n\007speed06\030\013 \001(\002\022\025\n\rspeedGover" +
      "nor\030\014 \001(\002\022\027\n\017referenceTorque\030\r \001(\005\022\031\n\021ma" +
      "xMomentarySpeed\030\016 \001(\002\022\035\n\025maxMomentaryTim",
      "eLimit\030\017 \001(\002\022\034\n\024speedRangeLowerLimit\030\020 \001" +
      "(\005\022\036\n\026speedRangeUpperLimit04\030\021 \001(\005\022\035\n\025to" +
      "rqueRangeLowerLimit\030\022 \001(\005\022\035\n\025torqueRange" +
      "UpperLimit\030\023 \001(\005\022\036\n\026speedRangeUpperLimit" +
      "05\030\024 \001(\005\022\035\n\025engineMomentOfInertia\030\025 \001(\002B" +
      "b\nIcom.navinfo.opentsp.platform.location" +
      ".protocol.terminal.CANBUSData.ReportB\025LC" +
      "EngineConfiguration"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EngineConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EngineConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EngineConfiguration_descriptor,
              new java.lang.String[] { "SpeedAtIdle01", "TorqueAtIdle01", "MaxSpeed02", "TorqueAtMaxSpeed02", "Speed03", "Torque03", "Speed04", "Torque04", "Speed05", "Torque05", "Speed06", "SpeedGovernor", "ReferenceTorque", "MaxMomentarySpeed", "MaxMomentaryTimeLimit", "SpeedRangeLowerLimit", "SpeedRangeUpperLimit04", "TorqueRangeLowerLimit", "TorqueRangeUpperLimit", "SpeedRangeUpperLimit05", "EngineMomentOfInertia", },
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineConfiguration.EngineConfiguration.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
