// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/nodecluster/java/HeartBeatToMM.proto

package com.navinfo.opentsp.platform.location.protocol.nodecluster;

public final class LCHeartBeatToMM {
  private LCHeartBeatToMM() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeartBeatToMMOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 nodeCode = 1;
    boolean hasNodeCode();
    long getNodeCode();
    
    // required .CpuInfo cpuInfos = 2;
    boolean hasCpuInfos();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo getCpuInfos();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder getCpuInfosOrBuilder();
    
    // required .MemoryInfo memoryInfos = 3;
    boolean hasMemoryInfos();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo getMemoryInfos();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder getMemoryInfosOrBuilder();
    
    // repeated .MonitorCacheSize cacheSize = 4;
    java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> 
        getCacheSizeList();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize getCacheSize(int index);
    int getCacheSizeCount();
    java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder> 
        getCacheSizeOrBuilderList();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder getCacheSizeOrBuilder(
        int index);
    
    // repeated .MonitorThreadStatus threadStatus = 5;
    java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> 
        getThreadStatusList();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus getThreadStatus(int index);
    int getThreadStatusCount();
    java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder> 
        getThreadStatusOrBuilderList();
    com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder getThreadStatusOrBuilder(
        int index);
  }
  public static final class HeartBeatToMM extends
      com.google.protobuf.GeneratedMessage
      implements HeartBeatToMMOrBuilder {
    // Use HeartBeatToMM.newBuilder() to construct.
    private HeartBeatToMM(Builder builder) {
      super(builder);
    }
    private HeartBeatToMM(boolean noInit) {}
    
    private static final HeartBeatToMM defaultInstance;
    public static HeartBeatToMM getDefaultInstance() {
      return defaultInstance;
    }
    
    public HeartBeatToMM getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.internal_static_HeartBeatToMM_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.internal_static_HeartBeatToMM_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 nodeCode = 1;
    public static final int NODECODE_FIELD_NUMBER = 1;
    private long nodeCode_;
    public boolean hasNodeCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getNodeCode() {
      return nodeCode_;
    }
    
    // required .CpuInfo cpuInfos = 2;
    public static final int CPUINFOS_FIELD_NUMBER = 2;
    private com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo cpuInfos_;
    public boolean hasCpuInfos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo getCpuInfos() {
      return cpuInfos_;
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder getCpuInfosOrBuilder() {
      return cpuInfos_;
    }
    
    // required .MemoryInfo memoryInfos = 3;
    public static final int MEMORYINFOS_FIELD_NUMBER = 3;
    private com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo memoryInfos_;
    public boolean hasMemoryInfos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo getMemoryInfos() {
      return memoryInfos_;
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder getMemoryInfosOrBuilder() {
      return memoryInfos_;
    }
    
    // repeated .MonitorCacheSize cacheSize = 4;
    public static final int CACHESIZE_FIELD_NUMBER = 4;
    private java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> cacheSize_;
    public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> getCacheSizeList() {
      return cacheSize_;
    }
    public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder> 
        getCacheSizeOrBuilderList() {
      return cacheSize_;
    }
    public int getCacheSizeCount() {
      return cacheSize_.size();
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize getCacheSize(int index) {
      return cacheSize_.get(index);
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder getCacheSizeOrBuilder(
        int index) {
      return cacheSize_.get(index);
    }
    
    // repeated .MonitorThreadStatus threadStatus = 5;
    public static final int THREADSTATUS_FIELD_NUMBER = 5;
    private java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> threadStatus_;
    public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> getThreadStatusList() {
      return threadStatus_;
    }
    public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder> 
        getThreadStatusOrBuilderList() {
      return threadStatus_;
    }
    public int getThreadStatusCount() {
      return threadStatus_.size();
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus getThreadStatus(int index) {
      return threadStatus_.get(index);
    }
    public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder getThreadStatusOrBuilder(
        int index) {
      return threadStatus_.get(index);
    }
    
    private void initFields() {
      nodeCode_ = 0L;
      cpuInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.getDefaultInstance();
      memoryInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.getDefaultInstance();
      cacheSize_ = java.util.Collections.emptyList();
      threadStatus_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasNodeCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuInfos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemoryInfos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCpuInfos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMemoryInfos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCacheSizeCount(); i++) {
        if (!getCacheSize(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getThreadStatusCount(); i++) {
        if (!getThreadStatus(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, nodeCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, cpuInfos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, memoryInfos_);
      }
      for (int i = 0; i < cacheSize_.size(); i++) {
        output.writeMessage(4, cacheSize_.get(i));
      }
      for (int i = 0; i < threadStatus_.size(); i++) {
        output.writeMessage(5, threadStatus_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nodeCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cpuInfos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, memoryInfos_);
      }
      for (int i = 0; i < cacheSize_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cacheSize_.get(i));
      }
      for (int i = 0; i < threadStatus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, threadStatus_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMMOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.internal_static_HeartBeatToMM_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.internal_static_HeartBeatToMM_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCpuInfosFieldBuilder();
          getMemoryInfosFieldBuilder();
          getCacheSizeFieldBuilder();
          getThreadStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        nodeCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cpuInfosBuilder_ == null) {
          cpuInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.getDefaultInstance();
        } else {
          cpuInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (memoryInfosBuilder_ == null) {
          memoryInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.getDefaultInstance();
        } else {
          memoryInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cacheSizeBuilder_ == null) {
          cacheSize_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cacheSizeBuilder_.clear();
        }
        if (threadStatusBuilder_ == null) {
          threadStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          threadStatusBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM build() {
        com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM result = new com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeCode_ = nodeCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (cpuInfosBuilder_ == null) {
          result.cpuInfos_ = cpuInfos_;
        } else {
          result.cpuInfos_ = cpuInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (memoryInfosBuilder_ == null) {
          result.memoryInfos_ = memoryInfos_;
        } else {
          result.memoryInfos_ = memoryInfosBuilder_.build();
        }
        if (cacheSizeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cacheSize_ = java.util.Collections.unmodifiableList(cacheSize_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cacheSize_ = cacheSize_;
        } else {
          result.cacheSize_ = cacheSizeBuilder_.build();
        }
        if (threadStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            threadStatus_ = java.util.Collections.unmodifiableList(threadStatus_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.threadStatus_ = threadStatus_;
        } else {
          result.threadStatus_ = threadStatusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.getDefaultInstance()) return this;
        if (other.hasNodeCode()) {
          setNodeCode(other.getNodeCode());
        }
        if (other.hasCpuInfos()) {
          mergeCpuInfos(other.getCpuInfos());
        }
        if (other.hasMemoryInfos()) {
          mergeMemoryInfos(other.getMemoryInfos());
        }
        if (cacheSizeBuilder_ == null) {
          if (!other.cacheSize_.isEmpty()) {
            if (cacheSize_.isEmpty()) {
              cacheSize_ = other.cacheSize_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCacheSizeIsMutable();
              cacheSize_.addAll(other.cacheSize_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheSize_.isEmpty()) {
            if (cacheSizeBuilder_.isEmpty()) {
              cacheSizeBuilder_.dispose();
              cacheSizeBuilder_ = null;
              cacheSize_ = other.cacheSize_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cacheSizeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheSizeFieldBuilder() : null;
            } else {
              cacheSizeBuilder_.addAllMessages(other.cacheSize_);
            }
          }
        }
        if (threadStatusBuilder_ == null) {
          if (!other.threadStatus_.isEmpty()) {
            if (threadStatus_.isEmpty()) {
              threadStatus_ = other.threadStatus_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureThreadStatusIsMutable();
              threadStatus_.addAll(other.threadStatus_);
            }
            onChanged();
          }
        } else {
          if (!other.threadStatus_.isEmpty()) {
            if (threadStatusBuilder_.isEmpty()) {
              threadStatusBuilder_.dispose();
              threadStatusBuilder_ = null;
              threadStatus_ = other.threadStatus_;
              bitField0_ = (bitField0_ & ~0x00000010);
              threadStatusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getThreadStatusFieldBuilder() : null;
            } else {
              threadStatusBuilder_.addAllMessages(other.threadStatus_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasNodeCode()) {
          
          return false;
        }
        if (!hasCpuInfos()) {
          
          return false;
        }
        if (!hasMemoryInfos()) {
          
          return false;
        }
        if (!getCpuInfos().isInitialized()) {
          
          return false;
        }
        if (!getMemoryInfos().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getCacheSizeCount(); i++) {
          if (!getCacheSize(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getThreadStatusCount(); i++) {
          if (!getThreadStatus(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nodeCode_ = input.readInt64();
              break;
            }
            case 18: {
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.newBuilder();
              if (hasCpuInfos()) {
                subBuilder.mergeFrom(getCpuInfos());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCpuInfos(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.newBuilder();
              if (hasMemoryInfos()) {
                subBuilder.mergeFrom(getMemoryInfos());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemoryInfos(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCacheSize(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addThreadStatus(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 nodeCode = 1;
      private long nodeCode_ ;
      public boolean hasNodeCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getNodeCode() {
        return nodeCode_;
      }
      public Builder setNodeCode(long value) {
        bitField0_ |= 0x00000001;
        nodeCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearNodeCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeCode_ = 0L;
        onChanged();
        return this;
      }
      
      // required .CpuInfo cpuInfos = 2;
      private com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo cpuInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder> cpuInfosBuilder_;
      public boolean hasCpuInfos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo getCpuInfos() {
        if (cpuInfosBuilder_ == null) {
          return cpuInfos_;
        } else {
          return cpuInfosBuilder_.getMessage();
        }
      }
      public Builder setCpuInfos(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo value) {
        if (cpuInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cpuInfos_ = value;
          onChanged();
        } else {
          cpuInfosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setCpuInfos(
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder builderForValue) {
        if (cpuInfosBuilder_ == null) {
          cpuInfos_ = builderForValue.build();
          onChanged();
        } else {
          cpuInfosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeCpuInfos(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo value) {
        if (cpuInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              cpuInfos_ != com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.getDefaultInstance()) {
            cpuInfos_ =
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.newBuilder(cpuInfos_).mergeFrom(value).buildPartial();
          } else {
            cpuInfos_ = value;
          }
          onChanged();
        } else {
          cpuInfosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearCpuInfos() {
        if (cpuInfosBuilder_ == null) {
          cpuInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.getDefaultInstance();
          onChanged();
        } else {
          cpuInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder getCpuInfosBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCpuInfosFieldBuilder().getBuilder();
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder getCpuInfosOrBuilder() {
        if (cpuInfosBuilder_ != null) {
          return cpuInfosBuilder_.getMessageOrBuilder();
        } else {
          return cpuInfos_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder> 
          getCpuInfosFieldBuilder() {
        if (cpuInfosBuilder_ == null) {
          cpuInfosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.CpuInfoOrBuilder>(
                  cpuInfos_,
                  getParentForChildren(),
                  isClean());
          cpuInfos_ = null;
        }
        return cpuInfosBuilder_;
      }
      
      // required .MemoryInfo memoryInfos = 3;
      private com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo memoryInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder> memoryInfosBuilder_;
      public boolean hasMemoryInfos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo getMemoryInfos() {
        if (memoryInfosBuilder_ == null) {
          return memoryInfos_;
        } else {
          return memoryInfosBuilder_.getMessage();
        }
      }
      public Builder setMemoryInfos(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo value) {
        if (memoryInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          memoryInfos_ = value;
          onChanged();
        } else {
          memoryInfosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setMemoryInfos(
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder builderForValue) {
        if (memoryInfosBuilder_ == null) {
          memoryInfos_ = builderForValue.build();
          onChanged();
        } else {
          memoryInfosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeMemoryInfos(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo value) {
        if (memoryInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              memoryInfos_ != com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.getDefaultInstance()) {
            memoryInfos_ =
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.newBuilder(memoryInfos_).mergeFrom(value).buildPartial();
          } else {
            memoryInfos_ = value;
          }
          onChanged();
        } else {
          memoryInfosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearMemoryInfos() {
        if (memoryInfosBuilder_ == null) {
          memoryInfos_ = com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.getDefaultInstance();
          onChanged();
        } else {
          memoryInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder getMemoryInfosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMemoryInfosFieldBuilder().getBuilder();
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder getMemoryInfosOrBuilder() {
        if (memoryInfosBuilder_ != null) {
          return memoryInfosBuilder_.getMessageOrBuilder();
        } else {
          return memoryInfos_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder> 
          getMemoryInfosFieldBuilder() {
        if (memoryInfosBuilder_ == null) {
          memoryInfosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfo.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.MemoryInfoOrBuilder>(
                  memoryInfos_,
                  getParentForChildren(),
                  isClean());
          memoryInfos_ = null;
        }
        return memoryInfosBuilder_;
      }
      
      // repeated .MonitorCacheSize cacheSize = 4;
      private java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> cacheSize_ =
        java.util.Collections.emptyList();
      private void ensureCacheSizeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cacheSize_ = new java.util.ArrayList<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize>(cacheSize_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder> cacheSizeBuilder_;
      
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> getCacheSizeList() {
        if (cacheSizeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheSize_);
        } else {
          return cacheSizeBuilder_.getMessageList();
        }
      }
      public int getCacheSizeCount() {
        if (cacheSizeBuilder_ == null) {
          return cacheSize_.size();
        } else {
          return cacheSizeBuilder_.getCount();
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize getCacheSize(int index) {
        if (cacheSizeBuilder_ == null) {
          return cacheSize_.get(index);
        } else {
          return cacheSizeBuilder_.getMessage(index);
        }
      }
      public Builder setCacheSize(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize value) {
        if (cacheSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheSizeIsMutable();
          cacheSize_.set(index, value);
          onChanged();
        } else {
          cacheSizeBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCacheSize(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder builderForValue) {
        if (cacheSizeBuilder_ == null) {
          ensureCacheSizeIsMutable();
          cacheSize_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheSizeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCacheSize(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize value) {
        if (cacheSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheSizeIsMutable();
          cacheSize_.add(value);
          onChanged();
        } else {
          cacheSizeBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCacheSize(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize value) {
        if (cacheSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheSizeIsMutable();
          cacheSize_.add(index, value);
          onChanged();
        } else {
          cacheSizeBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCacheSize(
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder builderForValue) {
        if (cacheSizeBuilder_ == null) {
          ensureCacheSizeIsMutable();
          cacheSize_.add(builderForValue.build());
          onChanged();
        } else {
          cacheSizeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCacheSize(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder builderForValue) {
        if (cacheSizeBuilder_ == null) {
          ensureCacheSizeIsMutable();
          cacheSize_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheSizeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCacheSize(
          java.lang.Iterable<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize> values) {
        if (cacheSizeBuilder_ == null) {
          ensureCacheSizeIsMutable();
          super.addAll(values, cacheSize_);
          onChanged();
        } else {
          cacheSizeBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCacheSize() {
        if (cacheSizeBuilder_ == null) {
          cacheSize_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cacheSizeBuilder_.clear();
        }
        return this;
      }
      public Builder removeCacheSize(int index) {
        if (cacheSizeBuilder_ == null) {
          ensureCacheSizeIsMutable();
          cacheSize_.remove(index);
          onChanged();
        } else {
          cacheSizeBuilder_.remove(index);
        }
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder getCacheSizeBuilder(
          int index) {
        return getCacheSizeFieldBuilder().getBuilder(index);
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder getCacheSizeOrBuilder(
          int index) {
        if (cacheSizeBuilder_ == null) {
          return cacheSize_.get(index);  } else {
          return cacheSizeBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder> 
           getCacheSizeOrBuilderList() {
        if (cacheSizeBuilder_ != null) {
          return cacheSizeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheSize_);
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder addCacheSizeBuilder() {
        return getCacheSizeFieldBuilder().addBuilder(
            com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.getDefaultInstance());
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder addCacheSizeBuilder(
          int index) {
        return getCacheSizeFieldBuilder().addBuilder(
            index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.getDefaultInstance());
      }
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder> 
           getCacheSizeBuilderList() {
        return getCacheSizeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder> 
          getCacheSizeFieldBuilder() {
        if (cacheSizeBuilder_ == null) {
          cacheSizeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSize.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.MonitorCacheSizeOrBuilder>(
                  cacheSize_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cacheSize_ = null;
        }
        return cacheSizeBuilder_;
      }
      
      // repeated .MonitorThreadStatus threadStatus = 5;
      private java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> threadStatus_ =
        java.util.Collections.emptyList();
      private void ensureThreadStatusIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          threadStatus_ = new java.util.ArrayList<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus>(threadStatus_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder> threadStatusBuilder_;
      
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> getThreadStatusList() {
        if (threadStatusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(threadStatus_);
        } else {
          return threadStatusBuilder_.getMessageList();
        }
      }
      public int getThreadStatusCount() {
        if (threadStatusBuilder_ == null) {
          return threadStatus_.size();
        } else {
          return threadStatusBuilder_.getCount();
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus getThreadStatus(int index) {
        if (threadStatusBuilder_ == null) {
          return threadStatus_.get(index);
        } else {
          return threadStatusBuilder_.getMessage(index);
        }
      }
      public Builder setThreadStatus(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus value) {
        if (threadStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadStatusIsMutable();
          threadStatus_.set(index, value);
          onChanged();
        } else {
          threadStatusBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setThreadStatus(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder builderForValue) {
        if (threadStatusBuilder_ == null) {
          ensureThreadStatusIsMutable();
          threadStatus_.set(index, builderForValue.build());
          onChanged();
        } else {
          threadStatusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addThreadStatus(com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus value) {
        if (threadStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadStatusIsMutable();
          threadStatus_.add(value);
          onChanged();
        } else {
          threadStatusBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addThreadStatus(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus value) {
        if (threadStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadStatusIsMutable();
          threadStatus_.add(index, value);
          onChanged();
        } else {
          threadStatusBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addThreadStatus(
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder builderForValue) {
        if (threadStatusBuilder_ == null) {
          ensureThreadStatusIsMutable();
          threadStatus_.add(builderForValue.build());
          onChanged();
        } else {
          threadStatusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addThreadStatus(
          int index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder builderForValue) {
        if (threadStatusBuilder_ == null) {
          ensureThreadStatusIsMutable();
          threadStatus_.add(index, builderForValue.build());
          onChanged();
        } else {
          threadStatusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllThreadStatus(
          java.lang.Iterable<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus> values) {
        if (threadStatusBuilder_ == null) {
          ensureThreadStatusIsMutable();
          super.addAll(values, threadStatus_);
          onChanged();
        } else {
          threadStatusBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearThreadStatus() {
        if (threadStatusBuilder_ == null) {
          threadStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          threadStatusBuilder_.clear();
        }
        return this;
      }
      public Builder removeThreadStatus(int index) {
        if (threadStatusBuilder_ == null) {
          ensureThreadStatusIsMutable();
          threadStatus_.remove(index);
          onChanged();
        } else {
          threadStatusBuilder_.remove(index);
        }
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder getThreadStatusBuilder(
          int index) {
        return getThreadStatusFieldBuilder().getBuilder(index);
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder getThreadStatusOrBuilder(
          int index) {
        if (threadStatusBuilder_ == null) {
          return threadStatus_.get(index);  } else {
          return threadStatusBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder> 
           getThreadStatusOrBuilderList() {
        if (threadStatusBuilder_ != null) {
          return threadStatusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(threadStatus_);
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder addThreadStatusBuilder() {
        return getThreadStatusFieldBuilder().addBuilder(
            com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.getDefaultInstance());
      }
      public com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder addThreadStatusBuilder(
          int index) {
        return getThreadStatusFieldBuilder().addBuilder(
            index, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.getDefaultInstance());
      }
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder> 
           getThreadStatusBuilderList() {
        return getThreadStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder> 
          getThreadStatusFieldBuilder() {
        if (threadStatusBuilder_ == null) {
          threadStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder, com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder>(
                  threadStatus_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          threadStatus_ = null;
        }
        return threadStatusBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:HeartBeatToMM)
    }
    
    static {
      defaultInstance = new HeartBeatToMM(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:HeartBeatToMM)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartBeatToMM_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeartBeatToMM_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/core/proto/nodecluster/java/HeartBeatT" +
      "oMM.proto\0320core/proto/nodecluster/common" +
      "/java/CpuInfo.proto\0323core/proto/nodeclus" +
      "ter/common/java/MemoryInfo.proto\0329core/p" +
      "roto/nodecluster/common/java/MonitorCach" +
      "eSize.proto\032<core/proto/nodecluster/comm" +
      "on/java/MonitorThreadStatus.proto\0321core/" +
      "proto/nodecluster/common/java/NodeType.p" +
      "roto\"\261\001\n\rHeartBeatToMM\022\020\n\010nodeCode\030\001 \002(\003" +
      "\022\032\n\010cpuInfos\030\002 \002(\0132\010.CpuInfo\022 \n\013memoryIn",
      "fos\030\003 \002(\0132\013.MemoryInfo\022$\n\tcacheSize\030\004 \003(" +
      "\0132\021.MonitorCacheSize\022*\n\014threadStatus\030\005 \003" +
      "(\0132\024.MonitorThreadStatusBM\n:com.navinfo." +
      "opentsp.platform.location.protocol.nodec" +
      "lusterB\017LCHeartBeatToMM"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_HeartBeatToMM_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_HeartBeatToMM_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeartBeatToMM_descriptor,
              new java.lang.String[] { "NodeCode", "CpuInfos", "MemoryInfos", "CacheSize", "ThreadStatus", },
              com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.class,
              com.navinfo.opentsp.platform.location.protocol.nodecluster.LCHeartBeatToMM.HeartBeatToMM.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCCpuInfo.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMemoryInfo.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorCacheSize.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCMonitorThreadStatus.getDescriptor(),
          com.navinfo.opentsp.platform.location.protocol.nodecluster.common.LCNodeType.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
