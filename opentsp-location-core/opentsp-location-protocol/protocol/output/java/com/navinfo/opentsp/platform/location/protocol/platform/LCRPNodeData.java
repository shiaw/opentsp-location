// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/platform/java/RPNodeData.proto

package com.navinfo.opentsp.platform.location.protocol.platform;

public final class LCRPNodeData {
  private LCRPNodeData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RPNodeDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .RPNodeData.ServerType types = 1;
    boolean hasTypes();
    com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType getTypes();
    
    // required string RpIp = 2;
    boolean hasRpIp();
    String getRpIp();
    
    // required int32 RpPort = 3;
    boolean hasRpPort();
    int getRpPort();
    
    // repeated int64 terminalIdentify = 4;
    java.util.List<java.lang.Long> getTerminalIdentifyList();
    int getTerminalIdentifyCount();
    long getTerminalIdentify(int index);
  }
  public static final class RPNodeData extends
      com.google.protobuf.GeneratedMessage
      implements RPNodeDataOrBuilder {
    // Use RPNodeData.newBuilder() to construct.
    private RPNodeData(Builder builder) {
      super(builder);
    }
    private RPNodeData(boolean noInit) {}
    
    private static final RPNodeData defaultInstance;
    public static RPNodeData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RPNodeData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.internal_static_RPNodeData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.internal_static_RPNodeData_fieldAccessorTable;
    }
    
    public enum ServerType
        implements com.google.protobuf.ProtocolMessageEnum {
      realTimeCommunication(0, 1),
      dataQueryRequest(1, 2),
      ;
      
      public static final int realTimeCommunication_VALUE = 1;
      public static final int dataQueryRequest_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static ServerType valueOf(int value) {
        switch (value) {
          case 1: return realTimeCommunication;
          case 2: return dataQueryRequest;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ServerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ServerType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ServerType>() {
              public ServerType findValueByNumber(int number) {
                return ServerType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ServerType[] VALUES = {
        realTimeCommunication, dataQueryRequest, 
      };
      
      public static ServerType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private ServerType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:RPNodeData.ServerType)
    }
    
    private int bitField0_;
    // required .RPNodeData.ServerType types = 1;
    public static final int TYPES_FIELD_NUMBER = 1;
    private com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType types_;
    public boolean hasTypes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType getTypes() {
      return types_;
    }
    
    // required string RpIp = 2;
    public static final int RPIP_FIELD_NUMBER = 2;
    private java.lang.Object rpIp_;
    public boolean hasRpIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getRpIp() {
      java.lang.Object ref = rpIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          rpIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRpIpBytes() {
      java.lang.Object ref = rpIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        rpIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 RpPort = 3;
    public static final int RPPORT_FIELD_NUMBER = 3;
    private int rpPort_;
    public boolean hasRpPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRpPort() {
      return rpPort_;
    }
    
    // repeated int64 terminalIdentify = 4;
    public static final int TERMINALIDENTIFY_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> terminalIdentify_;
    public java.util.List<java.lang.Long>
        getTerminalIdentifyList() {
      return terminalIdentify_;
    }
    public int getTerminalIdentifyCount() {
      return terminalIdentify_.size();
    }
    public long getTerminalIdentify(int index) {
      return terminalIdentify_.get(index);
    }
    
    private void initFields() {
      types_ = com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType.realTimeCommunication;
      rpIp_ = "";
      rpPort_ = 0;
      terminalIdentify_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTypes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRpIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRpPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, types_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRpIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rpPort_);
      }
      for (int i = 0; i < terminalIdentify_.size(); i++) {
        output.writeInt64(4, terminalIdentify_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, types_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRpIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rpPort_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < terminalIdentify_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(terminalIdentify_.get(i));
        }
        size += dataSize;
        size += 1 * getTerminalIdentifyList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.internal_static_RPNodeData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.internal_static_RPNodeData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        types_ = com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType.realTimeCommunication;
        bitField0_ = (bitField0_ & ~0x00000001);
        rpIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        rpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        terminalIdentify_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData build() {
        com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData result = new com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.types_ = types_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rpIp_ = rpIp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rpPort_ = rpPort_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          terminalIdentify_ = java.util.Collections.unmodifiableList(terminalIdentify_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.terminalIdentify_ = terminalIdentify_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.getDefaultInstance()) return this;
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasRpIp()) {
          setRpIp(other.getRpIp());
        }
        if (other.hasRpPort()) {
          setRpPort(other.getRpPort());
        }
        if (!other.terminalIdentify_.isEmpty()) {
          if (terminalIdentify_.isEmpty()) {
            terminalIdentify_ = other.terminalIdentify_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTerminalIdentifyIsMutable();
            terminalIdentify_.addAll(other.terminalIdentify_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTypes()) {
          
          return false;
        }
        if (!hasRpIp()) {
          
          return false;
        }
        if (!hasRpPort()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType value = com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                types_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              rpIp_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rpPort_ = input.readInt32();
              break;
            }
            case 32: {
              ensureTerminalIdentifyIsMutable();
              terminalIdentify_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTerminalIdentify(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .RPNodeData.ServerType types = 1;
      private com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType types_ = com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType.realTimeCommunication;
      public boolean hasTypes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType getTypes() {
        return types_;
      }
      public Builder setTypes(com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        types_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        types_ = com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.ServerType.realTimeCommunication;
        onChanged();
        return this;
      }
      
      // required string RpIp = 2;
      private java.lang.Object rpIp_ = "";
      public boolean hasRpIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getRpIp() {
        java.lang.Object ref = rpIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          rpIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRpIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        rpIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearRpIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rpIp_ = getDefaultInstance().getRpIp();
        onChanged();
        return this;
      }
      void setRpIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        rpIp_ = value;
        onChanged();
      }
      
      // required int32 RpPort = 3;
      private int rpPort_ ;
      public boolean hasRpPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRpPort() {
        return rpPort_;
      }
      public Builder setRpPort(int value) {
        bitField0_ |= 0x00000004;
        rpPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearRpPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rpPort_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int64 terminalIdentify = 4;
      private java.util.List<java.lang.Long> terminalIdentify_ = java.util.Collections.emptyList();;
      private void ensureTerminalIdentifyIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          terminalIdentify_ = new java.util.ArrayList<java.lang.Long>(terminalIdentify_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Long>
          getTerminalIdentifyList() {
        return java.util.Collections.unmodifiableList(terminalIdentify_);
      }
      public int getTerminalIdentifyCount() {
        return terminalIdentify_.size();
      }
      public long getTerminalIdentify(int index) {
        return terminalIdentify_.get(index);
      }
      public Builder setTerminalIdentify(
          int index, long value) {
        ensureTerminalIdentifyIsMutable();
        terminalIdentify_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTerminalIdentify(long value) {
        ensureTerminalIdentifyIsMutable();
        terminalIdentify_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTerminalIdentify(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTerminalIdentifyIsMutable();
        super.addAll(values, terminalIdentify_);
        onChanged();
        return this;
      }
      public Builder clearTerminalIdentify() {
        terminalIdentify_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RPNodeData)
    }
    
    static {
      defaultInstance = new RPNodeData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RPNodeData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RPNodeData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RPNodeData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)core/proto/platform/java/RPNodeData.pr" +
      "oto\"\252\001\n\nRPNodeData\022%\n\005types\030\001 \002(\0162\026.RPNo" +
      "deData.ServerType\022\014\n\004RpIp\030\002 \002(\t\022\016\n\006RpPor" +
      "t\030\003 \002(\005\022\030\n\020terminalIdentify\030\004 \003(\003\"=\n\nSer" +
      "verType\022\031\n\025realTimeCommunication\020\001\022\024\n\020da" +
      "taQueryRequest\020\002BG\n7com.navinfo.opentsp." +
      "platform.location.protocol.platformB\014LCR" +
      "PNodeData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RPNodeData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RPNodeData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RPNodeData_descriptor,
              new java.lang.String[] { "Types", "RpIp", "RpPort", "TerminalIdentify", },
              com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.class,
              com.navinfo.opentsp.platform.location.protocol.platform.LCRPNodeData.RPNodeData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
