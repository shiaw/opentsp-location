// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/CANBUSData/Report/EngineTemperature.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report;

public final class LCEngineTemperature {
  private LCEngineTemperature() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EngineTemperatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 coolantTemperature = 1;
    boolean hasCoolantTemperature();
    int getCoolantTemperature();
    
    // optional int32 fuelTemperature = 2;
    boolean hasFuelTemperature();
    int getFuelTemperature();
    
    // optional float oilTemperature = 3;
    boolean hasOilTemperature();
    float getOilTemperature();
    
    // optional float ureaTankLevel = 4;
    boolean hasUreaTankLevel();
    float getUreaTankLevel();
    
    // optional int32 ureaTankTemperature = 5;
    boolean hasUreaTankTemperature();
    int getUreaTankTemperature();
  }
  public static final class EngineTemperature extends
      com.google.protobuf.GeneratedMessage
      implements EngineTemperatureOrBuilder {
    // Use EngineTemperature.newBuilder() to construct.
    private EngineTemperature(Builder builder) {
      super(builder);
    }
    private EngineTemperature(boolean noInit) {}
    
    private static final EngineTemperature defaultInstance;
    public static EngineTemperature getDefaultInstance() {
      return defaultInstance;
    }
    
    public EngineTemperature getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.internal_static_EngineTemperature_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.internal_static_EngineTemperature_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 coolantTemperature = 1;
    public static final int COOLANTTEMPERATURE_FIELD_NUMBER = 1;
    private int coolantTemperature_;
    public boolean hasCoolantTemperature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCoolantTemperature() {
      return coolantTemperature_;
    }
    
    // optional int32 fuelTemperature = 2;
    public static final int FUELTEMPERATURE_FIELD_NUMBER = 2;
    private int fuelTemperature_;
    public boolean hasFuelTemperature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getFuelTemperature() {
      return fuelTemperature_;
    }
    
    // optional float oilTemperature = 3;
    public static final int OILTEMPERATURE_FIELD_NUMBER = 3;
    private float oilTemperature_;
    public boolean hasOilTemperature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getOilTemperature() {
      return oilTemperature_;
    }
    
    // optional float ureaTankLevel = 4;
    public static final int UREATANKLEVEL_FIELD_NUMBER = 4;
    private float ureaTankLevel_;
    public boolean hasUreaTankLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getUreaTankLevel() {
      return ureaTankLevel_;
    }
    
    // optional int32 ureaTankTemperature = 5;
    public static final int UREATANKTEMPERATURE_FIELD_NUMBER = 5;
    private int ureaTankTemperature_;
    public boolean hasUreaTankTemperature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getUreaTankTemperature() {
      return ureaTankTemperature_;
    }
    
    private void initFields() {
      coolantTemperature_ = 0;
      fuelTemperature_ = 0;
      oilTemperature_ = 0F;
      ureaTankLevel_ = 0F;
      ureaTankTemperature_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, coolantTemperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fuelTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, oilTemperature_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ureaTankLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, ureaTankTemperature_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, coolantTemperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fuelTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, oilTemperature_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ureaTankLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ureaTankTemperature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.internal_static_EngineTemperature_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.internal_static_EngineTemperature_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        coolantTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fuelTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        oilTemperature_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ureaTankLevel_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        ureaTankTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature result = new com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.coolantTemperature_ = coolantTemperature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fuelTemperature_ = fuelTemperature_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oilTemperature_ = oilTemperature_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ureaTankLevel_ = ureaTankLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ureaTankTemperature_ = ureaTankTemperature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.getDefaultInstance()) return this;
        if (other.hasCoolantTemperature()) {
          setCoolantTemperature(other.getCoolantTemperature());
        }
        if (other.hasFuelTemperature()) {
          setFuelTemperature(other.getFuelTemperature());
        }
        if (other.hasOilTemperature()) {
          setOilTemperature(other.getOilTemperature());
        }
        if (other.hasUreaTankLevel()) {
          setUreaTankLevel(other.getUreaTankLevel());
        }
        if (other.hasUreaTankTemperature()) {
          setUreaTankTemperature(other.getUreaTankTemperature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              coolantTemperature_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fuelTemperature_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              oilTemperature_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              ureaTankLevel_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ureaTankTemperature_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 coolantTemperature = 1;
      private int coolantTemperature_ ;
      public boolean hasCoolantTemperature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCoolantTemperature() {
        return coolantTemperature_;
      }
      public Builder setCoolantTemperature(int value) {
        bitField0_ |= 0x00000001;
        coolantTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearCoolantTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        coolantTemperature_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 fuelTemperature = 2;
      private int fuelTemperature_ ;
      public boolean hasFuelTemperature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getFuelTemperature() {
        return fuelTemperature_;
      }
      public Builder setFuelTemperature(int value) {
        bitField0_ |= 0x00000002;
        fuelTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearFuelTemperature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fuelTemperature_ = 0;
        onChanged();
        return this;
      }
      
      // optional float oilTemperature = 3;
      private float oilTemperature_ ;
      public boolean hasOilTemperature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getOilTemperature() {
        return oilTemperature_;
      }
      public Builder setOilTemperature(float value) {
        bitField0_ |= 0x00000004;
        oilTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearOilTemperature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oilTemperature_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float ureaTankLevel = 4;
      private float ureaTankLevel_ ;
      public boolean hasUreaTankLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getUreaTankLevel() {
        return ureaTankLevel_;
      }
      public Builder setUreaTankLevel(float value) {
        bitField0_ |= 0x00000008;
        ureaTankLevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearUreaTankLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ureaTankLevel_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 ureaTankTemperature = 5;
      private int ureaTankTemperature_ ;
      public boolean hasUreaTankTemperature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getUreaTankTemperature() {
        return ureaTankTemperature_;
      }
      public Builder setUreaTankTemperature(int value) {
        bitField0_ |= 0x00000010;
        ureaTankTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearUreaTankTemperature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ureaTankTemperature_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EngineTemperature)
    }
    
    static {
      defaultInstance = new EngineTemperature(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EngineTemperature)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EngineTemperature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EngineTemperature_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=core/proto/terminal/CANBUSData/Report/" +
      "EngineTemperature.proto\"\224\001\n\021EngineTemper" +
      "ature\022\032\n\022coolantTemperature\030\001 \001(\005\022\027\n\017fue" +
      "lTemperature\030\002 \001(\005\022\026\n\016oilTemperature\030\003 \001" +
      "(\002\022\025\n\rureaTankLevel\030\004 \001(\002\022\033\n\023ureaTankTem" +
      "perature\030\005 \001(\005B`\nIcom.navinfo.opentsp.pl" +
      "atform.location.protocol.terminal.CANBUS" +
      "Data.ReportB\023LCEngineTemperature"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EngineTemperature_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EngineTemperature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EngineTemperature_descriptor,
              new java.lang.String[] { "CoolantTemperature", "FuelTemperature", "OilTemperature", "UreaTankLevel", "UreaTankTemperature", },
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineTemperature.EngineTemperature.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
