// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/CANBUSData/Report/EngineInletCondition.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report;

public final class LCEngineInletCondition {
  private LCEngineInletCondition() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EngineInletConditionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional float particulateTrapInlet = 1;
    boolean hasParticulateTrapInlet();
    float getParticulateTrapInlet();
    
    // optional int32 boostPressureAtmosphere = 2;
    boolean hasBoostPressureAtmosphere();
    int getBoostPressureAtmosphere();
    
    // optional int32 intakeManifold = 3;
    boolean hasIntakeManifold();
    int getIntakeManifold();
    
    // optional int32 airInletPressure = 4;
    boolean hasAirInletPressure();
    int getAirInletPressure();
    
    // optional float exhaustGasTemperature = 5;
    boolean hasExhaustGasTemperature();
    float getExhaustGasTemperature();
  }
  public static final class EngineInletCondition extends
      com.google.protobuf.GeneratedMessage
      implements EngineInletConditionOrBuilder {
    // Use EngineInletCondition.newBuilder() to construct.
    private EngineInletCondition(Builder builder) {
      super(builder);
    }
    private EngineInletCondition(boolean noInit) {}
    
    private static final EngineInletCondition defaultInstance;
    public static EngineInletCondition getDefaultInstance() {
      return defaultInstance;
    }
    
    public EngineInletCondition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.internal_static_EngineInletCondition_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.internal_static_EngineInletCondition_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional float particulateTrapInlet = 1;
    public static final int PARTICULATETRAPINLET_FIELD_NUMBER = 1;
    private float particulateTrapInlet_;
    public boolean hasParticulateTrapInlet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getParticulateTrapInlet() {
      return particulateTrapInlet_;
    }
    
    // optional int32 boostPressureAtmosphere = 2;
    public static final int BOOSTPRESSUREATMOSPHERE_FIELD_NUMBER = 2;
    private int boostPressureAtmosphere_;
    public boolean hasBoostPressureAtmosphere() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getBoostPressureAtmosphere() {
      return boostPressureAtmosphere_;
    }
    
    // optional int32 intakeManifold = 3;
    public static final int INTAKEMANIFOLD_FIELD_NUMBER = 3;
    private int intakeManifold_;
    public boolean hasIntakeManifold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getIntakeManifold() {
      return intakeManifold_;
    }
    
    // optional int32 airInletPressure = 4;
    public static final int AIRINLETPRESSURE_FIELD_NUMBER = 4;
    private int airInletPressure_;
    public boolean hasAirInletPressure() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getAirInletPressure() {
      return airInletPressure_;
    }
    
    // optional float exhaustGasTemperature = 5;
    public static final int EXHAUSTGASTEMPERATURE_FIELD_NUMBER = 5;
    private float exhaustGasTemperature_;
    public boolean hasExhaustGasTemperature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getExhaustGasTemperature() {
      return exhaustGasTemperature_;
    }
    
    private void initFields() {
      particulateTrapInlet_ = 0F;
      boostPressureAtmosphere_ = 0;
      intakeManifold_ = 0;
      airInletPressure_ = 0;
      exhaustGasTemperature_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, particulateTrapInlet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, boostPressureAtmosphere_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, intakeManifold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, airInletPressure_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, exhaustGasTemperature_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, particulateTrapInlet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, boostPressureAtmosphere_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, intakeManifold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, airInletPressure_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, exhaustGasTemperature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.internal_static_EngineInletCondition_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.internal_static_EngineInletCondition_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        particulateTrapInlet_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        boostPressureAtmosphere_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        intakeManifold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        airInletPressure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        exhaustGasTemperature_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition result = new com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.particulateTrapInlet_ = particulateTrapInlet_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.boostPressureAtmosphere_ = boostPressureAtmosphere_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intakeManifold_ = intakeManifold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.airInletPressure_ = airInletPressure_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.exhaustGasTemperature_ = exhaustGasTemperature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.getDefaultInstance()) return this;
        if (other.hasParticulateTrapInlet()) {
          setParticulateTrapInlet(other.getParticulateTrapInlet());
        }
        if (other.hasBoostPressureAtmosphere()) {
          setBoostPressureAtmosphere(other.getBoostPressureAtmosphere());
        }
        if (other.hasIntakeManifold()) {
          setIntakeManifold(other.getIntakeManifold());
        }
        if (other.hasAirInletPressure()) {
          setAirInletPressure(other.getAirInletPressure());
        }
        if (other.hasExhaustGasTemperature()) {
          setExhaustGasTemperature(other.getExhaustGasTemperature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              particulateTrapInlet_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              boostPressureAtmosphere_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              intakeManifold_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              airInletPressure_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              exhaustGasTemperature_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional float particulateTrapInlet = 1;
      private float particulateTrapInlet_ ;
      public boolean hasParticulateTrapInlet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getParticulateTrapInlet() {
        return particulateTrapInlet_;
      }
      public Builder setParticulateTrapInlet(float value) {
        bitField0_ |= 0x00000001;
        particulateTrapInlet_ = value;
        onChanged();
        return this;
      }
      public Builder clearParticulateTrapInlet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        particulateTrapInlet_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 boostPressureAtmosphere = 2;
      private int boostPressureAtmosphere_ ;
      public boolean hasBoostPressureAtmosphere() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getBoostPressureAtmosphere() {
        return boostPressureAtmosphere_;
      }
      public Builder setBoostPressureAtmosphere(int value) {
        bitField0_ |= 0x00000002;
        boostPressureAtmosphere_ = value;
        onChanged();
        return this;
      }
      public Builder clearBoostPressureAtmosphere() {
        bitField0_ = (bitField0_ & ~0x00000002);
        boostPressureAtmosphere_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 intakeManifold = 3;
      private int intakeManifold_ ;
      public boolean hasIntakeManifold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getIntakeManifold() {
        return intakeManifold_;
      }
      public Builder setIntakeManifold(int value) {
        bitField0_ |= 0x00000004;
        intakeManifold_ = value;
        onChanged();
        return this;
      }
      public Builder clearIntakeManifold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        intakeManifold_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 airInletPressure = 4;
      private int airInletPressure_ ;
      public boolean hasAirInletPressure() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getAirInletPressure() {
        return airInletPressure_;
      }
      public Builder setAirInletPressure(int value) {
        bitField0_ |= 0x00000008;
        airInletPressure_ = value;
        onChanged();
        return this;
      }
      public Builder clearAirInletPressure() {
        bitField0_ = (bitField0_ & ~0x00000008);
        airInletPressure_ = 0;
        onChanged();
        return this;
      }
      
      // optional float exhaustGasTemperature = 5;
      private float exhaustGasTemperature_ ;
      public boolean hasExhaustGasTemperature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getExhaustGasTemperature() {
        return exhaustGasTemperature_;
      }
      public Builder setExhaustGasTemperature(float value) {
        bitField0_ |= 0x00000010;
        exhaustGasTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearExhaustGasTemperature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        exhaustGasTemperature_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EngineInletCondition)
    }
    
    static {
      defaultInstance = new EngineInletCondition(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EngineInletCondition)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EngineInletCondition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EngineInletCondition_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n@core/proto/terminal/CANBUSData/Report/" +
      "EngineInletCondition.proto\"\246\001\n\024EngineInl" +
      "etCondition\022\034\n\024particulateTrapInlet\030\001 \001(" +
      "\002\022\037\n\027boostPressureAtmosphere\030\002 \001(\005\022\026\n\016in" +
      "takeManifold\030\003 \001(\005\022\030\n\020airInletPressure\030\004" +
      " \001(\005\022\035\n\025exhaustGasTemperature\030\005 \001(\002Bc\nIc" +
      "om.navinfo.opentsp.platform.location.pro" +
      "tocol.terminal.CANBUSData.ReportB\026LCEngi" +
      "neInletCondition"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EngineInletCondition_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EngineInletCondition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EngineInletCondition_descriptor,
              new java.lang.String[] { "ParticulateTrapInlet", "BoostPressureAtmosphere", "IntakeManifold", "AirInletPressure", "ExhaustGasTemperature", },
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCEngineInletCondition.EngineInletCondition.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
