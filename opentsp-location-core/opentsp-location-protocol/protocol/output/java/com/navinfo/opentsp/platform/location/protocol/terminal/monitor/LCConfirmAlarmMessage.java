// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/monitor/java/ConfirmAlarmMessage.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.monitor;

public final class LCConfirmAlarmMessage {
  private LCConfirmAlarmMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConfirmAlarmMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bool isConfirmAll = 1;
    boolean hasIsConfirmAll();
    boolean getIsConfirmAll();
    
    // optional int32 serialNumber = 2;
    boolean hasSerialNumber();
    int getSerialNumber();
    
    // optional bool emergency = 3;
    boolean hasEmergency();
    boolean getEmergency();
    
    // optional bool dangerous = 4;
    boolean hasDangerous();
    boolean getDangerous();
    
    // optional bool inOutArea = 5;
    boolean hasInOutArea();
    boolean getInOutArea();
    
    // optional bool inOutRoute = 6;
    boolean hasInOutRoute();
    boolean getInOutRoute();
    
    // optional bool segmentLackOrOverTime = 7;
    boolean hasSegmentLackOrOverTime();
    boolean getSegmentLackOrOverTime();
    
    // optional bool illegalIgnition = 8;
    boolean hasIllegalIgnition();
    boolean getIllegalIgnition();
    
    // optional bool illegalDisplacement = 9;
    boolean hasIllegalDisplacement();
    boolean getIllegalDisplacement();
  }
  public static final class ConfirmAlarmMessage extends
      com.google.protobuf.GeneratedMessage
      implements ConfirmAlarmMessageOrBuilder {
    // Use ConfirmAlarmMessage.newBuilder() to construct.
    private ConfirmAlarmMessage(Builder builder) {
      super(builder);
    }
    private ConfirmAlarmMessage(boolean noInit) {}
    
    private static final ConfirmAlarmMessage defaultInstance;
    public static ConfirmAlarmMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConfirmAlarmMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.internal_static_ConfirmAlarmMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.internal_static_ConfirmAlarmMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bool isConfirmAll = 1;
    public static final int ISCONFIRMALL_FIELD_NUMBER = 1;
    private boolean isConfirmAll_;
    public boolean hasIsConfirmAll() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getIsConfirmAll() {
      return isConfirmAll_;
    }
    
    // optional int32 serialNumber = 2;
    public static final int SERIALNUMBER_FIELD_NUMBER = 2;
    private int serialNumber_;
    public boolean hasSerialNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSerialNumber() {
      return serialNumber_;
    }
    
    // optional bool emergency = 3;
    public static final int EMERGENCY_FIELD_NUMBER = 3;
    private boolean emergency_;
    public boolean hasEmergency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getEmergency() {
      return emergency_;
    }
    
    // optional bool dangerous = 4;
    public static final int DANGEROUS_FIELD_NUMBER = 4;
    private boolean dangerous_;
    public boolean hasDangerous() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getDangerous() {
      return dangerous_;
    }
    
    // optional bool inOutArea = 5;
    public static final int INOUTAREA_FIELD_NUMBER = 5;
    private boolean inOutArea_;
    public boolean hasInOutArea() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getInOutArea() {
      return inOutArea_;
    }
    
    // optional bool inOutRoute = 6;
    public static final int INOUTROUTE_FIELD_NUMBER = 6;
    private boolean inOutRoute_;
    public boolean hasInOutRoute() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getInOutRoute() {
      return inOutRoute_;
    }
    
    // optional bool segmentLackOrOverTime = 7;
    public static final int SEGMENTLACKOROVERTIME_FIELD_NUMBER = 7;
    private boolean segmentLackOrOverTime_;
    public boolean hasSegmentLackOrOverTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getSegmentLackOrOverTime() {
      return segmentLackOrOverTime_;
    }
    
    // optional bool illegalIgnition = 8;
    public static final int ILLEGALIGNITION_FIELD_NUMBER = 8;
    private boolean illegalIgnition_;
    public boolean hasIllegalIgnition() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getIllegalIgnition() {
      return illegalIgnition_;
    }
    
    // optional bool illegalDisplacement = 9;
    public static final int ILLEGALDISPLACEMENT_FIELD_NUMBER = 9;
    private boolean illegalDisplacement_;
    public boolean hasIllegalDisplacement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getIllegalDisplacement() {
      return illegalDisplacement_;
    }
    
    private void initFields() {
      isConfirmAll_ = false;
      serialNumber_ = 0;
      emergency_ = false;
      dangerous_ = false;
      inOutArea_ = false;
      inOutRoute_ = false;
      segmentLackOrOverTime_ = false;
      illegalIgnition_ = false;
      illegalDisplacement_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasIsConfirmAll()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isConfirmAll_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serialNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, emergency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, dangerous_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, inOutArea_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, inOutRoute_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, segmentLackOrOverTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, illegalIgnition_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, illegalDisplacement_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isConfirmAll_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serialNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, emergency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, dangerous_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, inOutArea_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, inOutRoute_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, segmentLackOrOverTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, illegalIgnition_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, illegalDisplacement_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.internal_static_ConfirmAlarmMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.internal_static_ConfirmAlarmMessage_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        isConfirmAll_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        serialNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        emergency_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        dangerous_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        inOutArea_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        inOutRoute_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        segmentLackOrOverTime_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        illegalIgnition_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        illegalDisplacement_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage result = new com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isConfirmAll_ = isConfirmAll_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serialNumber_ = serialNumber_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.emergency_ = emergency_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dangerous_ = dangerous_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.inOutArea_ = inOutArea_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.inOutRoute_ = inOutRoute_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.segmentLackOrOverTime_ = segmentLackOrOverTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.illegalIgnition_ = illegalIgnition_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.illegalDisplacement_ = illegalDisplacement_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.getDefaultInstance()) return this;
        if (other.hasIsConfirmAll()) {
          setIsConfirmAll(other.getIsConfirmAll());
        }
        if (other.hasSerialNumber()) {
          setSerialNumber(other.getSerialNumber());
        }
        if (other.hasEmergency()) {
          setEmergency(other.getEmergency());
        }
        if (other.hasDangerous()) {
          setDangerous(other.getDangerous());
        }
        if (other.hasInOutArea()) {
          setInOutArea(other.getInOutArea());
        }
        if (other.hasInOutRoute()) {
          setInOutRoute(other.getInOutRoute());
        }
        if (other.hasSegmentLackOrOverTime()) {
          setSegmentLackOrOverTime(other.getSegmentLackOrOverTime());
        }
        if (other.hasIllegalIgnition()) {
          setIllegalIgnition(other.getIllegalIgnition());
        }
        if (other.hasIllegalDisplacement()) {
          setIllegalDisplacement(other.getIllegalDisplacement());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasIsConfirmAll()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isConfirmAll_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serialNumber_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              emergency_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dangerous_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              inOutArea_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              inOutRoute_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              segmentLackOrOverTime_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              illegalIgnition_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              illegalDisplacement_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bool isConfirmAll = 1;
      private boolean isConfirmAll_ ;
      public boolean hasIsConfirmAll() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getIsConfirmAll() {
        return isConfirmAll_;
      }
      public Builder setIsConfirmAll(boolean value) {
        bitField0_ |= 0x00000001;
        isConfirmAll_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsConfirmAll() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isConfirmAll_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 serialNumber = 2;
      private int serialNumber_ ;
      public boolean hasSerialNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSerialNumber() {
        return serialNumber_;
      }
      public Builder setSerialNumber(int value) {
        bitField0_ |= 0x00000002;
        serialNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serialNumber_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool emergency = 3;
      private boolean emergency_ ;
      public boolean hasEmergency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getEmergency() {
        return emergency_;
      }
      public Builder setEmergency(boolean value) {
        bitField0_ |= 0x00000004;
        emergency_ = value;
        onChanged();
        return this;
      }
      public Builder clearEmergency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        emergency_ = false;
        onChanged();
        return this;
      }
      
      // optional bool dangerous = 4;
      private boolean dangerous_ ;
      public boolean hasDangerous() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getDangerous() {
        return dangerous_;
      }
      public Builder setDangerous(boolean value) {
        bitField0_ |= 0x00000008;
        dangerous_ = value;
        onChanged();
        return this;
      }
      public Builder clearDangerous() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dangerous_ = false;
        onChanged();
        return this;
      }
      
      // optional bool inOutArea = 5;
      private boolean inOutArea_ ;
      public boolean hasInOutArea() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getInOutArea() {
        return inOutArea_;
      }
      public Builder setInOutArea(boolean value) {
        bitField0_ |= 0x00000010;
        inOutArea_ = value;
        onChanged();
        return this;
      }
      public Builder clearInOutArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        inOutArea_ = false;
        onChanged();
        return this;
      }
      
      // optional bool inOutRoute = 6;
      private boolean inOutRoute_ ;
      public boolean hasInOutRoute() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getInOutRoute() {
        return inOutRoute_;
      }
      public Builder setInOutRoute(boolean value) {
        bitField0_ |= 0x00000020;
        inOutRoute_ = value;
        onChanged();
        return this;
      }
      public Builder clearInOutRoute() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inOutRoute_ = false;
        onChanged();
        return this;
      }
      
      // optional bool segmentLackOrOverTime = 7;
      private boolean segmentLackOrOverTime_ ;
      public boolean hasSegmentLackOrOverTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getSegmentLackOrOverTime() {
        return segmentLackOrOverTime_;
      }
      public Builder setSegmentLackOrOverTime(boolean value) {
        bitField0_ |= 0x00000040;
        segmentLackOrOverTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearSegmentLackOrOverTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        segmentLackOrOverTime_ = false;
        onChanged();
        return this;
      }
      
      // optional bool illegalIgnition = 8;
      private boolean illegalIgnition_ ;
      public boolean hasIllegalIgnition() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getIllegalIgnition() {
        return illegalIgnition_;
      }
      public Builder setIllegalIgnition(boolean value) {
        bitField0_ |= 0x00000080;
        illegalIgnition_ = value;
        onChanged();
        return this;
      }
      public Builder clearIllegalIgnition() {
        bitField0_ = (bitField0_ & ~0x00000080);
        illegalIgnition_ = false;
        onChanged();
        return this;
      }
      
      // optional bool illegalDisplacement = 9;
      private boolean illegalDisplacement_ ;
      public boolean hasIllegalDisplacement() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getIllegalDisplacement() {
        return illegalDisplacement_;
      }
      public Builder setIllegalDisplacement(boolean value) {
        bitField0_ |= 0x00000100;
        illegalDisplacement_ = value;
        onChanged();
        return this;
      }
      public Builder clearIllegalDisplacement() {
        bitField0_ = (bitField0_ & ~0x00000100);
        illegalDisplacement_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ConfirmAlarmMessage)
    }
    
    static {
      defaultInstance = new ConfirmAlarmMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ConfirmAlarmMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConfirmAlarmMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConfirmAlarmMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:core/proto/terminal/monitor/java/Confi" +
      "rmAlarmMessage.proto\"\343\001\n\023ConfirmAlarmMes" +
      "sage\022\024\n\014isConfirmAll\030\001 \002(\010\022\024\n\014serialNumb" +
      "er\030\002 \001(\005\022\021\n\temergency\030\003 \001(\010\022\021\n\tdangerous" +
      "\030\004 \001(\010\022\021\n\tinOutArea\030\005 \001(\010\022\022\n\ninOutRoute\030" +
      "\006 \001(\010\022\035\n\025segmentLackOrOverTime\030\007 \001(\010\022\027\n\017" +
      "illegalIgnition\030\010 \001(\010\022\033\n\023illegalDisplace" +
      "ment\030\t \001(\010BX\n?com.navinfo.opentsp.platfo" +
      "rm.location.protocol.terminal.monitorB\025L" +
      "CConfirmAlarmMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ConfirmAlarmMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ConfirmAlarmMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConfirmAlarmMessage_descriptor,
              new java.lang.String[] { "IsConfirmAll", "SerialNumber", "Emergency", "Dangerous", "InOutArea", "InOutRoute", "SegmentLackOrOverTime", "IllegalIgnition", "IllegalDisplacement", },
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.monitor.LCConfirmAlarmMessage.ConfirmAlarmMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
