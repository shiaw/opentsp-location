// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/services/common/java/MonitorThreadStatus.proto

package com.navinfo.opentsp.platform.location.protocol.services.common;

public final class LCMonitorThreadStatus {
  private LCMonitorThreadStatus() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MonitorThreadStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .MonitorThreadStatus.ThreadType types = 1;
    boolean hasTypes();
    com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType getTypes();
    
    // required .MonitorThreadStatus.ThreadStatus status = 2;
    boolean hasStatus();
    com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus getStatus();
  }
  public static final class MonitorThreadStatus extends
      com.google.protobuf.GeneratedMessage
      implements MonitorThreadStatusOrBuilder {
    // Use MonitorThreadStatus.newBuilder() to construct.
    private MonitorThreadStatus(Builder builder) {
      super(builder);
    }
    private MonitorThreadStatus(boolean noInit) {}
    
    private static final MonitorThreadStatus defaultInstance;
    public static MonitorThreadStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public MonitorThreadStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.internal_static_MonitorThreadStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.internal_static_MonitorThreadStatus_fieldAccessorTable;
    }
    
    public enum ThreadType
        implements com.google.protobuf.ProtocolMessageEnum {
      ta_responseMechanism(0, 1),
      ta_commonCacheProcess(1, 2),
      dp_terminalParameterProcess(2, 32),
      dp_dpAndTaDataGuaranteeProcess(3, 33),
      dp_removeInvalidDataProcess(4, 34),
      dp_commonDataProcess(5, 35),
      ;
      
      public static final int ta_responseMechanism_VALUE = 1;
      public static final int ta_commonCacheProcess_VALUE = 2;
      public static final int dp_terminalParameterProcess_VALUE = 32;
      public static final int dp_dpAndTaDataGuaranteeProcess_VALUE = 33;
      public static final int dp_removeInvalidDataProcess_VALUE = 34;
      public static final int dp_commonDataProcess_VALUE = 35;
      
      
      public final int getNumber() { return value; }
      
      public static ThreadType valueOf(int value) {
        switch (value) {
          case 1: return ta_responseMechanism;
          case 2: return ta_commonCacheProcess;
          case 32: return dp_terminalParameterProcess;
          case 33: return dp_dpAndTaDataGuaranteeProcess;
          case 34: return dp_removeInvalidDataProcess;
          case 35: return dp_commonDataProcess;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ThreadType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ThreadType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ThreadType>() {
              public ThreadType findValueByNumber(int number) {
                return ThreadType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ThreadType[] VALUES = {
        ta_responseMechanism, ta_commonCacheProcess, dp_terminalParameterProcess, dp_dpAndTaDataGuaranteeProcess, dp_removeInvalidDataProcess, dp_commonDataProcess, 
      };
      
      public static ThreadType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private ThreadType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MonitorThreadStatus.ThreadType)
    }
    
    public enum ThreadStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      threadNormal(0, 1),
      threadException(1, 2),
      ;
      
      public static final int threadNormal_VALUE = 1;
      public static final int threadException_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static ThreadStatus valueOf(int value) {
        switch (value) {
          case 1: return threadNormal;
          case 2: return threadException;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ThreadStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ThreadStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ThreadStatus>() {
              public ThreadStatus findValueByNumber(int number) {
                return ThreadStatus.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final ThreadStatus[] VALUES = {
        threadNormal, threadException, 
      };
      
      public static ThreadStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private ThreadStatus(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:MonitorThreadStatus.ThreadStatus)
    }
    
    private int bitField0_;
    // required .MonitorThreadStatus.ThreadType types = 1;
    public static final int TYPES_FIELD_NUMBER = 1;
    private com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType types_;
    public boolean hasTypes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType getTypes() {
      return types_;
    }
    
    // required .MonitorThreadStatus.ThreadStatus status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus getStatus() {
      return status_;
    }
    
    private void initFields() {
      types_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType.ta_responseMechanism;
      status_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus.threadNormal;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTypes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, types_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, types_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.internal_static_MonitorThreadStatus_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.internal_static_MonitorThreadStatus_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        types_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType.ta_responseMechanism;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus.threadNormal;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus build() {
        com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus result = new com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.types_ = types_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.getDefaultInstance()) return this;
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTypes()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType value = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                types_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus value = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .MonitorThreadStatus.ThreadType types = 1;
      private com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType types_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType.ta_responseMechanism;
      public boolean hasTypes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType getTypes() {
        return types_;
      }
      public Builder setTypes(com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        types_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        types_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadType.ta_responseMechanism;
        onChanged();
        return this;
      }
      
      // required .MonitorThreadStatus.ThreadStatus status = 2;
      private com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus status_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus.threadNormal;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus getStatus() {
        return status_;
      }
      public Builder setStatus(com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.ThreadStatus.threadNormal;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MonitorThreadStatus)
    }
    
    static {
      defaultInstance = new MonitorThreadStatus(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MonitorThreadStatus)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MonitorThreadStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MonitorThreadStatus_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9core/proto/services/common/java/Monito" +
      "rThreadStatus.proto\"\363\002\n\023MonitorThreadSta" +
      "tus\022.\n\005types\030\001 \002(\0162\037.MonitorThreadStatus" +
      ".ThreadType\0221\n\006status\030\002 \002(\0162!.MonitorThr" +
      "eadStatus.ThreadStatus\"\301\001\n\nThreadType\022\030\n" +
      "\024ta_responseMechanism\020\001\022\031\n\025ta_commonCach" +
      "eProcess\020\002\022\037\n\033dp_terminalParameterProces" +
      "s\020 \022\"\n\036dp_dpAndTaDataGuaranteeProcess\020!\022" +
      "\037\n\033dp_removeInvalidDataProcess\020\"\022\030\n\024dp_c" +
      "ommonDataProcess\020#\"5\n\014ThreadStatus\022\020\n\014th",
      "readNormal\020\001\022\023\n\017threadException\020\002BW\n>com" +
      ".navinfo.opentsp.platform.location.proto" +
      "col.services.commonB\025LCMonitorThreadStat" +
      "us"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MonitorThreadStatus_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MonitorThreadStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MonitorThreadStatus_descriptor,
              new java.lang.String[] { "Types", "Status", },
              com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.class,
              com.navinfo.opentsp.platform.location.protocol.services.common.LCMonitorThreadStatus.MonitorThreadStatus.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
