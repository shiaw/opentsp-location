// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/CANBUSData/Report/CrCtlVehSpd.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report;

public final class LCCrCtlVehSpd {
  private LCCrCtlVehSpd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum CruiseStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    notActuatedStatus(0, 0),
    actuatedStatus(1, 1),
    errorStatus(2, 2),
    notAvailableStatus(3, 3),
    ;
    
    public static final int notActuatedStatus_VALUE = 0;
    public static final int actuatedStatus_VALUE = 1;
    public static final int errorStatus_VALUE = 2;
    public static final int notAvailableStatus_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static CruiseStatus valueOf(int value) {
      switch (value) {
        case 0: return notActuatedStatus;
        case 1: return actuatedStatus;
        case 2: return errorStatus;
        case 3: return notAvailableStatus;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CruiseStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CruiseStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CruiseStatus>() {
            public CruiseStatus findValueByNumber(int number) {
              return CruiseStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final CruiseStatus[] VALUES = {
      notActuatedStatus, actuatedStatus, errorStatus, notAvailableStatus, 
    };
    
    public static CruiseStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CruiseStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:CruiseStatus)
  }
  
  public enum CruiseControlStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    cruiseOffOrDisable(0, 0),
    cruiseHold(1, 1),
    cruiseAcc(2, 2),
    cruiseDec(3, 3),
    cruiseResume(4, 4),
    cruiseSet(5, 5),
    cruiseAccOverride(6, 6),
    ;
    
    public static final int cruiseOffOrDisable_VALUE = 0;
    public static final int cruiseHold_VALUE = 1;
    public static final int cruiseAcc_VALUE = 2;
    public static final int cruiseDec_VALUE = 3;
    public static final int cruiseResume_VALUE = 4;
    public static final int cruiseSet_VALUE = 5;
    public static final int cruiseAccOverride_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static CruiseControlStatus valueOf(int value) {
      switch (value) {
        case 0: return cruiseOffOrDisable;
        case 1: return cruiseHold;
        case 2: return cruiseAcc;
        case 3: return cruiseDec;
        case 4: return cruiseResume;
        case 5: return cruiseSet;
        case 6: return cruiseAccOverride;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CruiseControlStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CruiseControlStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CruiseControlStatus>() {
            public CruiseControlStatus findValueByNumber(int number) {
              return CruiseControlStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final CruiseControlStatus[] VALUES = {
      cruiseOffOrDisable, cruiseHold, cruiseAcc, cruiseDec, cruiseResume, cruiseSet, cruiseAccOverride, 
    };
    
    public static CruiseControlStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CruiseControlStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:CruiseControlStatus)
  }
  
  public enum PTOStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    offOrDisablePTO(0, 0),
    holdPTO(1, 1),
    standbyOrNeutralPTO(2, 3),
    notUsedPTO(3, 4),
    setPTO(4, 5),
    deceleratePTO(5, 6),
    resumePTO(6, 7),
    accPTO(7, 8),
    notUsed(8, 9),
    programmedSetSpeedPTO01(9, 10),
    programmedSetSpeedPTO02(10, 11),
    programmedSetSpeedPTO03(11, 12),
    programmedSetSpeedPTO04(12, 13),
    notAvailablePTO(13, 31),
    ;
    
    public static final int offOrDisablePTO_VALUE = 0;
    public static final int holdPTO_VALUE = 1;
    public static final int standbyOrNeutralPTO_VALUE = 3;
    public static final int notUsedPTO_VALUE = 4;
    public static final int setPTO_VALUE = 5;
    public static final int deceleratePTO_VALUE = 6;
    public static final int resumePTO_VALUE = 7;
    public static final int accPTO_VALUE = 8;
    public static final int notUsed_VALUE = 9;
    public static final int programmedSetSpeedPTO01_VALUE = 10;
    public static final int programmedSetSpeedPTO02_VALUE = 11;
    public static final int programmedSetSpeedPTO03_VALUE = 12;
    public static final int programmedSetSpeedPTO04_VALUE = 13;
    public static final int notAvailablePTO_VALUE = 31;
    
    
    public final int getNumber() { return value; }
    
    public static PTOStatus valueOf(int value) {
      switch (value) {
        case 0: return offOrDisablePTO;
        case 1: return holdPTO;
        case 3: return standbyOrNeutralPTO;
        case 4: return notUsedPTO;
        case 5: return setPTO;
        case 6: return deceleratePTO;
        case 7: return resumePTO;
        case 8: return accPTO;
        case 9: return notUsed;
        case 10: return programmedSetSpeedPTO01;
        case 11: return programmedSetSpeedPTO02;
        case 12: return programmedSetSpeedPTO03;
        case 13: return programmedSetSpeedPTO04;
        case 31: return notAvailablePTO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PTOStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PTOStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PTOStatus>() {
            public PTOStatus findValueByNumber(int number) {
              return PTOStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final PTOStatus[] VALUES = {
      offOrDisablePTO, holdPTO, standbyOrNeutralPTO, notUsedPTO, setPTO, deceleratePTO, resumePTO, accPTO, notUsed, programmedSetSpeedPTO01, programmedSetSpeedPTO02, programmedSetSpeedPTO03, programmedSetSpeedPTO04, notAvailablePTO, 
    };
    
    public static PTOStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PTOStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:PTOStatus)
  }
  
  public interface CrCtlVehSpdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 cruiseControlSwitch = 1;
    boolean hasCruiseControlSwitch();
    int getCruiseControlSwitch();
    
    // optional .CruiseStatus parkingBrake = 2;
    boolean hasParkingBrake();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getParkingBrake();
    
    // optional float vehicleSpeed = 3;
    boolean hasVehicleSpeed();
    float getVehicleSpeed();
    
    // optional .CruiseStatus clutchSwitch = 4;
    boolean hasClutchSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getClutchSwitch();
    
    // optional .CruiseStatus brakeSwitch = 5;
    boolean hasBrakeSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getBrakeSwitch();
    
    // optional int32 cruiseControlEnable = 6;
    boolean hasCruiseControlEnable();
    int getCruiseControlEnable();
    
    // optional .CruiseStatus cruiseControlActive = 7;
    boolean hasCruiseControlActive();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getCruiseControlActive();
    
    // optional .CruiseStatus accelerateSwitch = 8;
    boolean hasAccelerateSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getAccelerateSwitch();
    
    // optional .CruiseStatus resumeSwitch = 9;
    boolean hasResumeSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getResumeSwitch();
    
    // optional .CruiseStatus decelerateSwitch = 10;
    boolean hasDecelerateSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getDecelerateSwitch();
    
    // optional .CruiseStatus setSwitch = 11;
    boolean hasSetSwitch();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getSetSwitch();
    
    // optional int32 setSpeed = 12;
    boolean hasSetSpeed();
    int getSetSpeed();
    
    // optional .CruiseControlStatus status = 13;
    boolean hasStatus();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus getStatus();
    
    // optional .PTOStatus ptoStatus = 14;
    boolean hasPtoStatus();
    com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus getPtoStatus();
    
    // optional int32 engineShutDownOverrideSwitch = 15;
    boolean hasEngineShutDownOverrideSwitch();
    int getEngineShutDownOverrideSwitch();
    
    // optional int32 engineTestModeSwitch = 16;
    boolean hasEngineTestModeSwitch();
    int getEngineTestModeSwitch();
    
    // optional int32 engineIdledecrementSwitch = 17;
    boolean hasEngineIdledecrementSwitch();
    int getEngineIdledecrementSwitch();
    
    // optional int32 engineIdleIncrementSwitch = 18;
    boolean hasEngineIdleIncrementSwitch();
    int getEngineIdleIncrementSwitch();
  }
  public static final class CrCtlVehSpd extends
      com.google.protobuf.GeneratedMessage
      implements CrCtlVehSpdOrBuilder {
    // Use CrCtlVehSpd.newBuilder() to construct.
    private CrCtlVehSpd(Builder builder) {
      super(builder);
    }
    private CrCtlVehSpd(boolean noInit) {}
    
    private static final CrCtlVehSpd defaultInstance;
    public static CrCtlVehSpd getDefaultInstance() {
      return defaultInstance;
    }
    
    public CrCtlVehSpd getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.internal_static_CrCtlVehSpd_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.internal_static_CrCtlVehSpd_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 cruiseControlSwitch = 1;
    public static final int CRUISECONTROLSWITCH_FIELD_NUMBER = 1;
    private int cruiseControlSwitch_;
    public boolean hasCruiseControlSwitch() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCruiseControlSwitch() {
      return cruiseControlSwitch_;
    }
    
    // optional .CruiseStatus parkingBrake = 2;
    public static final int PARKINGBRAKE_FIELD_NUMBER = 2;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus parkingBrake_;
    public boolean hasParkingBrake() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getParkingBrake() {
      return parkingBrake_;
    }
    
    // optional float vehicleSpeed = 3;
    public static final int VEHICLESPEED_FIELD_NUMBER = 3;
    private float vehicleSpeed_;
    public boolean hasVehicleSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getVehicleSpeed() {
      return vehicleSpeed_;
    }
    
    // optional .CruiseStatus clutchSwitch = 4;
    public static final int CLUTCHSWITCH_FIELD_NUMBER = 4;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus clutchSwitch_;
    public boolean hasClutchSwitch() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getClutchSwitch() {
      return clutchSwitch_;
    }
    
    // optional .CruiseStatus brakeSwitch = 5;
    public static final int BRAKESWITCH_FIELD_NUMBER = 5;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus brakeSwitch_;
    public boolean hasBrakeSwitch() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getBrakeSwitch() {
      return brakeSwitch_;
    }
    
    // optional int32 cruiseControlEnable = 6;
    public static final int CRUISECONTROLENABLE_FIELD_NUMBER = 6;
    private int cruiseControlEnable_;
    public boolean hasCruiseControlEnable() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getCruiseControlEnable() {
      return cruiseControlEnable_;
    }
    
    // optional .CruiseStatus cruiseControlActive = 7;
    public static final int CRUISECONTROLACTIVE_FIELD_NUMBER = 7;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus cruiseControlActive_;
    public boolean hasCruiseControlActive() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getCruiseControlActive() {
      return cruiseControlActive_;
    }
    
    // optional .CruiseStatus accelerateSwitch = 8;
    public static final int ACCELERATESWITCH_FIELD_NUMBER = 8;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus accelerateSwitch_;
    public boolean hasAccelerateSwitch() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getAccelerateSwitch() {
      return accelerateSwitch_;
    }
    
    // optional .CruiseStatus resumeSwitch = 9;
    public static final int RESUMESWITCH_FIELD_NUMBER = 9;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus resumeSwitch_;
    public boolean hasResumeSwitch() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getResumeSwitch() {
      return resumeSwitch_;
    }
    
    // optional .CruiseStatus decelerateSwitch = 10;
    public static final int DECELERATESWITCH_FIELD_NUMBER = 10;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus decelerateSwitch_;
    public boolean hasDecelerateSwitch() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getDecelerateSwitch() {
      return decelerateSwitch_;
    }
    
    // optional .CruiseStatus setSwitch = 11;
    public static final int SETSWITCH_FIELD_NUMBER = 11;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus setSwitch_;
    public boolean hasSetSwitch() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getSetSwitch() {
      return setSwitch_;
    }
    
    // optional int32 setSpeed = 12;
    public static final int SETSPEED_FIELD_NUMBER = 12;
    private int setSpeed_;
    public boolean hasSetSpeed() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getSetSpeed() {
      return setSpeed_;
    }
    
    // optional .CruiseControlStatus status = 13;
    public static final int STATUS_FIELD_NUMBER = 13;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus getStatus() {
      return status_;
    }
    
    // optional .PTOStatus ptoStatus = 14;
    public static final int PTOSTATUS_FIELD_NUMBER = 14;
    private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus ptoStatus_;
    public boolean hasPtoStatus() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus getPtoStatus() {
      return ptoStatus_;
    }
    
    // optional int32 engineShutDownOverrideSwitch = 15;
    public static final int ENGINESHUTDOWNOVERRIDESWITCH_FIELD_NUMBER = 15;
    private int engineShutDownOverrideSwitch_;
    public boolean hasEngineShutDownOverrideSwitch() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getEngineShutDownOverrideSwitch() {
      return engineShutDownOverrideSwitch_;
    }
    
    // optional int32 engineTestModeSwitch = 16;
    public static final int ENGINETESTMODESWITCH_FIELD_NUMBER = 16;
    private int engineTestModeSwitch_;
    public boolean hasEngineTestModeSwitch() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getEngineTestModeSwitch() {
      return engineTestModeSwitch_;
    }
    
    // optional int32 engineIdledecrementSwitch = 17;
    public static final int ENGINEIDLEDECREMENTSWITCH_FIELD_NUMBER = 17;
    private int engineIdledecrementSwitch_;
    public boolean hasEngineIdledecrementSwitch() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getEngineIdledecrementSwitch() {
      return engineIdledecrementSwitch_;
    }
    
    // optional int32 engineIdleIncrementSwitch = 18;
    public static final int ENGINEIDLEINCREMENTSWITCH_FIELD_NUMBER = 18;
    private int engineIdleIncrementSwitch_;
    public boolean hasEngineIdleIncrementSwitch() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getEngineIdleIncrementSwitch() {
      return engineIdleIncrementSwitch_;
    }
    
    private void initFields() {
      cruiseControlSwitch_ = 0;
      parkingBrake_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      vehicleSpeed_ = 0F;
      clutchSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      brakeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      cruiseControlEnable_ = 0;
      cruiseControlActive_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      accelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      resumeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      decelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      setSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      setSpeed_ = 0;
      status_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus.cruiseOffOrDisable;
      ptoStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus.offOrDisablePTO;
      engineShutDownOverrideSwitch_ = 0;
      engineTestModeSwitch_ = 0;
      engineIdledecrementSwitch_ = 0;
      engineIdleIncrementSwitch_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cruiseControlSwitch_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, parkingBrake_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, vehicleSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, clutchSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, brakeSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, cruiseControlEnable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, cruiseControlActive_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, accelerateSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, resumeSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(10, decelerateSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(11, setSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, setSpeed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(13, status_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(14, ptoStatus_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, engineShutDownOverrideSwitch_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, engineTestModeSwitch_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, engineIdledecrementSwitch_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, engineIdleIncrementSwitch_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cruiseControlSwitch_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, parkingBrake_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, vehicleSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, clutchSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, brakeSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cruiseControlEnable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, cruiseControlActive_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, accelerateSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, resumeSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, decelerateSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, setSwitch_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, setSpeed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, status_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, ptoStatus_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, engineShutDownOverrideSwitch_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, engineTestModeSwitch_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, engineIdledecrementSwitch_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, engineIdleIncrementSwitch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.internal_static_CrCtlVehSpd_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.internal_static_CrCtlVehSpd_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cruiseControlSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        parkingBrake_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000002);
        vehicleSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        clutchSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000008);
        brakeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000010);
        cruiseControlEnable_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cruiseControlActive_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000040);
        accelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000080);
        resumeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000100);
        decelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000200);
        setSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        bitField0_ = (bitField0_ & ~0x00000400);
        setSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        status_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus.cruiseOffOrDisable;
        bitField0_ = (bitField0_ & ~0x00001000);
        ptoStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus.offOrDisablePTO;
        bitField0_ = (bitField0_ & ~0x00002000);
        engineShutDownOverrideSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        engineTestModeSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        engineIdledecrementSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        engineIdleIncrementSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd build() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd result = new com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cruiseControlSwitch_ = cruiseControlSwitch_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.parkingBrake_ = parkingBrake_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vehicleSpeed_ = vehicleSpeed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clutchSwitch_ = clutchSwitch_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.brakeSwitch_ = brakeSwitch_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cruiseControlEnable_ = cruiseControlEnable_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cruiseControlActive_ = cruiseControlActive_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.accelerateSwitch_ = accelerateSwitch_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.resumeSwitch_ = resumeSwitch_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.decelerateSwitch_ = decelerateSwitch_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.setSwitch_ = setSwitch_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.setSpeed_ = setSpeed_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ptoStatus_ = ptoStatus_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.engineShutDownOverrideSwitch_ = engineShutDownOverrideSwitch_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.engineTestModeSwitch_ = engineTestModeSwitch_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.engineIdledecrementSwitch_ = engineIdledecrementSwitch_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.engineIdleIncrementSwitch_ = engineIdleIncrementSwitch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.getDefaultInstance()) return this;
        if (other.hasCruiseControlSwitch()) {
          setCruiseControlSwitch(other.getCruiseControlSwitch());
        }
        if (other.hasParkingBrake()) {
          setParkingBrake(other.getParkingBrake());
        }
        if (other.hasVehicleSpeed()) {
          setVehicleSpeed(other.getVehicleSpeed());
        }
        if (other.hasClutchSwitch()) {
          setClutchSwitch(other.getClutchSwitch());
        }
        if (other.hasBrakeSwitch()) {
          setBrakeSwitch(other.getBrakeSwitch());
        }
        if (other.hasCruiseControlEnable()) {
          setCruiseControlEnable(other.getCruiseControlEnable());
        }
        if (other.hasCruiseControlActive()) {
          setCruiseControlActive(other.getCruiseControlActive());
        }
        if (other.hasAccelerateSwitch()) {
          setAccelerateSwitch(other.getAccelerateSwitch());
        }
        if (other.hasResumeSwitch()) {
          setResumeSwitch(other.getResumeSwitch());
        }
        if (other.hasDecelerateSwitch()) {
          setDecelerateSwitch(other.getDecelerateSwitch());
        }
        if (other.hasSetSwitch()) {
          setSetSwitch(other.getSetSwitch());
        }
        if (other.hasSetSpeed()) {
          setSetSpeed(other.getSetSpeed());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasPtoStatus()) {
          setPtoStatus(other.getPtoStatus());
        }
        if (other.hasEngineShutDownOverrideSwitch()) {
          setEngineShutDownOverrideSwitch(other.getEngineShutDownOverrideSwitch());
        }
        if (other.hasEngineTestModeSwitch()) {
          setEngineTestModeSwitch(other.getEngineTestModeSwitch());
        }
        if (other.hasEngineIdledecrementSwitch()) {
          setEngineIdledecrementSwitch(other.getEngineIdledecrementSwitch());
        }
        if (other.hasEngineIdleIncrementSwitch()) {
          setEngineIdleIncrementSwitch(other.getEngineIdleIncrementSwitch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cruiseControlSwitch_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                parkingBrake_ = value;
              }
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              vehicleSpeed_ = input.readFloat();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                clutchSwitch_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                brakeSwitch_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              cruiseControlEnable_ = input.readInt32();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                cruiseControlActive_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                accelerateSwitch_ = value;
              }
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                resumeSwitch_ = value;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                decelerateSwitch_ = value;
              }
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                setSwitch_ = value;
              }
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              setSpeed_ = input.readInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                status_ = value;
              }
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus value = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                ptoStatus_ = value;
              }
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              engineShutDownOverrideSwitch_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              engineTestModeSwitch_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              engineIdledecrementSwitch_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              engineIdleIncrementSwitch_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 cruiseControlSwitch = 1;
      private int cruiseControlSwitch_ ;
      public boolean hasCruiseControlSwitch() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCruiseControlSwitch() {
        return cruiseControlSwitch_;
      }
      public Builder setCruiseControlSwitch(int value) {
        bitField0_ |= 0x00000001;
        cruiseControlSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearCruiseControlSwitch() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cruiseControlSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus parkingBrake = 2;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus parkingBrake_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasParkingBrake() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getParkingBrake() {
        return parkingBrake_;
      }
      public Builder setParkingBrake(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        parkingBrake_ = value;
        onChanged();
        return this;
      }
      public Builder clearParkingBrake() {
        bitField0_ = (bitField0_ & ~0x00000002);
        parkingBrake_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional float vehicleSpeed = 3;
      private float vehicleSpeed_ ;
      public boolean hasVehicleSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getVehicleSpeed() {
        return vehicleSpeed_;
      }
      public Builder setVehicleSpeed(float value) {
        bitField0_ |= 0x00000004;
        vehicleSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearVehicleSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vehicleSpeed_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus clutchSwitch = 4;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus clutchSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasClutchSwitch() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getClutchSwitch() {
        return clutchSwitch_;
      }
      public Builder setClutchSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        clutchSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearClutchSwitch() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clutchSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus brakeSwitch = 5;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus brakeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasBrakeSwitch() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getBrakeSwitch() {
        return brakeSwitch_;
      }
      public Builder setBrakeSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        brakeSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrakeSwitch() {
        bitField0_ = (bitField0_ & ~0x00000010);
        brakeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional int32 cruiseControlEnable = 6;
      private int cruiseControlEnable_ ;
      public boolean hasCruiseControlEnable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getCruiseControlEnable() {
        return cruiseControlEnable_;
      }
      public Builder setCruiseControlEnable(int value) {
        bitField0_ |= 0x00000020;
        cruiseControlEnable_ = value;
        onChanged();
        return this;
      }
      public Builder clearCruiseControlEnable() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cruiseControlEnable_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus cruiseControlActive = 7;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus cruiseControlActive_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasCruiseControlActive() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getCruiseControlActive() {
        return cruiseControlActive_;
      }
      public Builder setCruiseControlActive(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        cruiseControlActive_ = value;
        onChanged();
        return this;
      }
      public Builder clearCruiseControlActive() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cruiseControlActive_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus accelerateSwitch = 8;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus accelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasAccelerateSwitch() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getAccelerateSwitch() {
        return accelerateSwitch_;
      }
      public Builder setAccelerateSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        accelerateSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccelerateSwitch() {
        bitField0_ = (bitField0_ & ~0x00000080);
        accelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus resumeSwitch = 9;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus resumeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasResumeSwitch() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getResumeSwitch() {
        return resumeSwitch_;
      }
      public Builder setResumeSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        resumeSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearResumeSwitch() {
        bitField0_ = (bitField0_ & ~0x00000100);
        resumeSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus decelerateSwitch = 10;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus decelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasDecelerateSwitch() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getDecelerateSwitch() {
        return decelerateSwitch_;
      }
      public Builder setDecelerateSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        decelerateSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearDecelerateSwitch() {
        bitField0_ = (bitField0_ & ~0x00000200);
        decelerateSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional .CruiseStatus setSwitch = 11;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus setSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
      public boolean hasSetSwitch() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus getSetSwitch() {
        return setSwitch_;
      }
      public Builder setSetSwitch(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        setSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearSetSwitch() {
        bitField0_ = (bitField0_ & ~0x00000400);
        setSwitch_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseStatus.notActuatedStatus;
        onChanged();
        return this;
      }
      
      // optional int32 setSpeed = 12;
      private int setSpeed_ ;
      public boolean hasSetSpeed() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getSetSpeed() {
        return setSpeed_;
      }
      public Builder setSetSpeed(int value) {
        bitField0_ |= 0x00000800;
        setSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSetSpeed() {
        bitField0_ = (bitField0_ & ~0x00000800);
        setSpeed_ = 0;
        onChanged();
        return this;
      }
      
      // optional .CruiseControlStatus status = 13;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus status_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus.cruiseOffOrDisable;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus getStatus() {
        return status_;
      }
      public Builder setStatus(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        status_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CruiseControlStatus.cruiseOffOrDisable;
        onChanged();
        return this;
      }
      
      // optional .PTOStatus ptoStatus = 14;
      private com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus ptoStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus.offOrDisablePTO;
      public boolean hasPtoStatus() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus getPtoStatus() {
        return ptoStatus_;
      }
      public Builder setPtoStatus(com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        ptoStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearPtoStatus() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ptoStatus_ = com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.PTOStatus.offOrDisablePTO;
        onChanged();
        return this;
      }
      
      // optional int32 engineShutDownOverrideSwitch = 15;
      private int engineShutDownOverrideSwitch_ ;
      public boolean hasEngineShutDownOverrideSwitch() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getEngineShutDownOverrideSwitch() {
        return engineShutDownOverrideSwitch_;
      }
      public Builder setEngineShutDownOverrideSwitch(int value) {
        bitField0_ |= 0x00004000;
        engineShutDownOverrideSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineShutDownOverrideSwitch() {
        bitField0_ = (bitField0_ & ~0x00004000);
        engineShutDownOverrideSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 engineTestModeSwitch = 16;
      private int engineTestModeSwitch_ ;
      public boolean hasEngineTestModeSwitch() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getEngineTestModeSwitch() {
        return engineTestModeSwitch_;
      }
      public Builder setEngineTestModeSwitch(int value) {
        bitField0_ |= 0x00008000;
        engineTestModeSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineTestModeSwitch() {
        bitField0_ = (bitField0_ & ~0x00008000);
        engineTestModeSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 engineIdledecrementSwitch = 17;
      private int engineIdledecrementSwitch_ ;
      public boolean hasEngineIdledecrementSwitch() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getEngineIdledecrementSwitch() {
        return engineIdledecrementSwitch_;
      }
      public Builder setEngineIdledecrementSwitch(int value) {
        bitField0_ |= 0x00010000;
        engineIdledecrementSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineIdledecrementSwitch() {
        bitField0_ = (bitField0_ & ~0x00010000);
        engineIdledecrementSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 engineIdleIncrementSwitch = 18;
      private int engineIdleIncrementSwitch_ ;
      public boolean hasEngineIdleIncrementSwitch() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getEngineIdleIncrementSwitch() {
        return engineIdleIncrementSwitch_;
      }
      public Builder setEngineIdleIncrementSwitch(int value) {
        bitField0_ |= 0x00020000;
        engineIdleIncrementSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineIdleIncrementSwitch() {
        bitField0_ = (bitField0_ & ~0x00020000);
        engineIdleIncrementSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CrCtlVehSpd)
    }
    
    static {
      defaultInstance = new CrCtlVehSpd(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CrCtlVehSpd)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CrCtlVehSpd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CrCtlVehSpd_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7core/proto/terminal/CANBUSData/Report/" +
      "CrCtlVehSpd.proto\"\361\004\n\013CrCtlVehSpd\022\033\n\023cru" +
      "iseControlSwitch\030\001 \001(\005\022#\n\014parkingBrake\030\002" +
      " \001(\0162\r.CruiseStatus\022\024\n\014vehicleSpeed\030\003 \001(" +
      "\002\022#\n\014clutchSwitch\030\004 \001(\0162\r.CruiseStatus\022\"" +
      "\n\013brakeSwitch\030\005 \001(\0162\r.CruiseStatus\022\033\n\023cr" +
      "uiseControlEnable\030\006 \001(\005\022*\n\023cruiseControl" +
      "Active\030\007 \001(\0162\r.CruiseStatus\022\'\n\020accelerat" +
      "eSwitch\030\010 \001(\0162\r.CruiseStatus\022#\n\014resumeSw" +
      "itch\030\t \001(\0162\r.CruiseStatus\022\'\n\020decelerateS",
      "witch\030\n \001(\0162\r.CruiseStatus\022 \n\tsetSwitch\030" +
      "\013 \001(\0162\r.CruiseStatus\022\020\n\010setSpeed\030\014 \001(\005\022$" +
      "\n\006status\030\r \001(\0162\024.CruiseControlStatus\022\035\n\t" +
      "ptoStatus\030\016 \001(\0162\n.PTOStatus\022$\n\034engineShu" +
      "tDownOverrideSwitch\030\017 \001(\005\022\034\n\024engineTestM" +
      "odeSwitch\030\020 \001(\005\022!\n\031engineIdledecrementSw" +
      "itch\030\021 \001(\005\022!\n\031engineIdleIncrementSwitch\030" +
      "\022 \001(\005*b\n\014CruiseStatus\022\025\n\021notActuatedStat" +
      "us\020\000\022\022\n\016actuatedStatus\020\001\022\017\n\013errorStatus\020" +
      "\002\022\026\n\022notAvailableStatus\020\003*\223\001\n\023CruiseCont",
      "rolStatus\022\026\n\022cruiseOffOrDisable\020\000\022\016\n\ncru" +
      "iseHold\020\001\022\r\n\tcruiseAcc\020\002\022\r\n\tcruiseDec\020\003\022" +
      "\020\n\014cruiseResume\020\004\022\r\n\tcruiseSet\020\005\022\025\n\021crui" +
      "seAccOverride\020\006*\246\002\n\tPTOStatus\022\023\n\017offOrDi" +
      "sablePTO\020\000\022\013\n\007holdPTO\020\001\022\027\n\023standbyOrNeut" +
      "ralPTO\020\003\022\016\n\nnotUsedPTO\020\004\022\n\n\006setPTO\020\005\022\021\n\r" +
      "deceleratePTO\020\006\022\r\n\tresumePTO\020\007\022\n\n\006accPTO" +
      "\020\010\022\013\n\007notUsed\020\t\022\033\n\027programmedSetSpeedPTO" +
      "01\020\n\022\033\n\027programmedSetSpeedPTO02\020\013\022\033\n\027pro" +
      "grammedSetSpeedPTO03\020\014\022\033\n\027programmedSetS",
      "peedPTO04\020\r\022\023\n\017notAvailablePTO\020\037BZ\nIcom." +
      "navinfo.opentsp.platform.location.protoc" +
      "ol.terminal.CANBUSData.ReportB\rLCCrCtlVe" +
      "hSpd"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CrCtlVehSpd_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CrCtlVehSpd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CrCtlVehSpd_descriptor,
              new java.lang.String[] { "CruiseControlSwitch", "ParkingBrake", "VehicleSpeed", "ClutchSwitch", "BrakeSwitch", "CruiseControlEnable", "CruiseControlActive", "AccelerateSwitch", "ResumeSwitch", "DecelerateSwitch", "SetSwitch", "SetSpeed", "Status", "PtoStatus", "EngineShutDownOverrideSwitch", "EngineTestModeSwitch", "EngineIdledecrementSwitch", "EngineIdleIncrementSwitch", },
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.class,
              com.navinfo.opentsp.platform.location.protocol.terminal.CANBUSData.Report.LCCrCtlVehSpd.CrCtlVehSpd.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
