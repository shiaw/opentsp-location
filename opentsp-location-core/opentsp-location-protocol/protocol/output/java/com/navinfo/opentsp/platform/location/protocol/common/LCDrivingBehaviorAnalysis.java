// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/common/java/DrivingBehaviorAnalysis.proto

package com.navinfo.opentsp.platform.location.protocol.common;

public final class LCDrivingBehaviorAnalysis {
  private LCDrivingBehaviorAnalysis() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DrivingBehaviorAnalysisOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 turningAngle = 1;
    boolean hasTurningAngle();
    int getTurningAngle();
    
    // optional int32 lowOilDrivingValue = 2;
    boolean hasLowOilDrivingValue();
    int getLowOilDrivingValue();
    
    // optional int32 vehicleSpeedFromEcu = 3;
    boolean hasVehicleSpeedFromEcu();
    int getVehicleSpeedFromEcu();
    
    // optional int32 rpmWhenAlarming = 4;
    boolean hasRpmWhenAlarming();
    int getRpmWhenAlarming();
    
    // optional int32 velocityChangeValue = 5;
    boolean hasVelocityChangeValue();
    int getVelocityChangeValue();
    
    // optional int32 currentGearshift = 6;
    boolean hasCurrentGearshift();
    int getCurrentGearshift();
    
    // optional int32 currentRPM = 7;
    boolean hasCurrentRPM();
    int getCurrentRPM();
    
    // optional string deviceIdentity = 8;
    boolean hasDeviceIdentity();
    String getDeviceIdentity();
    
    // optional int32 brakeTimes = 9;
    boolean hasBrakeTimes();
    int getBrakeTimes();
    
    // optional int32 clutchTimes = 10;
    boolean hasClutchTimes();
    int getClutchTimes();
    
    // optional int32 retarderTimes = 11;
    boolean hasRetarderTimes();
    int getRetarderTimes();
    
    // optional int32 absTimes = 12;
    boolean hasAbsTimes();
    int getAbsTimes();
    
    // optional int32 reverseTimes = 13;
    boolean hasReverseTimes();
    int getReverseTimes();
  }
  public static final class DrivingBehaviorAnalysis extends
      com.google.protobuf.GeneratedMessage
      implements DrivingBehaviorAnalysisOrBuilder {
    // Use DrivingBehaviorAnalysis.newBuilder() to construct.
    private DrivingBehaviorAnalysis(Builder builder) {
      super(builder);
    }
    private DrivingBehaviorAnalysis(boolean noInit) {}
    
    private static final DrivingBehaviorAnalysis defaultInstance;
    public static DrivingBehaviorAnalysis getDefaultInstance() {
      return defaultInstance;
    }
    
    public DrivingBehaviorAnalysis getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.internal_static_DrivingBehaviorAnalysis_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.internal_static_DrivingBehaviorAnalysis_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 turningAngle = 1;
    public static final int TURNINGANGLE_FIELD_NUMBER = 1;
    private int turningAngle_;
    public boolean hasTurningAngle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getTurningAngle() {
      return turningAngle_;
    }
    
    // optional int32 lowOilDrivingValue = 2;
    public static final int LOWOILDRIVINGVALUE_FIELD_NUMBER = 2;
    private int lowOilDrivingValue_;
    public boolean hasLowOilDrivingValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLowOilDrivingValue() {
      return lowOilDrivingValue_;
    }
    
    // optional int32 vehicleSpeedFromEcu = 3;
    public static final int VEHICLESPEEDFROMECU_FIELD_NUMBER = 3;
    private int vehicleSpeedFromEcu_;
    public boolean hasVehicleSpeedFromEcu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVehicleSpeedFromEcu() {
      return vehicleSpeedFromEcu_;
    }
    
    // optional int32 rpmWhenAlarming = 4;
    public static final int RPMWHENALARMING_FIELD_NUMBER = 4;
    private int rpmWhenAlarming_;
    public boolean hasRpmWhenAlarming() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRpmWhenAlarming() {
      return rpmWhenAlarming_;
    }
    
    // optional int32 velocityChangeValue = 5;
    public static final int VELOCITYCHANGEVALUE_FIELD_NUMBER = 5;
    private int velocityChangeValue_;
    public boolean hasVelocityChangeValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getVelocityChangeValue() {
      return velocityChangeValue_;
    }
    
    // optional int32 currentGearshift = 6;
    public static final int CURRENTGEARSHIFT_FIELD_NUMBER = 6;
    private int currentGearshift_;
    public boolean hasCurrentGearshift() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getCurrentGearshift() {
      return currentGearshift_;
    }
    
    // optional int32 currentRPM = 7;
    public static final int CURRENTRPM_FIELD_NUMBER = 7;
    private int currentRPM_;
    public boolean hasCurrentRPM() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getCurrentRPM() {
      return currentRPM_;
    }
    
    // optional string deviceIdentity = 8;
    public static final int DEVICEIDENTITY_FIELD_NUMBER = 8;
    private java.lang.Object deviceIdentity_;
    public boolean hasDeviceIdentity() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getDeviceIdentity() {
      java.lang.Object ref = deviceIdentity_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          deviceIdentity_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDeviceIdentityBytes() {
      java.lang.Object ref = deviceIdentity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        deviceIdentity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 brakeTimes = 9;
    public static final int BRAKETIMES_FIELD_NUMBER = 9;
    private int brakeTimes_;
    public boolean hasBrakeTimes() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getBrakeTimes() {
      return brakeTimes_;
    }
    
    // optional int32 clutchTimes = 10;
    public static final int CLUTCHTIMES_FIELD_NUMBER = 10;
    private int clutchTimes_;
    public boolean hasClutchTimes() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getClutchTimes() {
      return clutchTimes_;
    }
    
    // optional int32 retarderTimes = 11;
    public static final int RETARDERTIMES_FIELD_NUMBER = 11;
    private int retarderTimes_;
    public boolean hasRetarderTimes() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getRetarderTimes() {
      return retarderTimes_;
    }
    
    // optional int32 absTimes = 12;
    public static final int ABSTIMES_FIELD_NUMBER = 12;
    private int absTimes_;
    public boolean hasAbsTimes() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getAbsTimes() {
      return absTimes_;
    }
    
    // optional int32 reverseTimes = 13;
    public static final int REVERSETIMES_FIELD_NUMBER = 13;
    private int reverseTimes_;
    public boolean hasReverseTimes() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getReverseTimes() {
      return reverseTimes_;
    }
    
    private void initFields() {
      turningAngle_ = 0;
      lowOilDrivingValue_ = 0;
      vehicleSpeedFromEcu_ = 0;
      rpmWhenAlarming_ = 0;
      velocityChangeValue_ = 0;
      currentGearshift_ = 0;
      currentRPM_ = 0;
      deviceIdentity_ = "";
      brakeTimes_ = 0;
      clutchTimes_ = 0;
      retarderTimes_ = 0;
      absTimes_ = 0;
      reverseTimes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, turningAngle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lowOilDrivingValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, vehicleSpeedFromEcu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rpmWhenAlarming_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, velocityChangeValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, currentGearshift_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, currentRPM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getDeviceIdentityBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, brakeTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, clutchTimes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, retarderTimes_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, absTimes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, reverseTimes_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, turningAngle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lowOilDrivingValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, vehicleSpeedFromEcu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rpmWhenAlarming_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, velocityChangeValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, currentGearshift_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, currentRPM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getDeviceIdentityBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, brakeTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, clutchTimes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, retarderTimes_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, absTimes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, reverseTimes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysisOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.internal_static_DrivingBehaviorAnalysis_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.internal_static_DrivingBehaviorAnalysis_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        turningAngle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lowOilDrivingValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vehicleSpeedFromEcu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rpmWhenAlarming_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        velocityChangeValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        currentGearshift_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        currentRPM_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        deviceIdentity_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        brakeTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        clutchTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        retarderTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        absTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        reverseTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.getDescriptor();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis getDefaultInstanceForType() {
        return com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.getDefaultInstance();
      }
      
      public com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis build() {
        com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis buildPartial() {
        com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis result = new com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.turningAngle_ = turningAngle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lowOilDrivingValue_ = lowOilDrivingValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vehicleSpeedFromEcu_ = vehicleSpeedFromEcu_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rpmWhenAlarming_ = rpmWhenAlarming_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.velocityChangeValue_ = velocityChangeValue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.currentGearshift_ = currentGearshift_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.currentRPM_ = currentRPM_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.deviceIdentity_ = deviceIdentity_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.brakeTimes_ = brakeTimes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.clutchTimes_ = clutchTimes_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.retarderTimes_ = retarderTimes_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.absTimes_ = absTimes_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.reverseTimes_ = reverseTimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis) {
          return mergeFrom((com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis other) {
        if (other == com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.getDefaultInstance()) return this;
        if (other.hasTurningAngle()) {
          setTurningAngle(other.getTurningAngle());
        }
        if (other.hasLowOilDrivingValue()) {
          setLowOilDrivingValue(other.getLowOilDrivingValue());
        }
        if (other.hasVehicleSpeedFromEcu()) {
          setVehicleSpeedFromEcu(other.getVehicleSpeedFromEcu());
        }
        if (other.hasRpmWhenAlarming()) {
          setRpmWhenAlarming(other.getRpmWhenAlarming());
        }
        if (other.hasVelocityChangeValue()) {
          setVelocityChangeValue(other.getVelocityChangeValue());
        }
        if (other.hasCurrentGearshift()) {
          setCurrentGearshift(other.getCurrentGearshift());
        }
        if (other.hasCurrentRPM()) {
          setCurrentRPM(other.getCurrentRPM());
        }
        if (other.hasDeviceIdentity()) {
          setDeviceIdentity(other.getDeviceIdentity());
        }
        if (other.hasBrakeTimes()) {
          setBrakeTimes(other.getBrakeTimes());
        }
        if (other.hasClutchTimes()) {
          setClutchTimes(other.getClutchTimes());
        }
        if (other.hasRetarderTimes()) {
          setRetarderTimes(other.getRetarderTimes());
        }
        if (other.hasAbsTimes()) {
          setAbsTimes(other.getAbsTimes());
        }
        if (other.hasReverseTimes()) {
          setReverseTimes(other.getReverseTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              turningAngle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lowOilDrivingValue_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vehicleSpeedFromEcu_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rpmWhenAlarming_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              velocityChangeValue_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              currentGearshift_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              currentRPM_ = input.readInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              deviceIdentity_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              brakeTimes_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              clutchTimes_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              retarderTimes_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              absTimes_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              reverseTimes_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 turningAngle = 1;
      private int turningAngle_ ;
      public boolean hasTurningAngle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getTurningAngle() {
        return turningAngle_;
      }
      public Builder setTurningAngle(int value) {
        bitField0_ |= 0x00000001;
        turningAngle_ = value;
        onChanged();
        return this;
      }
      public Builder clearTurningAngle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        turningAngle_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 lowOilDrivingValue = 2;
      private int lowOilDrivingValue_ ;
      public boolean hasLowOilDrivingValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLowOilDrivingValue() {
        return lowOilDrivingValue_;
      }
      public Builder setLowOilDrivingValue(int value) {
        bitField0_ |= 0x00000002;
        lowOilDrivingValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearLowOilDrivingValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lowOilDrivingValue_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 vehicleSpeedFromEcu = 3;
      private int vehicleSpeedFromEcu_ ;
      public boolean hasVehicleSpeedFromEcu() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getVehicleSpeedFromEcu() {
        return vehicleSpeedFromEcu_;
      }
      public Builder setVehicleSpeedFromEcu(int value) {
        bitField0_ |= 0x00000004;
        vehicleSpeedFromEcu_ = value;
        onChanged();
        return this;
      }
      public Builder clearVehicleSpeedFromEcu() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vehicleSpeedFromEcu_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 rpmWhenAlarming = 4;
      private int rpmWhenAlarming_ ;
      public boolean hasRpmWhenAlarming() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRpmWhenAlarming() {
        return rpmWhenAlarming_;
      }
      public Builder setRpmWhenAlarming(int value) {
        bitField0_ |= 0x00000008;
        rpmWhenAlarming_ = value;
        onChanged();
        return this;
      }
      public Builder clearRpmWhenAlarming() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rpmWhenAlarming_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 velocityChangeValue = 5;
      private int velocityChangeValue_ ;
      public boolean hasVelocityChangeValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getVelocityChangeValue() {
        return velocityChangeValue_;
      }
      public Builder setVelocityChangeValue(int value) {
        bitField0_ |= 0x00000010;
        velocityChangeValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearVelocityChangeValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        velocityChangeValue_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 currentGearshift = 6;
      private int currentGearshift_ ;
      public boolean hasCurrentGearshift() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getCurrentGearshift() {
        return currentGearshift_;
      }
      public Builder setCurrentGearshift(int value) {
        bitField0_ |= 0x00000020;
        currentGearshift_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentGearshift() {
        bitField0_ = (bitField0_ & ~0x00000020);
        currentGearshift_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 currentRPM = 7;
      private int currentRPM_ ;
      public boolean hasCurrentRPM() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getCurrentRPM() {
        return currentRPM_;
      }
      public Builder setCurrentRPM(int value) {
        bitField0_ |= 0x00000040;
        currentRPM_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentRPM() {
        bitField0_ = (bitField0_ & ~0x00000040);
        currentRPM_ = 0;
        onChanged();
        return this;
      }
      
      // optional string deviceIdentity = 8;
      private java.lang.Object deviceIdentity_ = "";
      public boolean hasDeviceIdentity() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getDeviceIdentity() {
        java.lang.Object ref = deviceIdentity_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          deviceIdentity_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDeviceIdentity(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        deviceIdentity_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceIdentity() {
        bitField0_ = (bitField0_ & ~0x00000080);
        deviceIdentity_ = getDefaultInstance().getDeviceIdentity();
        onChanged();
        return this;
      }
      void setDeviceIdentity(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        deviceIdentity_ = value;
        onChanged();
      }
      
      // optional int32 brakeTimes = 9;
      private int brakeTimes_ ;
      public boolean hasBrakeTimes() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getBrakeTimes() {
        return brakeTimes_;
      }
      public Builder setBrakeTimes(int value) {
        bitField0_ |= 0x00000100;
        brakeTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrakeTimes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        brakeTimes_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 clutchTimes = 10;
      private int clutchTimes_ ;
      public boolean hasClutchTimes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getClutchTimes() {
        return clutchTimes_;
      }
      public Builder setClutchTimes(int value) {
        bitField0_ |= 0x00000200;
        clutchTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearClutchTimes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        clutchTimes_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 retarderTimes = 11;
      private int retarderTimes_ ;
      public boolean hasRetarderTimes() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getRetarderTimes() {
        return retarderTimes_;
      }
      public Builder setRetarderTimes(int value) {
        bitField0_ |= 0x00000400;
        retarderTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRetarderTimes() {
        bitField0_ = (bitField0_ & ~0x00000400);
        retarderTimes_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 absTimes = 12;
      private int absTimes_ ;
      public boolean hasAbsTimes() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getAbsTimes() {
        return absTimes_;
      }
      public Builder setAbsTimes(int value) {
        bitField0_ |= 0x00000800;
        absTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearAbsTimes() {
        bitField0_ = (bitField0_ & ~0x00000800);
        absTimes_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 reverseTimes = 13;
      private int reverseTimes_ ;
      public boolean hasReverseTimes() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getReverseTimes() {
        return reverseTimes_;
      }
      public Builder setReverseTimes(int value) {
        bitField0_ |= 0x00001000;
        reverseTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearReverseTimes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        reverseTimes_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DrivingBehaviorAnalysis)
    }
    
    static {
      defaultInstance = new DrivingBehaviorAnalysis(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DrivingBehaviorAnalysis)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DrivingBehaviorAnalysis_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DrivingBehaviorAnalysis_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4core/proto/common/java/DrivingBehavior" +
      "Analysis.proto\"\314\002\n\027DrivingBehaviorAnalys" +
      "is\022\024\n\014turningAngle\030\001 \001(\005\022\032\n\022lowOilDrivin" +
      "gValue\030\002 \001(\005\022\033\n\023vehicleSpeedFromEcu\030\003 \001(" +
      "\005\022\027\n\017rpmWhenAlarming\030\004 \001(\005\022\033\n\023velocityCh" +
      "angeValue\030\005 \001(\005\022\030\n\020currentGearshift\030\006 \001(" +
      "\005\022\022\n\ncurrentRPM\030\007 \001(\005\022\026\n\016deviceIdentity\030" +
      "\010 \001(\t\022\022\n\nbrakeTimes\030\t \001(\005\022\023\n\013clutchTimes" +
      "\030\n \001(\005\022\025\n\rretarderTimes\030\013 \001(\005\022\020\n\010absTime" +
      "s\030\014 \001(\005\022\024\n\014reverseTimes\030\r \001(\005BR\n5com.nav",
      "info.opentsp.platform.location.protocol." +
      "commonB\031LCDrivingBehaviorAnalysis"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DrivingBehaviorAnalysis_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DrivingBehaviorAnalysis_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DrivingBehaviorAnalysis_descriptor,
              new java.lang.String[] { "TurningAngle", "LowOilDrivingValue", "VehicleSpeedFromEcu", "RpmWhenAlarming", "VelocityChangeValue", "CurrentGearshift", "CurrentRPM", "DeviceIdentity", "BrakeTimes", "ClutchTimes", "RetarderTimes", "AbsTimes", "ReverseTimes", },
              com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.class,
              com.navinfo.opentsp.platform.location.protocol.common.LCDrivingBehaviorAnalysis.DrivingBehaviorAnalysis.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
