// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/webservice/statisticsdata/entity/AllAlarmData.proto

package com.navinfo.opentsp.platform.location.protocol.webservice.statisticsdata.entity;

public final class LCAllAlarmData {
  private LCAllAlarmData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AllAlarmDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 terminalID = 1;
    boolean hasTerminalID();
    long getTerminalID();
    
    // repeated .OverspeedData overspeedList = 2;
    java.util.List<LCOverspeedData.OverspeedData>
        getOverspeedListList();
    LCOverspeedData.OverspeedData getOverspeedList(int index);
    int getOverspeedListCount();
    java.util.List<? extends LCOverspeedData.OverspeedDataOrBuilder>
        getOverspeedListOrBuilderList();
    LCOverspeedData.OverspeedDataOrBuilder getOverspeedListOrBuilder(
            int index);
    
    // repeated .AreaInOutData areaInOutList = 3;
    java.util.List<LCAreaInOutData.AreaInOutData>
        getAreaInOutListList();
    LCAreaInOutData.AreaInOutData getAreaInOutList(int index);
    int getAreaInOutListCount();
    java.util.List<? extends LCAreaInOutData.AreaInOutDataOrBuilder>
        getAreaInOutListOrBuilderList();
    LCAreaInOutData.AreaInOutDataOrBuilder getAreaInOutListOrBuilder(
            int index);
    
    // repeated .AreaOverspeedData areaOverSpdList = 4;
    java.util.List<LCAreaOverspeedData.AreaOverspeedData>
        getAreaOverSpdListList();
    LCAreaOverspeedData.AreaOverspeedData getAreaOverSpdList(int index);
    int getAreaOverSpdListCount();
    java.util.List<? extends LCAreaOverspeedData.AreaOverspeedDataOrBuilder>
        getAreaOverSpdListOrBuilderList();
    LCAreaOverspeedData.AreaOverspeedDataOrBuilder getAreaOverSpdListOrBuilder(
            int index);
    
    // repeated .RouteInOutData routeInOutList = 5;
    java.util.List<LCRouteInOutData.RouteInOutData>
        getRouteInOutListList();
    LCRouteInOutData.RouteInOutData getRouteInOutList(int index);
    int getRouteInOutListCount();
    java.util.List<? extends LCRouteInOutData.RouteInOutDataOrBuilder>
        getRouteInOutListOrBuilderList();
    LCRouteInOutData.RouteInOutDataOrBuilder getRouteInOutListOrBuilder(
            int index);
    
    // repeated .RLineOverspeedData rlineOverSpdList = 6;
    java.util.List<LCRLineOverspeedData.RLineOverspeedData>
        getRlineOverSpdListList();
    LCRLineOverspeedData.RLineOverspeedData getRlineOverSpdList(int index);
    int getRlineOverSpdListCount();
    java.util.List<? extends LCRLineOverspeedData.RLineOverspeedDataOrBuilder>
        getRlineOverSpdListOrBuilderList();
    LCRLineOverspeedData.RLineOverspeedDataOrBuilder getRlineOverSpdListOrBuilder(
            int index);
    
    // repeated .RLineOvertimeData rlineOverTList = 7;
    java.util.List<LCRLineOvertimeData.RLineOvertimeData>
        getRlineOverTListList();
    LCRLineOvertimeData.RLineOvertimeData getRlineOverTList(int index);
    int getRlineOverTListCount();
    java.util.List<? extends LCRLineOvertimeData.RLineOvertimeDataOrBuilder>
        getRlineOverTListOrBuilderList();
    LCRLineOvertimeData.RLineOvertimeDataOrBuilder getRlineOverTListOrBuilder(
            int index);
    
    // repeated .OvertimeParkingData overtimePList = 8;
    java.util.List<LCOvertimeParkingData.OvertimeParkingData>
        getOvertimePListList();
    LCOvertimeParkingData.OvertimeParkingData getOvertimePList(int index);
    int getOvertimePListCount();
    java.util.List<? extends LCOvertimeParkingData.OvertimeParkingDataOrBuilder>
        getOvertimePListOrBuilderList();
    LCOvertimeParkingData.OvertimeParkingDataOrBuilder getOvertimePListOrBuilder(
            int index);
    
    // repeated .FatigueData fatigueList = 9;
    java.util.List<LCFatigueData.FatigueData>
        getFatigueListList();
    LCFatigueData.FatigueData getFatigueList(int index);
    int getFatigueListCount();
    java.util.List<? extends LCFatigueData.FatigueDataOrBuilder>
        getFatigueListOrBuilderList();
    LCFatigueData.FatigueDataOrBuilder getFatigueListOrBuilder(
            int index);
    
    // repeated .EmergencyData emergencyList = 10;
    java.util.List<LCEmergencyData.EmergencyData>
        getEmergencyListList();
    LCEmergencyData.EmergencyData getEmergencyList(int index);
    int getEmergencyListCount();
    java.util.List<? extends LCEmergencyData.EmergencyDataOrBuilder>
        getEmergencyListOrBuilderList();
    LCEmergencyData.EmergencyDataOrBuilder getEmergencyListOrBuilder(
            int index);
    
    // repeated .PowerStayInLowerData powerSILList = 11;
    java.util.List<LCPowerStayInLowerData.PowerStayInLowerData>
        getPowerSILListList();
    LCPowerStayInLowerData.PowerStayInLowerData getPowerSILList(int index);
    int getPowerSILListCount();
    java.util.List<? extends LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder>
        getPowerSILListOrBuilderList();
    LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder getPowerSILListOrBuilder(
            int index);
    
    // repeated .ElectricPowerOffData electricPOList = 12;
    java.util.List<LCElectricPowerOffData.ElectricPowerOffData>
        getElectricPOListList();
    LCElectricPowerOffData.ElectricPowerOffData getElectricPOList(int index);
    int getElectricPOListCount();
    java.util.List<? extends LCElectricPowerOffData.ElectricPowerOffDataOrBuilder>
        getElectricPOListOrBuilderList();
    LCElectricPowerOffData.ElectricPowerOffDataOrBuilder getElectricPOListOrBuilder(
            int index);
    
    // repeated .ACCStatusData accList = 13;
    java.util.List<LCACCStatusData.ACCStatusData>
        getAccListList();
    LCACCStatusData.ACCStatusData getAccList(int index);
    int getAccListCount();
    java.util.List<? extends LCACCStatusData.ACCStatusDataOrBuilder>
        getAccListOrBuilderList();
    LCACCStatusData.ACCStatusDataOrBuilder getAccListOrBuilder(
            int index);
    
    // repeated .MileagesData mileageList = 14;
    java.util.List<LCMileagesData.MileagesData>
        getMileageListList();
    LCMileagesData.MileagesData getMileageList(int index);
    int getMileageListCount();
    java.util.List<? extends LCMileagesData.MileagesDataOrBuilder>
        getMileageListOrBuilderList();
    LCMileagesData.MileagesDataOrBuilder getMileageListOrBuilder(
            int index);
    
    // repeated .DriverLoginData driverLoginList = 15;
    java.util.List<LCDriverLoginData.DriverLoginData>
        getDriverLoginListList();
    LCDriverLoginData.DriverLoginData getDriverLoginList(int index);
    int getDriverLoginListCount();
    java.util.List<? extends LCDriverLoginData.DriverLoginDataOrBuilder>
        getDriverLoginListOrBuilderList();
    LCDriverLoginData.DriverLoginDataOrBuilder getDriverLoginListOrBuilder(
            int index);
    
    // repeated .TerOnOffStatusData terminalStuList = 16;
    java.util.List<LCTerOnOffStatusData.TerOnOffStatusData>
        getTerminalStuListList();
    LCTerOnOffStatusData.TerOnOffStatusData getTerminalStuList(int index);
    int getTerminalStuListCount();
    java.util.List<? extends LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder>
        getTerminalStuListOrBuilderList();
    LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder getTerminalStuListOrBuilder(
            int index);
    
    // repeated .WFlowData wflowList = 17;
    java.util.List<LCWFlowData.WFlowData>
        getWflowListList();
    LCWFlowData.WFlowData getWflowList(int index);
    int getWflowListCount();
    java.util.List<? extends LCWFlowData.WFlowDataOrBuilder>
        getWflowListOrBuilderList();
    LCWFlowData.WFlowDataOrBuilder getWflowListOrBuilder(
            int index);
  }
  public static final class AllAlarmData extends
      com.google.protobuf.GeneratedMessage
      implements AllAlarmDataOrBuilder {
    // Use AllAlarmData.newBuilder() to construct.
    private AllAlarmData(Builder builder) {
      super(builder);
    }
    private AllAlarmData(boolean noInit) {}
    
    private static final AllAlarmData defaultInstance;
    public static AllAlarmData getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllAlarmData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCAllAlarmData.internal_static_AllAlarmData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCAllAlarmData.internal_static_AllAlarmData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 terminalID = 1;
    public static final int TERMINALID_FIELD_NUMBER = 1;
    private long terminalID_;
    public boolean hasTerminalID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTerminalID() {
      return terminalID_;
    }
    
    // repeated .OverspeedData overspeedList = 2;
    public static final int OVERSPEEDLIST_FIELD_NUMBER = 2;
    private java.util.List<LCOverspeedData.OverspeedData> overspeedList_;
    public java.util.List<LCOverspeedData.OverspeedData> getOverspeedListList() {
      return overspeedList_;
    }
    public java.util.List<? extends LCOverspeedData.OverspeedDataOrBuilder>
        getOverspeedListOrBuilderList() {
      return overspeedList_;
    }
    public int getOverspeedListCount() {
      return overspeedList_.size();
    }
    public LCOverspeedData.OverspeedData getOverspeedList(int index) {
      return overspeedList_.get(index);
    }
    public LCOverspeedData.OverspeedDataOrBuilder getOverspeedListOrBuilder(
        int index) {
      return overspeedList_.get(index);
    }
    
    // repeated .AreaInOutData areaInOutList = 3;
    public static final int AREAINOUTLIST_FIELD_NUMBER = 3;
    private java.util.List<LCAreaInOutData.AreaInOutData> areaInOutList_;
    public java.util.List<LCAreaInOutData.AreaInOutData> getAreaInOutListList() {
      return areaInOutList_;
    }
    public java.util.List<? extends LCAreaInOutData.AreaInOutDataOrBuilder>
        getAreaInOutListOrBuilderList() {
      return areaInOutList_;
    }
    public int getAreaInOutListCount() {
      return areaInOutList_.size();
    }
    public LCAreaInOutData.AreaInOutData getAreaInOutList(int index) {
      return areaInOutList_.get(index);
    }
    public LCAreaInOutData.AreaInOutDataOrBuilder getAreaInOutListOrBuilder(
        int index) {
      return areaInOutList_.get(index);
    }
    
    // repeated .AreaOverspeedData areaOverSpdList = 4;
    public static final int AREAOVERSPDLIST_FIELD_NUMBER = 4;
    private java.util.List<LCAreaOverspeedData.AreaOverspeedData> areaOverSpdList_;
    public java.util.List<LCAreaOverspeedData.AreaOverspeedData> getAreaOverSpdListList() {
      return areaOverSpdList_;
    }
    public java.util.List<? extends LCAreaOverspeedData.AreaOverspeedDataOrBuilder>
        getAreaOverSpdListOrBuilderList() {
      return areaOverSpdList_;
    }
    public int getAreaOverSpdListCount() {
      return areaOverSpdList_.size();
    }
    public LCAreaOverspeedData.AreaOverspeedData getAreaOverSpdList(int index) {
      return areaOverSpdList_.get(index);
    }
    public LCAreaOverspeedData.AreaOverspeedDataOrBuilder getAreaOverSpdListOrBuilder(
        int index) {
      return areaOverSpdList_.get(index);
    }
    
    // repeated .RouteInOutData routeInOutList = 5;
    public static final int ROUTEINOUTLIST_FIELD_NUMBER = 5;
    private java.util.List<LCRouteInOutData.RouteInOutData> routeInOutList_;
    public java.util.List<LCRouteInOutData.RouteInOutData> getRouteInOutListList() {
      return routeInOutList_;
    }
    public java.util.List<? extends LCRouteInOutData.RouteInOutDataOrBuilder>
        getRouteInOutListOrBuilderList() {
      return routeInOutList_;
    }
    public int getRouteInOutListCount() {
      return routeInOutList_.size();
    }
    public LCRouteInOutData.RouteInOutData getRouteInOutList(int index) {
      return routeInOutList_.get(index);
    }
    public LCRouteInOutData.RouteInOutDataOrBuilder getRouteInOutListOrBuilder(
        int index) {
      return routeInOutList_.get(index);
    }
    
    // repeated .RLineOverspeedData rlineOverSpdList = 6;
    public static final int RLINEOVERSPDLIST_FIELD_NUMBER = 6;
    private java.util.List<LCRLineOverspeedData.RLineOverspeedData> rlineOverSpdList_;
    public java.util.List<LCRLineOverspeedData.RLineOverspeedData> getRlineOverSpdListList() {
      return rlineOverSpdList_;
    }
    public java.util.List<? extends LCRLineOverspeedData.RLineOverspeedDataOrBuilder>
        getRlineOverSpdListOrBuilderList() {
      return rlineOverSpdList_;
    }
    public int getRlineOverSpdListCount() {
      return rlineOverSpdList_.size();
    }
    public LCRLineOverspeedData.RLineOverspeedData getRlineOverSpdList(int index) {
      return rlineOverSpdList_.get(index);
    }
    public LCRLineOverspeedData.RLineOverspeedDataOrBuilder getRlineOverSpdListOrBuilder(
        int index) {
      return rlineOverSpdList_.get(index);
    }
    
    // repeated .RLineOvertimeData rlineOverTList = 7;
    public static final int RLINEOVERTLIST_FIELD_NUMBER = 7;
    private java.util.List<LCRLineOvertimeData.RLineOvertimeData> rlineOverTList_;
    public java.util.List<LCRLineOvertimeData.RLineOvertimeData> getRlineOverTListList() {
      return rlineOverTList_;
    }
    public java.util.List<? extends LCRLineOvertimeData.RLineOvertimeDataOrBuilder>
        getRlineOverTListOrBuilderList() {
      return rlineOverTList_;
    }
    public int getRlineOverTListCount() {
      return rlineOverTList_.size();
    }
    public LCRLineOvertimeData.RLineOvertimeData getRlineOverTList(int index) {
      return rlineOverTList_.get(index);
    }
    public LCRLineOvertimeData.RLineOvertimeDataOrBuilder getRlineOverTListOrBuilder(
        int index) {
      return rlineOverTList_.get(index);
    }
    
    // repeated .OvertimeParkingData overtimePList = 8;
    public static final int OVERTIMEPLIST_FIELD_NUMBER = 8;
    private java.util.List<LCOvertimeParkingData.OvertimeParkingData> overtimePList_;
    public java.util.List<LCOvertimeParkingData.OvertimeParkingData> getOvertimePListList() {
      return overtimePList_;
    }
    public java.util.List<? extends LCOvertimeParkingData.OvertimeParkingDataOrBuilder>
        getOvertimePListOrBuilderList() {
      return overtimePList_;
    }
    public int getOvertimePListCount() {
      return overtimePList_.size();
    }
    public LCOvertimeParkingData.OvertimeParkingData getOvertimePList(int index) {
      return overtimePList_.get(index);
    }
    public LCOvertimeParkingData.OvertimeParkingDataOrBuilder getOvertimePListOrBuilder(
        int index) {
      return overtimePList_.get(index);
    }
    
    // repeated .FatigueData fatigueList = 9;
    public static final int FATIGUELIST_FIELD_NUMBER = 9;
    private java.util.List<LCFatigueData.FatigueData> fatigueList_;
    public java.util.List<LCFatigueData.FatigueData> getFatigueListList() {
      return fatigueList_;
    }
    public java.util.List<? extends LCFatigueData.FatigueDataOrBuilder>
        getFatigueListOrBuilderList() {
      return fatigueList_;
    }
    public int getFatigueListCount() {
      return fatigueList_.size();
    }
    public LCFatigueData.FatigueData getFatigueList(int index) {
      return fatigueList_.get(index);
    }
    public LCFatigueData.FatigueDataOrBuilder getFatigueListOrBuilder(
        int index) {
      return fatigueList_.get(index);
    }
    
    // repeated .EmergencyData emergencyList = 10;
    public static final int EMERGENCYLIST_FIELD_NUMBER = 10;
    private java.util.List<LCEmergencyData.EmergencyData> emergencyList_;
    public java.util.List<LCEmergencyData.EmergencyData> getEmergencyListList() {
      return emergencyList_;
    }
    public java.util.List<? extends LCEmergencyData.EmergencyDataOrBuilder>
        getEmergencyListOrBuilderList() {
      return emergencyList_;
    }
    public int getEmergencyListCount() {
      return emergencyList_.size();
    }
    public LCEmergencyData.EmergencyData getEmergencyList(int index) {
      return emergencyList_.get(index);
    }
    public LCEmergencyData.EmergencyDataOrBuilder getEmergencyListOrBuilder(
        int index) {
      return emergencyList_.get(index);
    }
    
    // repeated .PowerStayInLowerData powerSILList = 11;
    public static final int POWERSILLIST_FIELD_NUMBER = 11;
    private java.util.List<LCPowerStayInLowerData.PowerStayInLowerData> powerSILList_;
    public java.util.List<LCPowerStayInLowerData.PowerStayInLowerData> getPowerSILListList() {
      return powerSILList_;
    }
    public java.util.List<? extends LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder>
        getPowerSILListOrBuilderList() {
      return powerSILList_;
    }
    public int getPowerSILListCount() {
      return powerSILList_.size();
    }
    public LCPowerStayInLowerData.PowerStayInLowerData getPowerSILList(int index) {
      return powerSILList_.get(index);
    }
    public LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder getPowerSILListOrBuilder(
        int index) {
      return powerSILList_.get(index);
    }
    
    // repeated .ElectricPowerOffData electricPOList = 12;
    public static final int ELECTRICPOLIST_FIELD_NUMBER = 12;
    private java.util.List<LCElectricPowerOffData.ElectricPowerOffData> electricPOList_;
    public java.util.List<LCElectricPowerOffData.ElectricPowerOffData> getElectricPOListList() {
      return electricPOList_;
    }
    public java.util.List<? extends LCElectricPowerOffData.ElectricPowerOffDataOrBuilder>
        getElectricPOListOrBuilderList() {
      return electricPOList_;
    }
    public int getElectricPOListCount() {
      return electricPOList_.size();
    }
    public LCElectricPowerOffData.ElectricPowerOffData getElectricPOList(int index) {
      return electricPOList_.get(index);
    }
    public LCElectricPowerOffData.ElectricPowerOffDataOrBuilder getElectricPOListOrBuilder(
        int index) {
      return electricPOList_.get(index);
    }
    
    // repeated .ACCStatusData accList = 13;
    public static final int ACCLIST_FIELD_NUMBER = 13;
    private java.util.List<LCACCStatusData.ACCStatusData> accList_;
    public java.util.List<LCACCStatusData.ACCStatusData> getAccListList() {
      return accList_;
    }
    public java.util.List<? extends LCACCStatusData.ACCStatusDataOrBuilder>
        getAccListOrBuilderList() {
      return accList_;
    }
    public int getAccListCount() {
      return accList_.size();
    }
    public LCACCStatusData.ACCStatusData getAccList(int index) {
      return accList_.get(index);
    }
    public LCACCStatusData.ACCStatusDataOrBuilder getAccListOrBuilder(
        int index) {
      return accList_.get(index);
    }
    
    // repeated .MileagesData mileageList = 14;
    public static final int MILEAGELIST_FIELD_NUMBER = 14;
    private java.util.List<LCMileagesData.MileagesData> mileageList_;
    public java.util.List<LCMileagesData.MileagesData> getMileageListList() {
      return mileageList_;
    }
    public java.util.List<? extends LCMileagesData.MileagesDataOrBuilder>
        getMileageListOrBuilderList() {
      return mileageList_;
    }
    public int getMileageListCount() {
      return mileageList_.size();
    }
    public LCMileagesData.MileagesData getMileageList(int index) {
      return mileageList_.get(index);
    }
    public LCMileagesData.MileagesDataOrBuilder getMileageListOrBuilder(
        int index) {
      return mileageList_.get(index);
    }
    
    // repeated .DriverLoginData driverLoginList = 15;
    public static final int DRIVERLOGINLIST_FIELD_NUMBER = 15;
    private java.util.List<LCDriverLoginData.DriverLoginData> driverLoginList_;
    public java.util.List<LCDriverLoginData.DriverLoginData> getDriverLoginListList() {
      return driverLoginList_;
    }
    public java.util.List<? extends LCDriverLoginData.DriverLoginDataOrBuilder>
        getDriverLoginListOrBuilderList() {
      return driverLoginList_;
    }
    public int getDriverLoginListCount() {
      return driverLoginList_.size();
    }
    public LCDriverLoginData.DriverLoginData getDriverLoginList(int index) {
      return driverLoginList_.get(index);
    }
    public LCDriverLoginData.DriverLoginDataOrBuilder getDriverLoginListOrBuilder(
        int index) {
      return driverLoginList_.get(index);
    }
    
    // repeated .TerOnOffStatusData terminalStuList = 16;
    public static final int TERMINALSTULIST_FIELD_NUMBER = 16;
    private java.util.List<LCTerOnOffStatusData.TerOnOffStatusData> terminalStuList_;
    public java.util.List<LCTerOnOffStatusData.TerOnOffStatusData> getTerminalStuListList() {
      return terminalStuList_;
    }
    public java.util.List<? extends LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder>
        getTerminalStuListOrBuilderList() {
      return terminalStuList_;
    }
    public int getTerminalStuListCount() {
      return terminalStuList_.size();
    }
    public LCTerOnOffStatusData.TerOnOffStatusData getTerminalStuList(int index) {
      return terminalStuList_.get(index);
    }
    public LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder getTerminalStuListOrBuilder(
        int index) {
      return terminalStuList_.get(index);
    }
    
    // repeated .WFlowData wflowList = 17;
    public static final int WFLOWLIST_FIELD_NUMBER = 17;
    private java.util.List<LCWFlowData.WFlowData> wflowList_;
    public java.util.List<LCWFlowData.WFlowData> getWflowListList() {
      return wflowList_;
    }
    public java.util.List<? extends LCWFlowData.WFlowDataOrBuilder>
        getWflowListOrBuilderList() {
      return wflowList_;
    }
    public int getWflowListCount() {
      return wflowList_.size();
    }
    public LCWFlowData.WFlowData getWflowList(int index) {
      return wflowList_.get(index);
    }
    public LCWFlowData.WFlowDataOrBuilder getWflowListOrBuilder(
        int index) {
      return wflowList_.get(index);
    }
    
    private void initFields() {
      terminalID_ = 0L;
      overspeedList_ = java.util.Collections.emptyList();
      areaInOutList_ = java.util.Collections.emptyList();
      areaOverSpdList_ = java.util.Collections.emptyList();
      routeInOutList_ = java.util.Collections.emptyList();
      rlineOverSpdList_ = java.util.Collections.emptyList();
      rlineOverTList_ = java.util.Collections.emptyList();
      overtimePList_ = java.util.Collections.emptyList();
      fatigueList_ = java.util.Collections.emptyList();
      emergencyList_ = java.util.Collections.emptyList();
      powerSILList_ = java.util.Collections.emptyList();
      electricPOList_ = java.util.Collections.emptyList();
      accList_ = java.util.Collections.emptyList();
      mileageList_ = java.util.Collections.emptyList();
      driverLoginList_ = java.util.Collections.emptyList();
      terminalStuList_ = java.util.Collections.emptyList();
      wflowList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTerminalID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOverspeedListCount(); i++) {
        if (!getOverspeedList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAreaInOutListCount(); i++) {
        if (!getAreaInOutList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAreaOverSpdListCount(); i++) {
        if (!getAreaOverSpdList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRouteInOutListCount(); i++) {
        if (!getRouteInOutList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRlineOverSpdListCount(); i++) {
        if (!getRlineOverSpdList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRlineOverTListCount(); i++) {
        if (!getRlineOverTList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOvertimePListCount(); i++) {
        if (!getOvertimePList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFatigueListCount(); i++) {
        if (!getFatigueList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEmergencyListCount(); i++) {
        if (!getEmergencyList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPowerSILListCount(); i++) {
        if (!getPowerSILList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getElectricPOListCount(); i++) {
        if (!getElectricPOList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAccListCount(); i++) {
        if (!getAccList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMileageListCount(); i++) {
        if (!getMileageList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTerminalStuListCount(); i++) {
        if (!getTerminalStuList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getWflowListCount(); i++) {
        if (!getWflowList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, terminalID_);
      }
      for (int i = 0; i < overspeedList_.size(); i++) {
        output.writeMessage(2, overspeedList_.get(i));
      }
      for (int i = 0; i < areaInOutList_.size(); i++) {
        output.writeMessage(3, areaInOutList_.get(i));
      }
      for (int i = 0; i < areaOverSpdList_.size(); i++) {
        output.writeMessage(4, areaOverSpdList_.get(i));
      }
      for (int i = 0; i < routeInOutList_.size(); i++) {
        output.writeMessage(5, routeInOutList_.get(i));
      }
      for (int i = 0; i < rlineOverSpdList_.size(); i++) {
        output.writeMessage(6, rlineOverSpdList_.get(i));
      }
      for (int i = 0; i < rlineOverTList_.size(); i++) {
        output.writeMessage(7, rlineOverTList_.get(i));
      }
      for (int i = 0; i < overtimePList_.size(); i++) {
        output.writeMessage(8, overtimePList_.get(i));
      }
      for (int i = 0; i < fatigueList_.size(); i++) {
        output.writeMessage(9, fatigueList_.get(i));
      }
      for (int i = 0; i < emergencyList_.size(); i++) {
        output.writeMessage(10, emergencyList_.get(i));
      }
      for (int i = 0; i < powerSILList_.size(); i++) {
        output.writeMessage(11, powerSILList_.get(i));
      }
      for (int i = 0; i < electricPOList_.size(); i++) {
        output.writeMessage(12, electricPOList_.get(i));
      }
      for (int i = 0; i < accList_.size(); i++) {
        output.writeMessage(13, accList_.get(i));
      }
      for (int i = 0; i < mileageList_.size(); i++) {
        output.writeMessage(14, mileageList_.get(i));
      }
      for (int i = 0; i < driverLoginList_.size(); i++) {
        output.writeMessage(15, driverLoginList_.get(i));
      }
      for (int i = 0; i < terminalStuList_.size(); i++) {
        output.writeMessage(16, terminalStuList_.get(i));
      }
      for (int i = 0; i < wflowList_.size(); i++) {
        output.writeMessage(17, wflowList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, terminalID_);
      }
      for (int i = 0; i < overspeedList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, overspeedList_.get(i));
      }
      for (int i = 0; i < areaInOutList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, areaInOutList_.get(i));
      }
      for (int i = 0; i < areaOverSpdList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, areaOverSpdList_.get(i));
      }
      for (int i = 0; i < routeInOutList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, routeInOutList_.get(i));
      }
      for (int i = 0; i < rlineOverSpdList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, rlineOverSpdList_.get(i));
      }
      for (int i = 0; i < rlineOverTList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, rlineOverTList_.get(i));
      }
      for (int i = 0; i < overtimePList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, overtimePList_.get(i));
      }
      for (int i = 0; i < fatigueList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, fatigueList_.get(i));
      }
      for (int i = 0; i < emergencyList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, emergencyList_.get(i));
      }
      for (int i = 0; i < powerSILList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, powerSILList_.get(i));
      }
      for (int i = 0; i < electricPOList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, electricPOList_.get(i));
      }
      for (int i = 0; i < accList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, accList_.get(i));
      }
      for (int i = 0; i < mileageList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, mileageList_.get(i));
      }
      for (int i = 0; i < driverLoginList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, driverLoginList_.get(i));
      }
      for (int i = 0; i < terminalStuList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, terminalStuList_.get(i));
      }
      for (int i = 0; i < wflowList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, wflowList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static AllAlarmData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AllAlarmData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AllAlarmData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AllAlarmData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AllAlarmData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AllAlarmData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static AllAlarmData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AllAlarmData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AllAlarmData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AllAlarmData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AllAlarmData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AllAlarmDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCAllAlarmData.internal_static_AllAlarmData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCAllAlarmData.internal_static_AllAlarmData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.webservice.statisticsdata.entity.LCAllAlarmData.AllAlarmData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOverspeedListFieldBuilder();
          getAreaInOutListFieldBuilder();
          getAreaOverSpdListFieldBuilder();
          getRouteInOutListFieldBuilder();
          getRlineOverSpdListFieldBuilder();
          getRlineOverTListFieldBuilder();
          getOvertimePListFieldBuilder();
          getFatigueListFieldBuilder();
          getEmergencyListFieldBuilder();
          getPowerSILListFieldBuilder();
          getElectricPOListFieldBuilder();
          getAccListFieldBuilder();
          getMileageListFieldBuilder();
          getDriverLoginListFieldBuilder();
          getTerminalStuListFieldBuilder();
          getWflowListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        terminalID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (overspeedListBuilder_ == null) {
          overspeedList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          overspeedListBuilder_.clear();
        }
        if (areaInOutListBuilder_ == null) {
          areaInOutList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          areaInOutListBuilder_.clear();
        }
        if (areaOverSpdListBuilder_ == null) {
          areaOverSpdList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          areaOverSpdListBuilder_.clear();
        }
        if (routeInOutListBuilder_ == null) {
          routeInOutList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          routeInOutListBuilder_.clear();
        }
        if (rlineOverSpdListBuilder_ == null) {
          rlineOverSpdList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          rlineOverSpdListBuilder_.clear();
        }
        if (rlineOverTListBuilder_ == null) {
          rlineOverTList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          rlineOverTListBuilder_.clear();
        }
        if (overtimePListBuilder_ == null) {
          overtimePList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          overtimePListBuilder_.clear();
        }
        if (fatigueListBuilder_ == null) {
          fatigueList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          fatigueListBuilder_.clear();
        }
        if (emergencyListBuilder_ == null) {
          emergencyList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          emergencyListBuilder_.clear();
        }
        if (powerSILListBuilder_ == null) {
          powerSILList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          powerSILListBuilder_.clear();
        }
        if (electricPOListBuilder_ == null) {
          electricPOList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          electricPOListBuilder_.clear();
        }
        if (accListBuilder_ == null) {
          accList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          accListBuilder_.clear();
        }
        if (mileageListBuilder_ == null) {
          mileageList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          mileageListBuilder_.clear();
        }
        if (driverLoginListBuilder_ == null) {
          driverLoginList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          driverLoginListBuilder_.clear();
        }
        if (terminalStuListBuilder_ == null) {
          terminalStuList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          terminalStuListBuilder_.clear();
        }
        if (wflowListBuilder_ == null) {
          wflowList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          wflowListBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AllAlarmData.getDescriptor();
      }
      
      public AllAlarmData getDefaultInstanceForType() {
        return AllAlarmData.getDefaultInstance();
      }
      
      public AllAlarmData build() {
        AllAlarmData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private AllAlarmData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        AllAlarmData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public AllAlarmData buildPartial() {
        AllAlarmData result = new AllAlarmData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.terminalID_ = terminalID_;
        if (overspeedListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            overspeedList_ = java.util.Collections.unmodifiableList(overspeedList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.overspeedList_ = overspeedList_;
        } else {
          result.overspeedList_ = overspeedListBuilder_.build();
        }
        if (areaInOutListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            areaInOutList_ = java.util.Collections.unmodifiableList(areaInOutList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.areaInOutList_ = areaInOutList_;
        } else {
          result.areaInOutList_ = areaInOutListBuilder_.build();
        }
        if (areaOverSpdListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            areaOverSpdList_ = java.util.Collections.unmodifiableList(areaOverSpdList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.areaOverSpdList_ = areaOverSpdList_;
        } else {
          result.areaOverSpdList_ = areaOverSpdListBuilder_.build();
        }
        if (routeInOutListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            routeInOutList_ = java.util.Collections.unmodifiableList(routeInOutList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.routeInOutList_ = routeInOutList_;
        } else {
          result.routeInOutList_ = routeInOutListBuilder_.build();
        }
        if (rlineOverSpdListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            rlineOverSpdList_ = java.util.Collections.unmodifiableList(rlineOverSpdList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.rlineOverSpdList_ = rlineOverSpdList_;
        } else {
          result.rlineOverSpdList_ = rlineOverSpdListBuilder_.build();
        }
        if (rlineOverTListBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            rlineOverTList_ = java.util.Collections.unmodifiableList(rlineOverTList_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.rlineOverTList_ = rlineOverTList_;
        } else {
          result.rlineOverTList_ = rlineOverTListBuilder_.build();
        }
        if (overtimePListBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            overtimePList_ = java.util.Collections.unmodifiableList(overtimePList_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.overtimePList_ = overtimePList_;
        } else {
          result.overtimePList_ = overtimePListBuilder_.build();
        }
        if (fatigueListBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            fatigueList_ = java.util.Collections.unmodifiableList(fatigueList_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.fatigueList_ = fatigueList_;
        } else {
          result.fatigueList_ = fatigueListBuilder_.build();
        }
        if (emergencyListBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            emergencyList_ = java.util.Collections.unmodifiableList(emergencyList_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.emergencyList_ = emergencyList_;
        } else {
          result.emergencyList_ = emergencyListBuilder_.build();
        }
        if (powerSILListBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            powerSILList_ = java.util.Collections.unmodifiableList(powerSILList_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.powerSILList_ = powerSILList_;
        } else {
          result.powerSILList_ = powerSILListBuilder_.build();
        }
        if (electricPOListBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            electricPOList_ = java.util.Collections.unmodifiableList(electricPOList_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.electricPOList_ = electricPOList_;
        } else {
          result.electricPOList_ = electricPOListBuilder_.build();
        }
        if (accListBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            accList_ = java.util.Collections.unmodifiableList(accList_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.accList_ = accList_;
        } else {
          result.accList_ = accListBuilder_.build();
        }
        if (mileageListBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            mileageList_ = java.util.Collections.unmodifiableList(mileageList_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.mileageList_ = mileageList_;
        } else {
          result.mileageList_ = mileageListBuilder_.build();
        }
        if (driverLoginListBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            driverLoginList_ = java.util.Collections.unmodifiableList(driverLoginList_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.driverLoginList_ = driverLoginList_;
        } else {
          result.driverLoginList_ = driverLoginListBuilder_.build();
        }
        if (terminalStuListBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            terminalStuList_ = java.util.Collections.unmodifiableList(terminalStuList_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.terminalStuList_ = terminalStuList_;
        } else {
          result.terminalStuList_ = terminalStuListBuilder_.build();
        }
        if (wflowListBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            wflowList_ = java.util.Collections.unmodifiableList(wflowList_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.wflowList_ = wflowList_;
        } else {
          result.wflowList_ = wflowListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AllAlarmData) {
          return mergeFrom((AllAlarmData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(AllAlarmData other) {
        if (other == AllAlarmData.getDefaultInstance()) return this;
        if (other.hasTerminalID()) {
          setTerminalID(other.getTerminalID());
        }
        if (overspeedListBuilder_ == null) {
          if (!other.overspeedList_.isEmpty()) {
            if (overspeedList_.isEmpty()) {
              overspeedList_ = other.overspeedList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOverspeedListIsMutable();
              overspeedList_.addAll(other.overspeedList_);
            }
            onChanged();
          }
        } else {
          if (!other.overspeedList_.isEmpty()) {
            if (overspeedListBuilder_.isEmpty()) {
              overspeedListBuilder_.dispose();
              overspeedListBuilder_ = null;
              overspeedList_ = other.overspeedList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              overspeedListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOverspeedListFieldBuilder() : null;
            } else {
              overspeedListBuilder_.addAllMessages(other.overspeedList_);
            }
          }
        }
        if (areaInOutListBuilder_ == null) {
          if (!other.areaInOutList_.isEmpty()) {
            if (areaInOutList_.isEmpty()) {
              areaInOutList_ = other.areaInOutList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAreaInOutListIsMutable();
              areaInOutList_.addAll(other.areaInOutList_);
            }
            onChanged();
          }
        } else {
          if (!other.areaInOutList_.isEmpty()) {
            if (areaInOutListBuilder_.isEmpty()) {
              areaInOutListBuilder_.dispose();
              areaInOutListBuilder_ = null;
              areaInOutList_ = other.areaInOutList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              areaInOutListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAreaInOutListFieldBuilder() : null;
            } else {
              areaInOutListBuilder_.addAllMessages(other.areaInOutList_);
            }
          }
        }
        if (areaOverSpdListBuilder_ == null) {
          if (!other.areaOverSpdList_.isEmpty()) {
            if (areaOverSpdList_.isEmpty()) {
              areaOverSpdList_ = other.areaOverSpdList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAreaOverSpdListIsMutable();
              areaOverSpdList_.addAll(other.areaOverSpdList_);
            }
            onChanged();
          }
        } else {
          if (!other.areaOverSpdList_.isEmpty()) {
            if (areaOverSpdListBuilder_.isEmpty()) {
              areaOverSpdListBuilder_.dispose();
              areaOverSpdListBuilder_ = null;
              areaOverSpdList_ = other.areaOverSpdList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              areaOverSpdListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAreaOverSpdListFieldBuilder() : null;
            } else {
              areaOverSpdListBuilder_.addAllMessages(other.areaOverSpdList_);
            }
          }
        }
        if (routeInOutListBuilder_ == null) {
          if (!other.routeInOutList_.isEmpty()) {
            if (routeInOutList_.isEmpty()) {
              routeInOutList_ = other.routeInOutList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRouteInOutListIsMutable();
              routeInOutList_.addAll(other.routeInOutList_);
            }
            onChanged();
          }
        } else {
          if (!other.routeInOutList_.isEmpty()) {
            if (routeInOutListBuilder_.isEmpty()) {
              routeInOutListBuilder_.dispose();
              routeInOutListBuilder_ = null;
              routeInOutList_ = other.routeInOutList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              routeInOutListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRouteInOutListFieldBuilder() : null;
            } else {
              routeInOutListBuilder_.addAllMessages(other.routeInOutList_);
            }
          }
        }
        if (rlineOverSpdListBuilder_ == null) {
          if (!other.rlineOverSpdList_.isEmpty()) {
            if (rlineOverSpdList_.isEmpty()) {
              rlineOverSpdList_ = other.rlineOverSpdList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureRlineOverSpdListIsMutable();
              rlineOverSpdList_.addAll(other.rlineOverSpdList_);
            }
            onChanged();
          }
        } else {
          if (!other.rlineOverSpdList_.isEmpty()) {
            if (rlineOverSpdListBuilder_.isEmpty()) {
              rlineOverSpdListBuilder_.dispose();
              rlineOverSpdListBuilder_ = null;
              rlineOverSpdList_ = other.rlineOverSpdList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              rlineOverSpdListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRlineOverSpdListFieldBuilder() : null;
            } else {
              rlineOverSpdListBuilder_.addAllMessages(other.rlineOverSpdList_);
            }
          }
        }
        if (rlineOverTListBuilder_ == null) {
          if (!other.rlineOverTList_.isEmpty()) {
            if (rlineOverTList_.isEmpty()) {
              rlineOverTList_ = other.rlineOverTList_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRlineOverTListIsMutable();
              rlineOverTList_.addAll(other.rlineOverTList_);
            }
            onChanged();
          }
        } else {
          if (!other.rlineOverTList_.isEmpty()) {
            if (rlineOverTListBuilder_.isEmpty()) {
              rlineOverTListBuilder_.dispose();
              rlineOverTListBuilder_ = null;
              rlineOverTList_ = other.rlineOverTList_;
              bitField0_ = (bitField0_ & ~0x00000040);
              rlineOverTListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRlineOverTListFieldBuilder() : null;
            } else {
              rlineOverTListBuilder_.addAllMessages(other.rlineOverTList_);
            }
          }
        }
        if (overtimePListBuilder_ == null) {
          if (!other.overtimePList_.isEmpty()) {
            if (overtimePList_.isEmpty()) {
              overtimePList_ = other.overtimePList_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureOvertimePListIsMutable();
              overtimePList_.addAll(other.overtimePList_);
            }
            onChanged();
          }
        } else {
          if (!other.overtimePList_.isEmpty()) {
            if (overtimePListBuilder_.isEmpty()) {
              overtimePListBuilder_.dispose();
              overtimePListBuilder_ = null;
              overtimePList_ = other.overtimePList_;
              bitField0_ = (bitField0_ & ~0x00000080);
              overtimePListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOvertimePListFieldBuilder() : null;
            } else {
              overtimePListBuilder_.addAllMessages(other.overtimePList_);
            }
          }
        }
        if (fatigueListBuilder_ == null) {
          if (!other.fatigueList_.isEmpty()) {
            if (fatigueList_.isEmpty()) {
              fatigueList_ = other.fatigueList_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureFatigueListIsMutable();
              fatigueList_.addAll(other.fatigueList_);
            }
            onChanged();
          }
        } else {
          if (!other.fatigueList_.isEmpty()) {
            if (fatigueListBuilder_.isEmpty()) {
              fatigueListBuilder_.dispose();
              fatigueListBuilder_ = null;
              fatigueList_ = other.fatigueList_;
              bitField0_ = (bitField0_ & ~0x00000100);
              fatigueListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFatigueListFieldBuilder() : null;
            } else {
              fatigueListBuilder_.addAllMessages(other.fatigueList_);
            }
          }
        }
        if (emergencyListBuilder_ == null) {
          if (!other.emergencyList_.isEmpty()) {
            if (emergencyList_.isEmpty()) {
              emergencyList_ = other.emergencyList_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureEmergencyListIsMutable();
              emergencyList_.addAll(other.emergencyList_);
            }
            onChanged();
          }
        } else {
          if (!other.emergencyList_.isEmpty()) {
            if (emergencyListBuilder_.isEmpty()) {
              emergencyListBuilder_.dispose();
              emergencyListBuilder_ = null;
              emergencyList_ = other.emergencyList_;
              bitField0_ = (bitField0_ & ~0x00000200);
              emergencyListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEmergencyListFieldBuilder() : null;
            } else {
              emergencyListBuilder_.addAllMessages(other.emergencyList_);
            }
          }
        }
        if (powerSILListBuilder_ == null) {
          if (!other.powerSILList_.isEmpty()) {
            if (powerSILList_.isEmpty()) {
              powerSILList_ = other.powerSILList_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensurePowerSILListIsMutable();
              powerSILList_.addAll(other.powerSILList_);
            }
            onChanged();
          }
        } else {
          if (!other.powerSILList_.isEmpty()) {
            if (powerSILListBuilder_.isEmpty()) {
              powerSILListBuilder_.dispose();
              powerSILListBuilder_ = null;
              powerSILList_ = other.powerSILList_;
              bitField0_ = (bitField0_ & ~0x00000400);
              powerSILListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPowerSILListFieldBuilder() : null;
            } else {
              powerSILListBuilder_.addAllMessages(other.powerSILList_);
            }
          }
        }
        if (electricPOListBuilder_ == null) {
          if (!other.electricPOList_.isEmpty()) {
            if (electricPOList_.isEmpty()) {
              electricPOList_ = other.electricPOList_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureElectricPOListIsMutable();
              electricPOList_.addAll(other.electricPOList_);
            }
            onChanged();
          }
        } else {
          if (!other.electricPOList_.isEmpty()) {
            if (electricPOListBuilder_.isEmpty()) {
              electricPOListBuilder_.dispose();
              electricPOListBuilder_ = null;
              electricPOList_ = other.electricPOList_;
              bitField0_ = (bitField0_ & ~0x00000800);
              electricPOListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getElectricPOListFieldBuilder() : null;
            } else {
              electricPOListBuilder_.addAllMessages(other.electricPOList_);
            }
          }
        }
        if (accListBuilder_ == null) {
          if (!other.accList_.isEmpty()) {
            if (accList_.isEmpty()) {
              accList_ = other.accList_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureAccListIsMutable();
              accList_.addAll(other.accList_);
            }
            onChanged();
          }
        } else {
          if (!other.accList_.isEmpty()) {
            if (accListBuilder_.isEmpty()) {
              accListBuilder_.dispose();
              accListBuilder_ = null;
              accList_ = other.accList_;
              bitField0_ = (bitField0_ & ~0x00001000);
              accListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccListFieldBuilder() : null;
            } else {
              accListBuilder_.addAllMessages(other.accList_);
            }
          }
        }
        if (mileageListBuilder_ == null) {
          if (!other.mileageList_.isEmpty()) {
            if (mileageList_.isEmpty()) {
              mileageList_ = other.mileageList_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureMileageListIsMutable();
              mileageList_.addAll(other.mileageList_);
            }
            onChanged();
          }
        } else {
          if (!other.mileageList_.isEmpty()) {
            if (mileageListBuilder_.isEmpty()) {
              mileageListBuilder_.dispose();
              mileageListBuilder_ = null;
              mileageList_ = other.mileageList_;
              bitField0_ = (bitField0_ & ~0x00002000);
              mileageListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMileageListFieldBuilder() : null;
            } else {
              mileageListBuilder_.addAllMessages(other.mileageList_);
            }
          }
        }
        if (driverLoginListBuilder_ == null) {
          if (!other.driverLoginList_.isEmpty()) {
            if (driverLoginList_.isEmpty()) {
              driverLoginList_ = other.driverLoginList_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureDriverLoginListIsMutable();
              driverLoginList_.addAll(other.driverLoginList_);
            }
            onChanged();
          }
        } else {
          if (!other.driverLoginList_.isEmpty()) {
            if (driverLoginListBuilder_.isEmpty()) {
              driverLoginListBuilder_.dispose();
              driverLoginListBuilder_ = null;
              driverLoginList_ = other.driverLoginList_;
              bitField0_ = (bitField0_ & ~0x00004000);
              driverLoginListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDriverLoginListFieldBuilder() : null;
            } else {
              driverLoginListBuilder_.addAllMessages(other.driverLoginList_);
            }
          }
        }
        if (terminalStuListBuilder_ == null) {
          if (!other.terminalStuList_.isEmpty()) {
            if (terminalStuList_.isEmpty()) {
              terminalStuList_ = other.terminalStuList_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureTerminalStuListIsMutable();
              terminalStuList_.addAll(other.terminalStuList_);
            }
            onChanged();
          }
        } else {
          if (!other.terminalStuList_.isEmpty()) {
            if (terminalStuListBuilder_.isEmpty()) {
              terminalStuListBuilder_.dispose();
              terminalStuListBuilder_ = null;
              terminalStuList_ = other.terminalStuList_;
              bitField0_ = (bitField0_ & ~0x00008000);
              terminalStuListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTerminalStuListFieldBuilder() : null;
            } else {
              terminalStuListBuilder_.addAllMessages(other.terminalStuList_);
            }
          }
        }
        if (wflowListBuilder_ == null) {
          if (!other.wflowList_.isEmpty()) {
            if (wflowList_.isEmpty()) {
              wflowList_ = other.wflowList_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureWflowListIsMutable();
              wflowList_.addAll(other.wflowList_);
            }
            onChanged();
          }
        } else {
          if (!other.wflowList_.isEmpty()) {
            if (wflowListBuilder_.isEmpty()) {
              wflowListBuilder_.dispose();
              wflowListBuilder_ = null;
              wflowList_ = other.wflowList_;
              bitField0_ = (bitField0_ & ~0x00010000);
              wflowListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWflowListFieldBuilder() : null;
            } else {
              wflowListBuilder_.addAllMessages(other.wflowList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTerminalID()) {
          
          return false;
        }
        for (int i = 0; i < getOverspeedListCount(); i++) {
          if (!getOverspeedList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAreaInOutListCount(); i++) {
          if (!getAreaInOutList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAreaOverSpdListCount(); i++) {
          if (!getAreaOverSpdList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRouteInOutListCount(); i++) {
          if (!getRouteInOutList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRlineOverSpdListCount(); i++) {
          if (!getRlineOverSpdList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRlineOverTListCount(); i++) {
          if (!getRlineOverTList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOvertimePListCount(); i++) {
          if (!getOvertimePList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getFatigueListCount(); i++) {
          if (!getFatigueList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEmergencyListCount(); i++) {
          if (!getEmergencyList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPowerSILListCount(); i++) {
          if (!getPowerSILList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getElectricPOListCount(); i++) {
          if (!getElectricPOList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAccListCount(); i++) {
          if (!getAccList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMileageListCount(); i++) {
          if (!getMileageList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTerminalStuListCount(); i++) {
          if (!getTerminalStuList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getWflowListCount(); i++) {
          if (!getWflowList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              terminalID_ = input.readInt64();
              break;
            }
            case 18: {
              LCOverspeedData.OverspeedData.Builder subBuilder = LCOverspeedData.OverspeedData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOverspeedList(subBuilder.buildPartial());
              break;
            }
            case 26: {
              LCAreaInOutData.AreaInOutData.Builder subBuilder = LCAreaInOutData.AreaInOutData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAreaInOutList(subBuilder.buildPartial());
              break;
            }
            case 34: {
              LCAreaOverspeedData.AreaOverspeedData.Builder subBuilder = LCAreaOverspeedData.AreaOverspeedData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAreaOverSpdList(subBuilder.buildPartial());
              break;
            }
            case 42: {
              LCRouteInOutData.RouteInOutData.Builder subBuilder = LCRouteInOutData.RouteInOutData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRouteInOutList(subBuilder.buildPartial());
              break;
            }
            case 50: {
              LCRLineOverspeedData.RLineOverspeedData.Builder subBuilder = LCRLineOverspeedData.RLineOverspeedData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRlineOverSpdList(subBuilder.buildPartial());
              break;
            }
            case 58: {
              LCRLineOvertimeData.RLineOvertimeData.Builder subBuilder = LCRLineOvertimeData.RLineOvertimeData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRlineOverTList(subBuilder.buildPartial());
              break;
            }
            case 66: {
              LCOvertimeParkingData.OvertimeParkingData.Builder subBuilder = LCOvertimeParkingData.OvertimeParkingData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOvertimePList(subBuilder.buildPartial());
              break;
            }
            case 74: {
              LCFatigueData.FatigueData.Builder subBuilder = LCFatigueData.FatigueData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFatigueList(subBuilder.buildPartial());
              break;
            }
            case 82: {
              LCEmergencyData.EmergencyData.Builder subBuilder = LCEmergencyData.EmergencyData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEmergencyList(subBuilder.buildPartial());
              break;
            }
            case 90: {
              LCPowerStayInLowerData.PowerStayInLowerData.Builder subBuilder = LCPowerStayInLowerData.PowerStayInLowerData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPowerSILList(subBuilder.buildPartial());
              break;
            }
            case 98: {
              LCElectricPowerOffData.ElectricPowerOffData.Builder subBuilder = LCElectricPowerOffData.ElectricPowerOffData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addElectricPOList(subBuilder.buildPartial());
              break;
            }
            case 106: {
              LCACCStatusData.ACCStatusData.Builder subBuilder = LCACCStatusData.ACCStatusData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAccList(subBuilder.buildPartial());
              break;
            }
            case 114: {
              LCMileagesData.MileagesData.Builder subBuilder = LCMileagesData.MileagesData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMileageList(subBuilder.buildPartial());
              break;
            }
            case 122: {
              LCDriverLoginData.DriverLoginData.Builder subBuilder = LCDriverLoginData.DriverLoginData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDriverLoginList(subBuilder.buildPartial());
              break;
            }
            case 130: {
              LCTerOnOffStatusData.TerOnOffStatusData.Builder subBuilder = LCTerOnOffStatusData.TerOnOffStatusData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTerminalStuList(subBuilder.buildPartial());
              break;
            }
            case 138: {
              LCWFlowData.WFlowData.Builder subBuilder = LCWFlowData.WFlowData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWflowList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 terminalID = 1;
      private long terminalID_ ;
      public boolean hasTerminalID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTerminalID() {
        return terminalID_;
      }
      public Builder setTerminalID(long value) {
        bitField0_ |= 0x00000001;
        terminalID_ = value;
        onChanged();
        return this;
      }
      public Builder clearTerminalID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        terminalID_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .OverspeedData overspeedList = 2;
      private java.util.List<LCOverspeedData.OverspeedData> overspeedList_ =
        java.util.Collections.emptyList();
      private void ensureOverspeedListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          overspeedList_ = new java.util.ArrayList<LCOverspeedData.OverspeedData>(overspeedList_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCOverspeedData.OverspeedData, LCOverspeedData.OverspeedData.Builder, LCOverspeedData.OverspeedDataOrBuilder> overspeedListBuilder_;
      
      public java.util.List<LCOverspeedData.OverspeedData> getOverspeedListList() {
        if (overspeedListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(overspeedList_);
        } else {
          return overspeedListBuilder_.getMessageList();
        }
      }
      public int getOverspeedListCount() {
        if (overspeedListBuilder_ == null) {
          return overspeedList_.size();
        } else {
          return overspeedListBuilder_.getCount();
        }
      }
      public LCOverspeedData.OverspeedData getOverspeedList(int index) {
        if (overspeedListBuilder_ == null) {
          return overspeedList_.get(index);
        } else {
          return overspeedListBuilder_.getMessage(index);
        }
      }
      public Builder setOverspeedList(
          int index, LCOverspeedData.OverspeedData value) {
        if (overspeedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverspeedListIsMutable();
          overspeedList_.set(index, value);
          onChanged();
        } else {
          overspeedListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setOverspeedList(
          int index, LCOverspeedData.OverspeedData.Builder builderForValue) {
        if (overspeedListBuilder_ == null) {
          ensureOverspeedListIsMutable();
          overspeedList_.set(index, builderForValue.build());
          onChanged();
        } else {
          overspeedListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addOverspeedList(LCOverspeedData.OverspeedData value) {
        if (overspeedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverspeedListIsMutable();
          overspeedList_.add(value);
          onChanged();
        } else {
          overspeedListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addOverspeedList(
          int index, LCOverspeedData.OverspeedData value) {
        if (overspeedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOverspeedListIsMutable();
          overspeedList_.add(index, value);
          onChanged();
        } else {
          overspeedListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addOverspeedList(
          LCOverspeedData.OverspeedData.Builder builderForValue) {
        if (overspeedListBuilder_ == null) {
          ensureOverspeedListIsMutable();
          overspeedList_.add(builderForValue.build());
          onChanged();
        } else {
          overspeedListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addOverspeedList(
          int index, LCOverspeedData.OverspeedData.Builder builderForValue) {
        if (overspeedListBuilder_ == null) {
          ensureOverspeedListIsMutable();
          overspeedList_.add(index, builderForValue.build());
          onChanged();
        } else {
          overspeedListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllOverspeedList(
          Iterable<? extends LCOverspeedData.OverspeedData> values) {
        if (overspeedListBuilder_ == null) {
          ensureOverspeedListIsMutable();
          super.addAll(values, overspeedList_);
          onChanged();
        } else {
          overspeedListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearOverspeedList() {
        if (overspeedListBuilder_ == null) {
          overspeedList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          overspeedListBuilder_.clear();
        }
        return this;
      }
      public Builder removeOverspeedList(int index) {
        if (overspeedListBuilder_ == null) {
          ensureOverspeedListIsMutable();
          overspeedList_.remove(index);
          onChanged();
        } else {
          overspeedListBuilder_.remove(index);
        }
        return this;
      }
      public LCOverspeedData.OverspeedData.Builder getOverspeedListBuilder(
          int index) {
        return getOverspeedListFieldBuilder().getBuilder(index);
      }
      public LCOverspeedData.OverspeedDataOrBuilder getOverspeedListOrBuilder(
          int index) {
        if (overspeedListBuilder_ == null) {
          return overspeedList_.get(index);  } else {
          return overspeedListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCOverspeedData.OverspeedDataOrBuilder>
           getOverspeedListOrBuilderList() {
        if (overspeedListBuilder_ != null) {
          return overspeedListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(overspeedList_);
        }
      }
      public LCOverspeedData.OverspeedData.Builder addOverspeedListBuilder() {
        return getOverspeedListFieldBuilder().addBuilder(
            LCOverspeedData.OverspeedData.getDefaultInstance());
      }
      public LCOverspeedData.OverspeedData.Builder addOverspeedListBuilder(
          int index) {
        return getOverspeedListFieldBuilder().addBuilder(
            index, LCOverspeedData.OverspeedData.getDefaultInstance());
      }
      public java.util.List<LCOverspeedData.OverspeedData.Builder>
           getOverspeedListBuilderList() {
        return getOverspeedListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCOverspeedData.OverspeedData, LCOverspeedData.OverspeedData.Builder, LCOverspeedData.OverspeedDataOrBuilder>
          getOverspeedListFieldBuilder() {
        if (overspeedListBuilder_ == null) {
          overspeedListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCOverspeedData.OverspeedData, LCOverspeedData.OverspeedData.Builder, LCOverspeedData.OverspeedDataOrBuilder>(
                  overspeedList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          overspeedList_ = null;
        }
        return overspeedListBuilder_;
      }
      
      // repeated .AreaInOutData areaInOutList = 3;
      private java.util.List<LCAreaInOutData.AreaInOutData> areaInOutList_ =
        java.util.Collections.emptyList();
      private void ensureAreaInOutListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          areaInOutList_ = new java.util.ArrayList<LCAreaInOutData.AreaInOutData>(areaInOutList_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCAreaInOutData.AreaInOutData, LCAreaInOutData.AreaInOutData.Builder, LCAreaInOutData.AreaInOutDataOrBuilder> areaInOutListBuilder_;
      
      public java.util.List<LCAreaInOutData.AreaInOutData> getAreaInOutListList() {
        if (areaInOutListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(areaInOutList_);
        } else {
          return areaInOutListBuilder_.getMessageList();
        }
      }
      public int getAreaInOutListCount() {
        if (areaInOutListBuilder_ == null) {
          return areaInOutList_.size();
        } else {
          return areaInOutListBuilder_.getCount();
        }
      }
      public LCAreaInOutData.AreaInOutData getAreaInOutList(int index) {
        if (areaInOutListBuilder_ == null) {
          return areaInOutList_.get(index);
        } else {
          return areaInOutListBuilder_.getMessage(index);
        }
      }
      public Builder setAreaInOutList(
          int index, LCAreaInOutData.AreaInOutData value) {
        if (areaInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaInOutListIsMutable();
          areaInOutList_.set(index, value);
          onChanged();
        } else {
          areaInOutListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAreaInOutList(
          int index, LCAreaInOutData.AreaInOutData.Builder builderForValue) {
        if (areaInOutListBuilder_ == null) {
          ensureAreaInOutListIsMutable();
          areaInOutList_.set(index, builderForValue.build());
          onChanged();
        } else {
          areaInOutListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAreaInOutList(LCAreaInOutData.AreaInOutData value) {
        if (areaInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaInOutListIsMutable();
          areaInOutList_.add(value);
          onChanged();
        } else {
          areaInOutListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAreaInOutList(
          int index, LCAreaInOutData.AreaInOutData value) {
        if (areaInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaInOutListIsMutable();
          areaInOutList_.add(index, value);
          onChanged();
        } else {
          areaInOutListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAreaInOutList(
          LCAreaInOutData.AreaInOutData.Builder builderForValue) {
        if (areaInOutListBuilder_ == null) {
          ensureAreaInOutListIsMutable();
          areaInOutList_.add(builderForValue.build());
          onChanged();
        } else {
          areaInOutListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAreaInOutList(
          int index, LCAreaInOutData.AreaInOutData.Builder builderForValue) {
        if (areaInOutListBuilder_ == null) {
          ensureAreaInOutListIsMutable();
          areaInOutList_.add(index, builderForValue.build());
          onChanged();
        } else {
          areaInOutListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAreaInOutList(
          Iterable<? extends LCAreaInOutData.AreaInOutData> values) {
        if (areaInOutListBuilder_ == null) {
          ensureAreaInOutListIsMutable();
          super.addAll(values, areaInOutList_);
          onChanged();
        } else {
          areaInOutListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAreaInOutList() {
        if (areaInOutListBuilder_ == null) {
          areaInOutList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          areaInOutListBuilder_.clear();
        }
        return this;
      }
      public Builder removeAreaInOutList(int index) {
        if (areaInOutListBuilder_ == null) {
          ensureAreaInOutListIsMutable();
          areaInOutList_.remove(index);
          onChanged();
        } else {
          areaInOutListBuilder_.remove(index);
        }
        return this;
      }
      public LCAreaInOutData.AreaInOutData.Builder getAreaInOutListBuilder(
          int index) {
        return getAreaInOutListFieldBuilder().getBuilder(index);
      }
      public LCAreaInOutData.AreaInOutDataOrBuilder getAreaInOutListOrBuilder(
          int index) {
        if (areaInOutListBuilder_ == null) {
          return areaInOutList_.get(index);  } else {
          return areaInOutListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCAreaInOutData.AreaInOutDataOrBuilder>
           getAreaInOutListOrBuilderList() {
        if (areaInOutListBuilder_ != null) {
          return areaInOutListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(areaInOutList_);
        }
      }
      public LCAreaInOutData.AreaInOutData.Builder addAreaInOutListBuilder() {
        return getAreaInOutListFieldBuilder().addBuilder(
            LCAreaInOutData.AreaInOutData.getDefaultInstance());
      }
      public LCAreaInOutData.AreaInOutData.Builder addAreaInOutListBuilder(
          int index) {
        return getAreaInOutListFieldBuilder().addBuilder(
            index, LCAreaInOutData.AreaInOutData.getDefaultInstance());
      }
      public java.util.List<LCAreaInOutData.AreaInOutData.Builder>
           getAreaInOutListBuilderList() {
        return getAreaInOutListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCAreaInOutData.AreaInOutData, LCAreaInOutData.AreaInOutData.Builder, LCAreaInOutData.AreaInOutDataOrBuilder>
          getAreaInOutListFieldBuilder() {
        if (areaInOutListBuilder_ == null) {
          areaInOutListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCAreaInOutData.AreaInOutData, LCAreaInOutData.AreaInOutData.Builder, LCAreaInOutData.AreaInOutDataOrBuilder>(
                  areaInOutList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          areaInOutList_ = null;
        }
        return areaInOutListBuilder_;
      }
      
      // repeated .AreaOverspeedData areaOverSpdList = 4;
      private java.util.List<LCAreaOverspeedData.AreaOverspeedData> areaOverSpdList_ =
        java.util.Collections.emptyList();
      private void ensureAreaOverSpdListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          areaOverSpdList_ = new java.util.ArrayList<LCAreaOverspeedData.AreaOverspeedData>(areaOverSpdList_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCAreaOverspeedData.AreaOverspeedData, LCAreaOverspeedData.AreaOverspeedData.Builder, LCAreaOverspeedData.AreaOverspeedDataOrBuilder> areaOverSpdListBuilder_;
      
      public java.util.List<LCAreaOverspeedData.AreaOverspeedData> getAreaOverSpdListList() {
        if (areaOverSpdListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(areaOverSpdList_);
        } else {
          return areaOverSpdListBuilder_.getMessageList();
        }
      }
      public int getAreaOverSpdListCount() {
        if (areaOverSpdListBuilder_ == null) {
          return areaOverSpdList_.size();
        } else {
          return areaOverSpdListBuilder_.getCount();
        }
      }
      public LCAreaOverspeedData.AreaOverspeedData getAreaOverSpdList(int index) {
        if (areaOverSpdListBuilder_ == null) {
          return areaOverSpdList_.get(index);
        } else {
          return areaOverSpdListBuilder_.getMessage(index);
        }
      }
      public Builder setAreaOverSpdList(
          int index, LCAreaOverspeedData.AreaOverspeedData value) {
        if (areaOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.set(index, value);
          onChanged();
        } else {
          areaOverSpdListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAreaOverSpdList(
          int index, LCAreaOverspeedData.AreaOverspeedData.Builder builderForValue) {
        if (areaOverSpdListBuilder_ == null) {
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.set(index, builderForValue.build());
          onChanged();
        } else {
          areaOverSpdListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAreaOverSpdList(LCAreaOverspeedData.AreaOverspeedData value) {
        if (areaOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.add(value);
          onChanged();
        } else {
          areaOverSpdListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAreaOverSpdList(
          int index, LCAreaOverspeedData.AreaOverspeedData value) {
        if (areaOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.add(index, value);
          onChanged();
        } else {
          areaOverSpdListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAreaOverSpdList(
          LCAreaOverspeedData.AreaOverspeedData.Builder builderForValue) {
        if (areaOverSpdListBuilder_ == null) {
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.add(builderForValue.build());
          onChanged();
        } else {
          areaOverSpdListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAreaOverSpdList(
          int index, LCAreaOverspeedData.AreaOverspeedData.Builder builderForValue) {
        if (areaOverSpdListBuilder_ == null) {
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.add(index, builderForValue.build());
          onChanged();
        } else {
          areaOverSpdListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAreaOverSpdList(
          Iterable<? extends LCAreaOverspeedData.AreaOverspeedData> values) {
        if (areaOverSpdListBuilder_ == null) {
          ensureAreaOverSpdListIsMutable();
          super.addAll(values, areaOverSpdList_);
          onChanged();
        } else {
          areaOverSpdListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAreaOverSpdList() {
        if (areaOverSpdListBuilder_ == null) {
          areaOverSpdList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          areaOverSpdListBuilder_.clear();
        }
        return this;
      }
      public Builder removeAreaOverSpdList(int index) {
        if (areaOverSpdListBuilder_ == null) {
          ensureAreaOverSpdListIsMutable();
          areaOverSpdList_.remove(index);
          onChanged();
        } else {
          areaOverSpdListBuilder_.remove(index);
        }
        return this;
      }
      public LCAreaOverspeedData.AreaOverspeedData.Builder getAreaOverSpdListBuilder(
          int index) {
        return getAreaOverSpdListFieldBuilder().getBuilder(index);
      }
      public LCAreaOverspeedData.AreaOverspeedDataOrBuilder getAreaOverSpdListOrBuilder(
          int index) {
        if (areaOverSpdListBuilder_ == null) {
          return areaOverSpdList_.get(index);  } else {
          return areaOverSpdListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCAreaOverspeedData.AreaOverspeedDataOrBuilder>
           getAreaOverSpdListOrBuilderList() {
        if (areaOverSpdListBuilder_ != null) {
          return areaOverSpdListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(areaOverSpdList_);
        }
      }
      public LCAreaOverspeedData.AreaOverspeedData.Builder addAreaOverSpdListBuilder() {
        return getAreaOverSpdListFieldBuilder().addBuilder(
            LCAreaOverspeedData.AreaOverspeedData.getDefaultInstance());
      }
      public LCAreaOverspeedData.AreaOverspeedData.Builder addAreaOverSpdListBuilder(
          int index) {
        return getAreaOverSpdListFieldBuilder().addBuilder(
            index, LCAreaOverspeedData.AreaOverspeedData.getDefaultInstance());
      }
      public java.util.List<LCAreaOverspeedData.AreaOverspeedData.Builder>
           getAreaOverSpdListBuilderList() {
        return getAreaOverSpdListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCAreaOverspeedData.AreaOverspeedData, LCAreaOverspeedData.AreaOverspeedData.Builder, LCAreaOverspeedData.AreaOverspeedDataOrBuilder>
          getAreaOverSpdListFieldBuilder() {
        if (areaOverSpdListBuilder_ == null) {
          areaOverSpdListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCAreaOverspeedData.AreaOverspeedData, LCAreaOverspeedData.AreaOverspeedData.Builder, LCAreaOverspeedData.AreaOverspeedDataOrBuilder>(
                  areaOverSpdList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          areaOverSpdList_ = null;
        }
        return areaOverSpdListBuilder_;
      }
      
      // repeated .RouteInOutData routeInOutList = 5;
      private java.util.List<LCRouteInOutData.RouteInOutData> routeInOutList_ =
        java.util.Collections.emptyList();
      private void ensureRouteInOutListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          routeInOutList_ = new java.util.ArrayList<LCRouteInOutData.RouteInOutData>(routeInOutList_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRouteInOutData.RouteInOutData, LCRouteInOutData.RouteInOutData.Builder, LCRouteInOutData.RouteInOutDataOrBuilder> routeInOutListBuilder_;
      
      public java.util.List<LCRouteInOutData.RouteInOutData> getRouteInOutListList() {
        if (routeInOutListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routeInOutList_);
        } else {
          return routeInOutListBuilder_.getMessageList();
        }
      }
      public int getRouteInOutListCount() {
        if (routeInOutListBuilder_ == null) {
          return routeInOutList_.size();
        } else {
          return routeInOutListBuilder_.getCount();
        }
      }
      public LCRouteInOutData.RouteInOutData getRouteInOutList(int index) {
        if (routeInOutListBuilder_ == null) {
          return routeInOutList_.get(index);
        } else {
          return routeInOutListBuilder_.getMessage(index);
        }
      }
      public Builder setRouteInOutList(
          int index, LCRouteInOutData.RouteInOutData value) {
        if (routeInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteInOutListIsMutable();
          routeInOutList_.set(index, value);
          onChanged();
        } else {
          routeInOutListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRouteInOutList(
          int index, LCRouteInOutData.RouteInOutData.Builder builderForValue) {
        if (routeInOutListBuilder_ == null) {
          ensureRouteInOutListIsMutable();
          routeInOutList_.set(index, builderForValue.build());
          onChanged();
        } else {
          routeInOutListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRouteInOutList(LCRouteInOutData.RouteInOutData value) {
        if (routeInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteInOutListIsMutable();
          routeInOutList_.add(value);
          onChanged();
        } else {
          routeInOutListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRouteInOutList(
          int index, LCRouteInOutData.RouteInOutData value) {
        if (routeInOutListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRouteInOutListIsMutable();
          routeInOutList_.add(index, value);
          onChanged();
        } else {
          routeInOutListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRouteInOutList(
          LCRouteInOutData.RouteInOutData.Builder builderForValue) {
        if (routeInOutListBuilder_ == null) {
          ensureRouteInOutListIsMutable();
          routeInOutList_.add(builderForValue.build());
          onChanged();
        } else {
          routeInOutListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRouteInOutList(
          int index, LCRouteInOutData.RouteInOutData.Builder builderForValue) {
        if (routeInOutListBuilder_ == null) {
          ensureRouteInOutListIsMutable();
          routeInOutList_.add(index, builderForValue.build());
          onChanged();
        } else {
          routeInOutListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRouteInOutList(
          Iterable<? extends LCRouteInOutData.RouteInOutData> values) {
        if (routeInOutListBuilder_ == null) {
          ensureRouteInOutListIsMutable();
          super.addAll(values, routeInOutList_);
          onChanged();
        } else {
          routeInOutListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRouteInOutList() {
        if (routeInOutListBuilder_ == null) {
          routeInOutList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          routeInOutListBuilder_.clear();
        }
        return this;
      }
      public Builder removeRouteInOutList(int index) {
        if (routeInOutListBuilder_ == null) {
          ensureRouteInOutListIsMutable();
          routeInOutList_.remove(index);
          onChanged();
        } else {
          routeInOutListBuilder_.remove(index);
        }
        return this;
      }
      public LCRouteInOutData.RouteInOutData.Builder getRouteInOutListBuilder(
          int index) {
        return getRouteInOutListFieldBuilder().getBuilder(index);
      }
      public LCRouteInOutData.RouteInOutDataOrBuilder getRouteInOutListOrBuilder(
          int index) {
        if (routeInOutListBuilder_ == null) {
          return routeInOutList_.get(index);  } else {
          return routeInOutListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCRouteInOutData.RouteInOutDataOrBuilder>
           getRouteInOutListOrBuilderList() {
        if (routeInOutListBuilder_ != null) {
          return routeInOutListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routeInOutList_);
        }
      }
      public LCRouteInOutData.RouteInOutData.Builder addRouteInOutListBuilder() {
        return getRouteInOutListFieldBuilder().addBuilder(
            LCRouteInOutData.RouteInOutData.getDefaultInstance());
      }
      public LCRouteInOutData.RouteInOutData.Builder addRouteInOutListBuilder(
          int index) {
        return getRouteInOutListFieldBuilder().addBuilder(
            index, LCRouteInOutData.RouteInOutData.getDefaultInstance());
      }
      public java.util.List<LCRouteInOutData.RouteInOutData.Builder>
           getRouteInOutListBuilderList() {
        return getRouteInOutListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRouteInOutData.RouteInOutData, LCRouteInOutData.RouteInOutData.Builder, LCRouteInOutData.RouteInOutDataOrBuilder>
          getRouteInOutListFieldBuilder() {
        if (routeInOutListBuilder_ == null) {
          routeInOutListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCRouteInOutData.RouteInOutData, LCRouteInOutData.RouteInOutData.Builder, LCRouteInOutData.RouteInOutDataOrBuilder>(
                  routeInOutList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          routeInOutList_ = null;
        }
        return routeInOutListBuilder_;
      }
      
      // repeated .RLineOverspeedData rlineOverSpdList = 6;
      private java.util.List<LCRLineOverspeedData.RLineOverspeedData> rlineOverSpdList_ =
        java.util.Collections.emptyList();
      private void ensureRlineOverSpdListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          rlineOverSpdList_ = new java.util.ArrayList<LCRLineOverspeedData.RLineOverspeedData>(rlineOverSpdList_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRLineOverspeedData.RLineOverspeedData, LCRLineOverspeedData.RLineOverspeedData.Builder, LCRLineOverspeedData.RLineOverspeedDataOrBuilder> rlineOverSpdListBuilder_;
      
      public java.util.List<LCRLineOverspeedData.RLineOverspeedData> getRlineOverSpdListList() {
        if (rlineOverSpdListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rlineOverSpdList_);
        } else {
          return rlineOverSpdListBuilder_.getMessageList();
        }
      }
      public int getRlineOverSpdListCount() {
        if (rlineOverSpdListBuilder_ == null) {
          return rlineOverSpdList_.size();
        } else {
          return rlineOverSpdListBuilder_.getCount();
        }
      }
      public LCRLineOverspeedData.RLineOverspeedData getRlineOverSpdList(int index) {
        if (rlineOverSpdListBuilder_ == null) {
          return rlineOverSpdList_.get(index);
        } else {
          return rlineOverSpdListBuilder_.getMessage(index);
        }
      }
      public Builder setRlineOverSpdList(
          int index, LCRLineOverspeedData.RLineOverspeedData value) {
        if (rlineOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.set(index, value);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRlineOverSpdList(
          int index, LCRLineOverspeedData.RLineOverspeedData.Builder builderForValue) {
        if (rlineOverSpdListBuilder_ == null) {
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.set(index, builderForValue.build());
          onChanged();
        } else {
          rlineOverSpdListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRlineOverSpdList(LCRLineOverspeedData.RLineOverspeedData value) {
        if (rlineOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.add(value);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRlineOverSpdList(
          int index, LCRLineOverspeedData.RLineOverspeedData value) {
        if (rlineOverSpdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.add(index, value);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRlineOverSpdList(
          LCRLineOverspeedData.RLineOverspeedData.Builder builderForValue) {
        if (rlineOverSpdListBuilder_ == null) {
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.add(builderForValue.build());
          onChanged();
        } else {
          rlineOverSpdListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRlineOverSpdList(
          int index, LCRLineOverspeedData.RLineOverspeedData.Builder builderForValue) {
        if (rlineOverSpdListBuilder_ == null) {
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.add(index, builderForValue.build());
          onChanged();
        } else {
          rlineOverSpdListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRlineOverSpdList(
          Iterable<? extends LCRLineOverspeedData.RLineOverspeedData> values) {
        if (rlineOverSpdListBuilder_ == null) {
          ensureRlineOverSpdListIsMutable();
          super.addAll(values, rlineOverSpdList_);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRlineOverSpdList() {
        if (rlineOverSpdListBuilder_ == null) {
          rlineOverSpdList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.clear();
        }
        return this;
      }
      public Builder removeRlineOverSpdList(int index) {
        if (rlineOverSpdListBuilder_ == null) {
          ensureRlineOverSpdListIsMutable();
          rlineOverSpdList_.remove(index);
          onChanged();
        } else {
          rlineOverSpdListBuilder_.remove(index);
        }
        return this;
      }
      public LCRLineOverspeedData.RLineOverspeedData.Builder getRlineOverSpdListBuilder(
          int index) {
        return getRlineOverSpdListFieldBuilder().getBuilder(index);
      }
      public LCRLineOverspeedData.RLineOverspeedDataOrBuilder getRlineOverSpdListOrBuilder(
          int index) {
        if (rlineOverSpdListBuilder_ == null) {
          return rlineOverSpdList_.get(index);  } else {
          return rlineOverSpdListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCRLineOverspeedData.RLineOverspeedDataOrBuilder>
           getRlineOverSpdListOrBuilderList() {
        if (rlineOverSpdListBuilder_ != null) {
          return rlineOverSpdListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rlineOverSpdList_);
        }
      }
      public LCRLineOverspeedData.RLineOverspeedData.Builder addRlineOverSpdListBuilder() {
        return getRlineOverSpdListFieldBuilder().addBuilder(
            LCRLineOverspeedData.RLineOverspeedData.getDefaultInstance());
      }
      public LCRLineOverspeedData.RLineOverspeedData.Builder addRlineOverSpdListBuilder(
          int index) {
        return getRlineOverSpdListFieldBuilder().addBuilder(
            index, LCRLineOverspeedData.RLineOverspeedData.getDefaultInstance());
      }
      public java.util.List<LCRLineOverspeedData.RLineOverspeedData.Builder>
           getRlineOverSpdListBuilderList() {
        return getRlineOverSpdListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRLineOverspeedData.RLineOverspeedData, LCRLineOverspeedData.RLineOverspeedData.Builder, LCRLineOverspeedData.RLineOverspeedDataOrBuilder>
          getRlineOverSpdListFieldBuilder() {
        if (rlineOverSpdListBuilder_ == null) {
          rlineOverSpdListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCRLineOverspeedData.RLineOverspeedData, LCRLineOverspeedData.RLineOverspeedData.Builder, LCRLineOverspeedData.RLineOverspeedDataOrBuilder>(
                  rlineOverSpdList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          rlineOverSpdList_ = null;
        }
        return rlineOverSpdListBuilder_;
      }
      
      // repeated .RLineOvertimeData rlineOverTList = 7;
      private java.util.List<LCRLineOvertimeData.RLineOvertimeData> rlineOverTList_ =
        java.util.Collections.emptyList();
      private void ensureRlineOverTListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          rlineOverTList_ = new java.util.ArrayList<LCRLineOvertimeData.RLineOvertimeData>(rlineOverTList_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRLineOvertimeData.RLineOvertimeData, LCRLineOvertimeData.RLineOvertimeData.Builder, LCRLineOvertimeData.RLineOvertimeDataOrBuilder> rlineOverTListBuilder_;
      
      public java.util.List<LCRLineOvertimeData.RLineOvertimeData> getRlineOverTListList() {
        if (rlineOverTListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rlineOverTList_);
        } else {
          return rlineOverTListBuilder_.getMessageList();
        }
      }
      public int getRlineOverTListCount() {
        if (rlineOverTListBuilder_ == null) {
          return rlineOverTList_.size();
        } else {
          return rlineOverTListBuilder_.getCount();
        }
      }
      public LCRLineOvertimeData.RLineOvertimeData getRlineOverTList(int index) {
        if (rlineOverTListBuilder_ == null) {
          return rlineOverTList_.get(index);
        } else {
          return rlineOverTListBuilder_.getMessage(index);
        }
      }
      public Builder setRlineOverTList(
          int index, LCRLineOvertimeData.RLineOvertimeData value) {
        if (rlineOverTListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverTListIsMutable();
          rlineOverTList_.set(index, value);
          onChanged();
        } else {
          rlineOverTListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRlineOverTList(
          int index, LCRLineOvertimeData.RLineOvertimeData.Builder builderForValue) {
        if (rlineOverTListBuilder_ == null) {
          ensureRlineOverTListIsMutable();
          rlineOverTList_.set(index, builderForValue.build());
          onChanged();
        } else {
          rlineOverTListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRlineOverTList(LCRLineOvertimeData.RLineOvertimeData value) {
        if (rlineOverTListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverTListIsMutable();
          rlineOverTList_.add(value);
          onChanged();
        } else {
          rlineOverTListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRlineOverTList(
          int index, LCRLineOvertimeData.RLineOvertimeData value) {
        if (rlineOverTListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRlineOverTListIsMutable();
          rlineOverTList_.add(index, value);
          onChanged();
        } else {
          rlineOverTListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRlineOverTList(
          LCRLineOvertimeData.RLineOvertimeData.Builder builderForValue) {
        if (rlineOverTListBuilder_ == null) {
          ensureRlineOverTListIsMutable();
          rlineOverTList_.add(builderForValue.build());
          onChanged();
        } else {
          rlineOverTListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRlineOverTList(
          int index, LCRLineOvertimeData.RLineOvertimeData.Builder builderForValue) {
        if (rlineOverTListBuilder_ == null) {
          ensureRlineOverTListIsMutable();
          rlineOverTList_.add(index, builderForValue.build());
          onChanged();
        } else {
          rlineOverTListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRlineOverTList(
          Iterable<? extends LCRLineOvertimeData.RLineOvertimeData> values) {
        if (rlineOverTListBuilder_ == null) {
          ensureRlineOverTListIsMutable();
          super.addAll(values, rlineOverTList_);
          onChanged();
        } else {
          rlineOverTListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRlineOverTList() {
        if (rlineOverTListBuilder_ == null) {
          rlineOverTList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          rlineOverTListBuilder_.clear();
        }
        return this;
      }
      public Builder removeRlineOverTList(int index) {
        if (rlineOverTListBuilder_ == null) {
          ensureRlineOverTListIsMutable();
          rlineOverTList_.remove(index);
          onChanged();
        } else {
          rlineOverTListBuilder_.remove(index);
        }
        return this;
      }
      public LCRLineOvertimeData.RLineOvertimeData.Builder getRlineOverTListBuilder(
          int index) {
        return getRlineOverTListFieldBuilder().getBuilder(index);
      }
      public LCRLineOvertimeData.RLineOvertimeDataOrBuilder getRlineOverTListOrBuilder(
          int index) {
        if (rlineOverTListBuilder_ == null) {
          return rlineOverTList_.get(index);  } else {
          return rlineOverTListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCRLineOvertimeData.RLineOvertimeDataOrBuilder>
           getRlineOverTListOrBuilderList() {
        if (rlineOverTListBuilder_ != null) {
          return rlineOverTListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rlineOverTList_);
        }
      }
      public LCRLineOvertimeData.RLineOvertimeData.Builder addRlineOverTListBuilder() {
        return getRlineOverTListFieldBuilder().addBuilder(
            LCRLineOvertimeData.RLineOvertimeData.getDefaultInstance());
      }
      public LCRLineOvertimeData.RLineOvertimeData.Builder addRlineOverTListBuilder(
          int index) {
        return getRlineOverTListFieldBuilder().addBuilder(
            index, LCRLineOvertimeData.RLineOvertimeData.getDefaultInstance());
      }
      public java.util.List<LCRLineOvertimeData.RLineOvertimeData.Builder>
           getRlineOverTListBuilderList() {
        return getRlineOverTListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCRLineOvertimeData.RLineOvertimeData, LCRLineOvertimeData.RLineOvertimeData.Builder, LCRLineOvertimeData.RLineOvertimeDataOrBuilder>
          getRlineOverTListFieldBuilder() {
        if (rlineOverTListBuilder_ == null) {
          rlineOverTListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCRLineOvertimeData.RLineOvertimeData, LCRLineOvertimeData.RLineOvertimeData.Builder, LCRLineOvertimeData.RLineOvertimeDataOrBuilder>(
                  rlineOverTList_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          rlineOverTList_ = null;
        }
        return rlineOverTListBuilder_;
      }
      
      // repeated .OvertimeParkingData overtimePList = 8;
      private java.util.List<LCOvertimeParkingData.OvertimeParkingData> overtimePList_ =
        java.util.Collections.emptyList();
      private void ensureOvertimePListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          overtimePList_ = new java.util.ArrayList<LCOvertimeParkingData.OvertimeParkingData>(overtimePList_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCOvertimeParkingData.OvertimeParkingData, LCOvertimeParkingData.OvertimeParkingData.Builder, LCOvertimeParkingData.OvertimeParkingDataOrBuilder> overtimePListBuilder_;
      
      public java.util.List<LCOvertimeParkingData.OvertimeParkingData> getOvertimePListList() {
        if (overtimePListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(overtimePList_);
        } else {
          return overtimePListBuilder_.getMessageList();
        }
      }
      public int getOvertimePListCount() {
        if (overtimePListBuilder_ == null) {
          return overtimePList_.size();
        } else {
          return overtimePListBuilder_.getCount();
        }
      }
      public LCOvertimeParkingData.OvertimeParkingData getOvertimePList(int index) {
        if (overtimePListBuilder_ == null) {
          return overtimePList_.get(index);
        } else {
          return overtimePListBuilder_.getMessage(index);
        }
      }
      public Builder setOvertimePList(
          int index, LCOvertimeParkingData.OvertimeParkingData value) {
        if (overtimePListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOvertimePListIsMutable();
          overtimePList_.set(index, value);
          onChanged();
        } else {
          overtimePListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setOvertimePList(
          int index, LCOvertimeParkingData.OvertimeParkingData.Builder builderForValue) {
        if (overtimePListBuilder_ == null) {
          ensureOvertimePListIsMutable();
          overtimePList_.set(index, builderForValue.build());
          onChanged();
        } else {
          overtimePListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addOvertimePList(LCOvertimeParkingData.OvertimeParkingData value) {
        if (overtimePListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOvertimePListIsMutable();
          overtimePList_.add(value);
          onChanged();
        } else {
          overtimePListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addOvertimePList(
          int index, LCOvertimeParkingData.OvertimeParkingData value) {
        if (overtimePListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOvertimePListIsMutable();
          overtimePList_.add(index, value);
          onChanged();
        } else {
          overtimePListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addOvertimePList(
          LCOvertimeParkingData.OvertimeParkingData.Builder builderForValue) {
        if (overtimePListBuilder_ == null) {
          ensureOvertimePListIsMutable();
          overtimePList_.add(builderForValue.build());
          onChanged();
        } else {
          overtimePListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addOvertimePList(
          int index, LCOvertimeParkingData.OvertimeParkingData.Builder builderForValue) {
        if (overtimePListBuilder_ == null) {
          ensureOvertimePListIsMutable();
          overtimePList_.add(index, builderForValue.build());
          onChanged();
        } else {
          overtimePListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllOvertimePList(
          Iterable<? extends LCOvertimeParkingData.OvertimeParkingData> values) {
        if (overtimePListBuilder_ == null) {
          ensureOvertimePListIsMutable();
          super.addAll(values, overtimePList_);
          onChanged();
        } else {
          overtimePListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearOvertimePList() {
        if (overtimePListBuilder_ == null) {
          overtimePList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          overtimePListBuilder_.clear();
        }
        return this;
      }
      public Builder removeOvertimePList(int index) {
        if (overtimePListBuilder_ == null) {
          ensureOvertimePListIsMutable();
          overtimePList_.remove(index);
          onChanged();
        } else {
          overtimePListBuilder_.remove(index);
        }
        return this;
      }
      public LCOvertimeParkingData.OvertimeParkingData.Builder getOvertimePListBuilder(
          int index) {
        return getOvertimePListFieldBuilder().getBuilder(index);
      }
      public LCOvertimeParkingData.OvertimeParkingDataOrBuilder getOvertimePListOrBuilder(
          int index) {
        if (overtimePListBuilder_ == null) {
          return overtimePList_.get(index);  } else {
          return overtimePListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCOvertimeParkingData.OvertimeParkingDataOrBuilder>
           getOvertimePListOrBuilderList() {
        if (overtimePListBuilder_ != null) {
          return overtimePListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(overtimePList_);
        }
      }
      public LCOvertimeParkingData.OvertimeParkingData.Builder addOvertimePListBuilder() {
        return getOvertimePListFieldBuilder().addBuilder(
            LCOvertimeParkingData.OvertimeParkingData.getDefaultInstance());
      }
      public LCOvertimeParkingData.OvertimeParkingData.Builder addOvertimePListBuilder(
          int index) {
        return getOvertimePListFieldBuilder().addBuilder(
            index, LCOvertimeParkingData.OvertimeParkingData.getDefaultInstance());
      }
      public java.util.List<LCOvertimeParkingData.OvertimeParkingData.Builder>
           getOvertimePListBuilderList() {
        return getOvertimePListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCOvertimeParkingData.OvertimeParkingData, LCOvertimeParkingData.OvertimeParkingData.Builder, LCOvertimeParkingData.OvertimeParkingDataOrBuilder>
          getOvertimePListFieldBuilder() {
        if (overtimePListBuilder_ == null) {
          overtimePListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCOvertimeParkingData.OvertimeParkingData, LCOvertimeParkingData.OvertimeParkingData.Builder, LCOvertimeParkingData.OvertimeParkingDataOrBuilder>(
                  overtimePList_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          overtimePList_ = null;
        }
        return overtimePListBuilder_;
      }
      
      // repeated .FatigueData fatigueList = 9;
      private java.util.List<LCFatigueData.FatigueData> fatigueList_ =
        java.util.Collections.emptyList();
      private void ensureFatigueListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fatigueList_ = new java.util.ArrayList<LCFatigueData.FatigueData>(fatigueList_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCFatigueData.FatigueData, LCFatigueData.FatigueData.Builder, LCFatigueData.FatigueDataOrBuilder> fatigueListBuilder_;
      
      public java.util.List<LCFatigueData.FatigueData> getFatigueListList() {
        if (fatigueListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fatigueList_);
        } else {
          return fatigueListBuilder_.getMessageList();
        }
      }
      public int getFatigueListCount() {
        if (fatigueListBuilder_ == null) {
          return fatigueList_.size();
        } else {
          return fatigueListBuilder_.getCount();
        }
      }
      public LCFatigueData.FatigueData getFatigueList(int index) {
        if (fatigueListBuilder_ == null) {
          return fatigueList_.get(index);
        } else {
          return fatigueListBuilder_.getMessage(index);
        }
      }
      public Builder setFatigueList(
          int index, LCFatigueData.FatigueData value) {
        if (fatigueListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFatigueListIsMutable();
          fatigueList_.set(index, value);
          onChanged();
        } else {
          fatigueListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFatigueList(
          int index, LCFatigueData.FatigueData.Builder builderForValue) {
        if (fatigueListBuilder_ == null) {
          ensureFatigueListIsMutable();
          fatigueList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fatigueListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFatigueList(LCFatigueData.FatigueData value) {
        if (fatigueListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFatigueListIsMutable();
          fatigueList_.add(value);
          onChanged();
        } else {
          fatigueListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFatigueList(
          int index, LCFatigueData.FatigueData value) {
        if (fatigueListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFatigueListIsMutable();
          fatigueList_.add(index, value);
          onChanged();
        } else {
          fatigueListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFatigueList(
          LCFatigueData.FatigueData.Builder builderForValue) {
        if (fatigueListBuilder_ == null) {
          ensureFatigueListIsMutable();
          fatigueList_.add(builderForValue.build());
          onChanged();
        } else {
          fatigueListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFatigueList(
          int index, LCFatigueData.FatigueData.Builder builderForValue) {
        if (fatigueListBuilder_ == null) {
          ensureFatigueListIsMutable();
          fatigueList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fatigueListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFatigueList(
          Iterable<? extends LCFatigueData.FatigueData> values) {
        if (fatigueListBuilder_ == null) {
          ensureFatigueListIsMutable();
          super.addAll(values, fatigueList_);
          onChanged();
        } else {
          fatigueListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFatigueList() {
        if (fatigueListBuilder_ == null) {
          fatigueList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          fatigueListBuilder_.clear();
        }
        return this;
      }
      public Builder removeFatigueList(int index) {
        if (fatigueListBuilder_ == null) {
          ensureFatigueListIsMutable();
          fatigueList_.remove(index);
          onChanged();
        } else {
          fatigueListBuilder_.remove(index);
        }
        return this;
      }
      public LCFatigueData.FatigueData.Builder getFatigueListBuilder(
          int index) {
        return getFatigueListFieldBuilder().getBuilder(index);
      }
      public LCFatigueData.FatigueDataOrBuilder getFatigueListOrBuilder(
          int index) {
        if (fatigueListBuilder_ == null) {
          return fatigueList_.get(index);  } else {
          return fatigueListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCFatigueData.FatigueDataOrBuilder>
           getFatigueListOrBuilderList() {
        if (fatigueListBuilder_ != null) {
          return fatigueListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fatigueList_);
        }
      }
      public LCFatigueData.FatigueData.Builder addFatigueListBuilder() {
        return getFatigueListFieldBuilder().addBuilder(
            LCFatigueData.FatigueData.getDefaultInstance());
      }
      public LCFatigueData.FatigueData.Builder addFatigueListBuilder(
          int index) {
        return getFatigueListFieldBuilder().addBuilder(
            index, LCFatigueData.FatigueData.getDefaultInstance());
      }
      public java.util.List<LCFatigueData.FatigueData.Builder>
           getFatigueListBuilderList() {
        return getFatigueListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCFatigueData.FatigueData, LCFatigueData.FatigueData.Builder, LCFatigueData.FatigueDataOrBuilder>
          getFatigueListFieldBuilder() {
        if (fatigueListBuilder_ == null) {
          fatigueListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCFatigueData.FatigueData, LCFatigueData.FatigueData.Builder, LCFatigueData.FatigueDataOrBuilder>(
                  fatigueList_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          fatigueList_ = null;
        }
        return fatigueListBuilder_;
      }
      
      // repeated .EmergencyData emergencyList = 10;
      private java.util.List<LCEmergencyData.EmergencyData> emergencyList_ =
        java.util.Collections.emptyList();
      private void ensureEmergencyListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          emergencyList_ = new java.util.ArrayList<LCEmergencyData.EmergencyData>(emergencyList_);
          bitField0_ |= 0x00000200;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCEmergencyData.EmergencyData, LCEmergencyData.EmergencyData.Builder, LCEmergencyData.EmergencyDataOrBuilder> emergencyListBuilder_;
      
      public java.util.List<LCEmergencyData.EmergencyData> getEmergencyListList() {
        if (emergencyListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(emergencyList_);
        } else {
          return emergencyListBuilder_.getMessageList();
        }
      }
      public int getEmergencyListCount() {
        if (emergencyListBuilder_ == null) {
          return emergencyList_.size();
        } else {
          return emergencyListBuilder_.getCount();
        }
      }
      public LCEmergencyData.EmergencyData getEmergencyList(int index) {
        if (emergencyListBuilder_ == null) {
          return emergencyList_.get(index);
        } else {
          return emergencyListBuilder_.getMessage(index);
        }
      }
      public Builder setEmergencyList(
          int index, LCEmergencyData.EmergencyData value) {
        if (emergencyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmergencyListIsMutable();
          emergencyList_.set(index, value);
          onChanged();
        } else {
          emergencyListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEmergencyList(
          int index, LCEmergencyData.EmergencyData.Builder builderForValue) {
        if (emergencyListBuilder_ == null) {
          ensureEmergencyListIsMutable();
          emergencyList_.set(index, builderForValue.build());
          onChanged();
        } else {
          emergencyListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEmergencyList(LCEmergencyData.EmergencyData value) {
        if (emergencyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmergencyListIsMutable();
          emergencyList_.add(value);
          onChanged();
        } else {
          emergencyListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEmergencyList(
          int index, LCEmergencyData.EmergencyData value) {
        if (emergencyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmergencyListIsMutable();
          emergencyList_.add(index, value);
          onChanged();
        } else {
          emergencyListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEmergencyList(
          LCEmergencyData.EmergencyData.Builder builderForValue) {
        if (emergencyListBuilder_ == null) {
          ensureEmergencyListIsMutable();
          emergencyList_.add(builderForValue.build());
          onChanged();
        } else {
          emergencyListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEmergencyList(
          int index, LCEmergencyData.EmergencyData.Builder builderForValue) {
        if (emergencyListBuilder_ == null) {
          ensureEmergencyListIsMutable();
          emergencyList_.add(index, builderForValue.build());
          onChanged();
        } else {
          emergencyListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEmergencyList(
          Iterable<? extends LCEmergencyData.EmergencyData> values) {
        if (emergencyListBuilder_ == null) {
          ensureEmergencyListIsMutable();
          super.addAll(values, emergencyList_);
          onChanged();
        } else {
          emergencyListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEmergencyList() {
        if (emergencyListBuilder_ == null) {
          emergencyList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          emergencyListBuilder_.clear();
        }
        return this;
      }
      public Builder removeEmergencyList(int index) {
        if (emergencyListBuilder_ == null) {
          ensureEmergencyListIsMutable();
          emergencyList_.remove(index);
          onChanged();
        } else {
          emergencyListBuilder_.remove(index);
        }
        return this;
      }
      public LCEmergencyData.EmergencyData.Builder getEmergencyListBuilder(
          int index) {
        return getEmergencyListFieldBuilder().getBuilder(index);
      }
      public LCEmergencyData.EmergencyDataOrBuilder getEmergencyListOrBuilder(
          int index) {
        if (emergencyListBuilder_ == null) {
          return emergencyList_.get(index);  } else {
          return emergencyListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCEmergencyData.EmergencyDataOrBuilder>
           getEmergencyListOrBuilderList() {
        if (emergencyListBuilder_ != null) {
          return emergencyListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(emergencyList_);
        }
      }
      public LCEmergencyData.EmergencyData.Builder addEmergencyListBuilder() {
        return getEmergencyListFieldBuilder().addBuilder(
            LCEmergencyData.EmergencyData.getDefaultInstance());
      }
      public LCEmergencyData.EmergencyData.Builder addEmergencyListBuilder(
          int index) {
        return getEmergencyListFieldBuilder().addBuilder(
            index, LCEmergencyData.EmergencyData.getDefaultInstance());
      }
      public java.util.List<LCEmergencyData.EmergencyData.Builder>
           getEmergencyListBuilderList() {
        return getEmergencyListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCEmergencyData.EmergencyData, LCEmergencyData.EmergencyData.Builder, LCEmergencyData.EmergencyDataOrBuilder>
          getEmergencyListFieldBuilder() {
        if (emergencyListBuilder_ == null) {
          emergencyListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCEmergencyData.EmergencyData, LCEmergencyData.EmergencyData.Builder, LCEmergencyData.EmergencyDataOrBuilder>(
                  emergencyList_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          emergencyList_ = null;
        }
        return emergencyListBuilder_;
      }
      
      // repeated .PowerStayInLowerData powerSILList = 11;
      private java.util.List<LCPowerStayInLowerData.PowerStayInLowerData> powerSILList_ =
        java.util.Collections.emptyList();
      private void ensurePowerSILListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          powerSILList_ = new java.util.ArrayList<LCPowerStayInLowerData.PowerStayInLowerData>(powerSILList_);
          bitField0_ |= 0x00000400;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCPowerStayInLowerData.PowerStayInLowerData, LCPowerStayInLowerData.PowerStayInLowerData.Builder, LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder> powerSILListBuilder_;
      
      public java.util.List<LCPowerStayInLowerData.PowerStayInLowerData> getPowerSILListList() {
        if (powerSILListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(powerSILList_);
        } else {
          return powerSILListBuilder_.getMessageList();
        }
      }
      public int getPowerSILListCount() {
        if (powerSILListBuilder_ == null) {
          return powerSILList_.size();
        } else {
          return powerSILListBuilder_.getCount();
        }
      }
      public LCPowerStayInLowerData.PowerStayInLowerData getPowerSILList(int index) {
        if (powerSILListBuilder_ == null) {
          return powerSILList_.get(index);
        } else {
          return powerSILListBuilder_.getMessage(index);
        }
      }
      public Builder setPowerSILList(
          int index, LCPowerStayInLowerData.PowerStayInLowerData value) {
        if (powerSILListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePowerSILListIsMutable();
          powerSILList_.set(index, value);
          onChanged();
        } else {
          powerSILListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPowerSILList(
          int index, LCPowerStayInLowerData.PowerStayInLowerData.Builder builderForValue) {
        if (powerSILListBuilder_ == null) {
          ensurePowerSILListIsMutable();
          powerSILList_.set(index, builderForValue.build());
          onChanged();
        } else {
          powerSILListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPowerSILList(LCPowerStayInLowerData.PowerStayInLowerData value) {
        if (powerSILListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePowerSILListIsMutable();
          powerSILList_.add(value);
          onChanged();
        } else {
          powerSILListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPowerSILList(
          int index, LCPowerStayInLowerData.PowerStayInLowerData value) {
        if (powerSILListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePowerSILListIsMutable();
          powerSILList_.add(index, value);
          onChanged();
        } else {
          powerSILListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPowerSILList(
          LCPowerStayInLowerData.PowerStayInLowerData.Builder builderForValue) {
        if (powerSILListBuilder_ == null) {
          ensurePowerSILListIsMutable();
          powerSILList_.add(builderForValue.build());
          onChanged();
        } else {
          powerSILListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPowerSILList(
          int index, LCPowerStayInLowerData.PowerStayInLowerData.Builder builderForValue) {
        if (powerSILListBuilder_ == null) {
          ensurePowerSILListIsMutable();
          powerSILList_.add(index, builderForValue.build());
          onChanged();
        } else {
          powerSILListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPowerSILList(
          Iterable<? extends LCPowerStayInLowerData.PowerStayInLowerData> values) {
        if (powerSILListBuilder_ == null) {
          ensurePowerSILListIsMutable();
          super.addAll(values, powerSILList_);
          onChanged();
        } else {
          powerSILListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPowerSILList() {
        if (powerSILListBuilder_ == null) {
          powerSILList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          powerSILListBuilder_.clear();
        }
        return this;
      }
      public Builder removePowerSILList(int index) {
        if (powerSILListBuilder_ == null) {
          ensurePowerSILListIsMutable();
          powerSILList_.remove(index);
          onChanged();
        } else {
          powerSILListBuilder_.remove(index);
        }
        return this;
      }
      public LCPowerStayInLowerData.PowerStayInLowerData.Builder getPowerSILListBuilder(
          int index) {
        return getPowerSILListFieldBuilder().getBuilder(index);
      }
      public LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder getPowerSILListOrBuilder(
          int index) {
        if (powerSILListBuilder_ == null) {
          return powerSILList_.get(index);  } else {
          return powerSILListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder>
           getPowerSILListOrBuilderList() {
        if (powerSILListBuilder_ != null) {
          return powerSILListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(powerSILList_);
        }
      }
      public LCPowerStayInLowerData.PowerStayInLowerData.Builder addPowerSILListBuilder() {
        return getPowerSILListFieldBuilder().addBuilder(
            LCPowerStayInLowerData.PowerStayInLowerData.getDefaultInstance());
      }
      public LCPowerStayInLowerData.PowerStayInLowerData.Builder addPowerSILListBuilder(
          int index) {
        return getPowerSILListFieldBuilder().addBuilder(
            index, LCPowerStayInLowerData.PowerStayInLowerData.getDefaultInstance());
      }
      public java.util.List<LCPowerStayInLowerData.PowerStayInLowerData.Builder>
           getPowerSILListBuilderList() {
        return getPowerSILListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCPowerStayInLowerData.PowerStayInLowerData, LCPowerStayInLowerData.PowerStayInLowerData.Builder, LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder>
          getPowerSILListFieldBuilder() {
        if (powerSILListBuilder_ == null) {
          powerSILListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCPowerStayInLowerData.PowerStayInLowerData, LCPowerStayInLowerData.PowerStayInLowerData.Builder, LCPowerStayInLowerData.PowerStayInLowerDataOrBuilder>(
                  powerSILList_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          powerSILList_ = null;
        }
        return powerSILListBuilder_;
      }
      
      // repeated .ElectricPowerOffData electricPOList = 12;
      private java.util.List<LCElectricPowerOffData.ElectricPowerOffData> electricPOList_ =
        java.util.Collections.emptyList();
      private void ensureElectricPOListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          electricPOList_ = new java.util.ArrayList<LCElectricPowerOffData.ElectricPowerOffData>(electricPOList_);
          bitField0_ |= 0x00000800;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCElectricPowerOffData.ElectricPowerOffData, LCElectricPowerOffData.ElectricPowerOffData.Builder, LCElectricPowerOffData.ElectricPowerOffDataOrBuilder> electricPOListBuilder_;
      
      public java.util.List<LCElectricPowerOffData.ElectricPowerOffData> getElectricPOListList() {
        if (electricPOListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(electricPOList_);
        } else {
          return electricPOListBuilder_.getMessageList();
        }
      }
      public int getElectricPOListCount() {
        if (electricPOListBuilder_ == null) {
          return electricPOList_.size();
        } else {
          return electricPOListBuilder_.getCount();
        }
      }
      public LCElectricPowerOffData.ElectricPowerOffData getElectricPOList(int index) {
        if (electricPOListBuilder_ == null) {
          return electricPOList_.get(index);
        } else {
          return electricPOListBuilder_.getMessage(index);
        }
      }
      public Builder setElectricPOList(
          int index, LCElectricPowerOffData.ElectricPowerOffData value) {
        if (electricPOListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElectricPOListIsMutable();
          electricPOList_.set(index, value);
          onChanged();
        } else {
          electricPOListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setElectricPOList(
          int index, LCElectricPowerOffData.ElectricPowerOffData.Builder builderForValue) {
        if (electricPOListBuilder_ == null) {
          ensureElectricPOListIsMutable();
          electricPOList_.set(index, builderForValue.build());
          onChanged();
        } else {
          electricPOListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addElectricPOList(LCElectricPowerOffData.ElectricPowerOffData value) {
        if (electricPOListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElectricPOListIsMutable();
          electricPOList_.add(value);
          onChanged();
        } else {
          electricPOListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addElectricPOList(
          int index, LCElectricPowerOffData.ElectricPowerOffData value) {
        if (electricPOListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElectricPOListIsMutable();
          electricPOList_.add(index, value);
          onChanged();
        } else {
          electricPOListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addElectricPOList(
          LCElectricPowerOffData.ElectricPowerOffData.Builder builderForValue) {
        if (electricPOListBuilder_ == null) {
          ensureElectricPOListIsMutable();
          electricPOList_.add(builderForValue.build());
          onChanged();
        } else {
          electricPOListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addElectricPOList(
          int index, LCElectricPowerOffData.ElectricPowerOffData.Builder builderForValue) {
        if (electricPOListBuilder_ == null) {
          ensureElectricPOListIsMutable();
          electricPOList_.add(index, builderForValue.build());
          onChanged();
        } else {
          electricPOListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllElectricPOList(
          Iterable<? extends LCElectricPowerOffData.ElectricPowerOffData> values) {
        if (electricPOListBuilder_ == null) {
          ensureElectricPOListIsMutable();
          super.addAll(values, electricPOList_);
          onChanged();
        } else {
          electricPOListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearElectricPOList() {
        if (electricPOListBuilder_ == null) {
          electricPOList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          electricPOListBuilder_.clear();
        }
        return this;
      }
      public Builder removeElectricPOList(int index) {
        if (electricPOListBuilder_ == null) {
          ensureElectricPOListIsMutable();
          electricPOList_.remove(index);
          onChanged();
        } else {
          electricPOListBuilder_.remove(index);
        }
        return this;
      }
      public LCElectricPowerOffData.ElectricPowerOffData.Builder getElectricPOListBuilder(
          int index) {
        return getElectricPOListFieldBuilder().getBuilder(index);
      }
      public LCElectricPowerOffData.ElectricPowerOffDataOrBuilder getElectricPOListOrBuilder(
          int index) {
        if (electricPOListBuilder_ == null) {
          return electricPOList_.get(index);  } else {
          return electricPOListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCElectricPowerOffData.ElectricPowerOffDataOrBuilder>
           getElectricPOListOrBuilderList() {
        if (electricPOListBuilder_ != null) {
          return electricPOListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(electricPOList_);
        }
      }
      public LCElectricPowerOffData.ElectricPowerOffData.Builder addElectricPOListBuilder() {
        return getElectricPOListFieldBuilder().addBuilder(
            LCElectricPowerOffData.ElectricPowerOffData.getDefaultInstance());
      }
      public LCElectricPowerOffData.ElectricPowerOffData.Builder addElectricPOListBuilder(
          int index) {
        return getElectricPOListFieldBuilder().addBuilder(
            index, LCElectricPowerOffData.ElectricPowerOffData.getDefaultInstance());
      }
      public java.util.List<LCElectricPowerOffData.ElectricPowerOffData.Builder>
           getElectricPOListBuilderList() {
        return getElectricPOListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCElectricPowerOffData.ElectricPowerOffData, LCElectricPowerOffData.ElectricPowerOffData.Builder, LCElectricPowerOffData.ElectricPowerOffDataOrBuilder>
          getElectricPOListFieldBuilder() {
        if (electricPOListBuilder_ == null) {
          electricPOListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCElectricPowerOffData.ElectricPowerOffData, LCElectricPowerOffData.ElectricPowerOffData.Builder, LCElectricPowerOffData.ElectricPowerOffDataOrBuilder>(
                  electricPOList_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          electricPOList_ = null;
        }
        return electricPOListBuilder_;
      }
      
      // repeated .ACCStatusData accList = 13;
      private java.util.List<LCACCStatusData.ACCStatusData> accList_ =
        java.util.Collections.emptyList();
      private void ensureAccListIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          accList_ = new java.util.ArrayList<LCACCStatusData.ACCStatusData>(accList_);
          bitField0_ |= 0x00001000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCACCStatusData.ACCStatusData, LCACCStatusData.ACCStatusData.Builder, LCACCStatusData.ACCStatusDataOrBuilder> accListBuilder_;
      
      public java.util.List<LCACCStatusData.ACCStatusData> getAccListList() {
        if (accListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accList_);
        } else {
          return accListBuilder_.getMessageList();
        }
      }
      public int getAccListCount() {
        if (accListBuilder_ == null) {
          return accList_.size();
        } else {
          return accListBuilder_.getCount();
        }
      }
      public LCACCStatusData.ACCStatusData getAccList(int index) {
        if (accListBuilder_ == null) {
          return accList_.get(index);
        } else {
          return accListBuilder_.getMessage(index);
        }
      }
      public Builder setAccList(
          int index, LCACCStatusData.ACCStatusData value) {
        if (accListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccListIsMutable();
          accList_.set(index, value);
          onChanged();
        } else {
          accListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAccList(
          int index, LCACCStatusData.ACCStatusData.Builder builderForValue) {
        if (accListBuilder_ == null) {
          ensureAccListIsMutable();
          accList_.set(index, builderForValue.build());
          onChanged();
        } else {
          accListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAccList(LCACCStatusData.ACCStatusData value) {
        if (accListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccListIsMutable();
          accList_.add(value);
          onChanged();
        } else {
          accListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAccList(
          int index, LCACCStatusData.ACCStatusData value) {
        if (accListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccListIsMutable();
          accList_.add(index, value);
          onChanged();
        } else {
          accListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAccList(
          LCACCStatusData.ACCStatusData.Builder builderForValue) {
        if (accListBuilder_ == null) {
          ensureAccListIsMutable();
          accList_.add(builderForValue.build());
          onChanged();
        } else {
          accListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAccList(
          int index, LCACCStatusData.ACCStatusData.Builder builderForValue) {
        if (accListBuilder_ == null) {
          ensureAccListIsMutable();
          accList_.add(index, builderForValue.build());
          onChanged();
        } else {
          accListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAccList(
          Iterable<? extends LCACCStatusData.ACCStatusData> values) {
        if (accListBuilder_ == null) {
          ensureAccListIsMutable();
          super.addAll(values, accList_);
          onChanged();
        } else {
          accListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAccList() {
        if (accListBuilder_ == null) {
          accList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          accListBuilder_.clear();
        }
        return this;
      }
      public Builder removeAccList(int index) {
        if (accListBuilder_ == null) {
          ensureAccListIsMutable();
          accList_.remove(index);
          onChanged();
        } else {
          accListBuilder_.remove(index);
        }
        return this;
      }
      public LCACCStatusData.ACCStatusData.Builder getAccListBuilder(
          int index) {
        return getAccListFieldBuilder().getBuilder(index);
      }
      public LCACCStatusData.ACCStatusDataOrBuilder getAccListOrBuilder(
          int index) {
        if (accListBuilder_ == null) {
          return accList_.get(index);  } else {
          return accListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCACCStatusData.ACCStatusDataOrBuilder>
           getAccListOrBuilderList() {
        if (accListBuilder_ != null) {
          return accListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accList_);
        }
      }
      public LCACCStatusData.ACCStatusData.Builder addAccListBuilder() {
        return getAccListFieldBuilder().addBuilder(
            LCACCStatusData.ACCStatusData.getDefaultInstance());
      }
      public LCACCStatusData.ACCStatusData.Builder addAccListBuilder(
          int index) {
        return getAccListFieldBuilder().addBuilder(
            index, LCACCStatusData.ACCStatusData.getDefaultInstance());
      }
      public java.util.List<LCACCStatusData.ACCStatusData.Builder>
           getAccListBuilderList() {
        return getAccListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCACCStatusData.ACCStatusData, LCACCStatusData.ACCStatusData.Builder, LCACCStatusData.ACCStatusDataOrBuilder>
          getAccListFieldBuilder() {
        if (accListBuilder_ == null) {
          accListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCACCStatusData.ACCStatusData, LCACCStatusData.ACCStatusData.Builder, LCACCStatusData.ACCStatusDataOrBuilder>(
                  accList_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          accList_ = null;
        }
        return accListBuilder_;
      }
      
      // repeated .MileagesData mileageList = 14;
      private java.util.List<LCMileagesData.MileagesData> mileageList_ =
        java.util.Collections.emptyList();
      private void ensureMileageListIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          mileageList_ = new java.util.ArrayList<LCMileagesData.MileagesData>(mileageList_);
          bitField0_ |= 0x00002000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCMileagesData.MileagesData, LCMileagesData.MileagesData.Builder, LCMileagesData.MileagesDataOrBuilder> mileageListBuilder_;
      
      public java.util.List<LCMileagesData.MileagesData> getMileageListList() {
        if (mileageListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mileageList_);
        } else {
          return mileageListBuilder_.getMessageList();
        }
      }
      public int getMileageListCount() {
        if (mileageListBuilder_ == null) {
          return mileageList_.size();
        } else {
          return mileageListBuilder_.getCount();
        }
      }
      public LCMileagesData.MileagesData getMileageList(int index) {
        if (mileageListBuilder_ == null) {
          return mileageList_.get(index);
        } else {
          return mileageListBuilder_.getMessage(index);
        }
      }
      public Builder setMileageList(
          int index, LCMileagesData.MileagesData value) {
        if (mileageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMileageListIsMutable();
          mileageList_.set(index, value);
          onChanged();
        } else {
          mileageListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMileageList(
          int index, LCMileagesData.MileagesData.Builder builderForValue) {
        if (mileageListBuilder_ == null) {
          ensureMileageListIsMutable();
          mileageList_.set(index, builderForValue.build());
          onChanged();
        } else {
          mileageListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMileageList(LCMileagesData.MileagesData value) {
        if (mileageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMileageListIsMutable();
          mileageList_.add(value);
          onChanged();
        } else {
          mileageListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMileageList(
          int index, LCMileagesData.MileagesData value) {
        if (mileageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMileageListIsMutable();
          mileageList_.add(index, value);
          onChanged();
        } else {
          mileageListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMileageList(
          LCMileagesData.MileagesData.Builder builderForValue) {
        if (mileageListBuilder_ == null) {
          ensureMileageListIsMutable();
          mileageList_.add(builderForValue.build());
          onChanged();
        } else {
          mileageListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMileageList(
          int index, LCMileagesData.MileagesData.Builder builderForValue) {
        if (mileageListBuilder_ == null) {
          ensureMileageListIsMutable();
          mileageList_.add(index, builderForValue.build());
          onChanged();
        } else {
          mileageListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMileageList(
          Iterable<? extends LCMileagesData.MileagesData> values) {
        if (mileageListBuilder_ == null) {
          ensureMileageListIsMutable();
          super.addAll(values, mileageList_);
          onChanged();
        } else {
          mileageListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMileageList() {
        if (mileageListBuilder_ == null) {
          mileageList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          mileageListBuilder_.clear();
        }
        return this;
      }
      public Builder removeMileageList(int index) {
        if (mileageListBuilder_ == null) {
          ensureMileageListIsMutable();
          mileageList_.remove(index);
          onChanged();
        } else {
          mileageListBuilder_.remove(index);
        }
        return this;
      }
      public LCMileagesData.MileagesData.Builder getMileageListBuilder(
          int index) {
        return getMileageListFieldBuilder().getBuilder(index);
      }
      public LCMileagesData.MileagesDataOrBuilder getMileageListOrBuilder(
          int index) {
        if (mileageListBuilder_ == null) {
          return mileageList_.get(index);  } else {
          return mileageListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCMileagesData.MileagesDataOrBuilder>
           getMileageListOrBuilderList() {
        if (mileageListBuilder_ != null) {
          return mileageListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mileageList_);
        }
      }
      public LCMileagesData.MileagesData.Builder addMileageListBuilder() {
        return getMileageListFieldBuilder().addBuilder(
            LCMileagesData.MileagesData.getDefaultInstance());
      }
      public LCMileagesData.MileagesData.Builder addMileageListBuilder(
          int index) {
        return getMileageListFieldBuilder().addBuilder(
            index, LCMileagesData.MileagesData.getDefaultInstance());
      }
      public java.util.List<LCMileagesData.MileagesData.Builder>
           getMileageListBuilderList() {
        return getMileageListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCMileagesData.MileagesData, LCMileagesData.MileagesData.Builder, LCMileagesData.MileagesDataOrBuilder>
          getMileageListFieldBuilder() {
        if (mileageListBuilder_ == null) {
          mileageListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCMileagesData.MileagesData, LCMileagesData.MileagesData.Builder, LCMileagesData.MileagesDataOrBuilder>(
                  mileageList_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          mileageList_ = null;
        }
        return mileageListBuilder_;
      }
      
      // repeated .DriverLoginData driverLoginList = 15;
      private java.util.List<LCDriverLoginData.DriverLoginData> driverLoginList_ =
        java.util.Collections.emptyList();
      private void ensureDriverLoginListIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          driverLoginList_ = new java.util.ArrayList<LCDriverLoginData.DriverLoginData>(driverLoginList_);
          bitField0_ |= 0x00004000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCDriverLoginData.DriverLoginData, LCDriverLoginData.DriverLoginData.Builder, LCDriverLoginData.DriverLoginDataOrBuilder> driverLoginListBuilder_;
      
      public java.util.List<LCDriverLoginData.DriverLoginData> getDriverLoginListList() {
        if (driverLoginListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(driverLoginList_);
        } else {
          return driverLoginListBuilder_.getMessageList();
        }
      }
      public int getDriverLoginListCount() {
        if (driverLoginListBuilder_ == null) {
          return driverLoginList_.size();
        } else {
          return driverLoginListBuilder_.getCount();
        }
      }
      public LCDriverLoginData.DriverLoginData getDriverLoginList(int index) {
        if (driverLoginListBuilder_ == null) {
          return driverLoginList_.get(index);
        } else {
          return driverLoginListBuilder_.getMessage(index);
        }
      }
      public Builder setDriverLoginList(
          int index, LCDriverLoginData.DriverLoginData value) {
        if (driverLoginListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriverLoginListIsMutable();
          driverLoginList_.set(index, value);
          onChanged();
        } else {
          driverLoginListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDriverLoginList(
          int index, LCDriverLoginData.DriverLoginData.Builder builderForValue) {
        if (driverLoginListBuilder_ == null) {
          ensureDriverLoginListIsMutable();
          driverLoginList_.set(index, builderForValue.build());
          onChanged();
        } else {
          driverLoginListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDriverLoginList(LCDriverLoginData.DriverLoginData value) {
        if (driverLoginListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriverLoginListIsMutable();
          driverLoginList_.add(value);
          onChanged();
        } else {
          driverLoginListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDriverLoginList(
          int index, LCDriverLoginData.DriverLoginData value) {
        if (driverLoginListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriverLoginListIsMutable();
          driverLoginList_.add(index, value);
          onChanged();
        } else {
          driverLoginListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDriverLoginList(
          LCDriverLoginData.DriverLoginData.Builder builderForValue) {
        if (driverLoginListBuilder_ == null) {
          ensureDriverLoginListIsMutable();
          driverLoginList_.add(builderForValue.build());
          onChanged();
        } else {
          driverLoginListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDriverLoginList(
          int index, LCDriverLoginData.DriverLoginData.Builder builderForValue) {
        if (driverLoginListBuilder_ == null) {
          ensureDriverLoginListIsMutable();
          driverLoginList_.add(index, builderForValue.build());
          onChanged();
        } else {
          driverLoginListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDriverLoginList(
          Iterable<? extends LCDriverLoginData.DriverLoginData> values) {
        if (driverLoginListBuilder_ == null) {
          ensureDriverLoginListIsMutable();
          super.addAll(values, driverLoginList_);
          onChanged();
        } else {
          driverLoginListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDriverLoginList() {
        if (driverLoginListBuilder_ == null) {
          driverLoginList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          driverLoginListBuilder_.clear();
        }
        return this;
      }
      public Builder removeDriverLoginList(int index) {
        if (driverLoginListBuilder_ == null) {
          ensureDriverLoginListIsMutable();
          driverLoginList_.remove(index);
          onChanged();
        } else {
          driverLoginListBuilder_.remove(index);
        }
        return this;
      }
      public LCDriverLoginData.DriverLoginData.Builder getDriverLoginListBuilder(
          int index) {
        return getDriverLoginListFieldBuilder().getBuilder(index);
      }
      public LCDriverLoginData.DriverLoginDataOrBuilder getDriverLoginListOrBuilder(
          int index) {
        if (driverLoginListBuilder_ == null) {
          return driverLoginList_.get(index);  } else {
          return driverLoginListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCDriverLoginData.DriverLoginDataOrBuilder>
           getDriverLoginListOrBuilderList() {
        if (driverLoginListBuilder_ != null) {
          return driverLoginListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(driverLoginList_);
        }
      }
      public LCDriverLoginData.DriverLoginData.Builder addDriverLoginListBuilder() {
        return getDriverLoginListFieldBuilder().addBuilder(
            LCDriverLoginData.DriverLoginData.getDefaultInstance());
      }
      public LCDriverLoginData.DriverLoginData.Builder addDriverLoginListBuilder(
          int index) {
        return getDriverLoginListFieldBuilder().addBuilder(
            index, LCDriverLoginData.DriverLoginData.getDefaultInstance());
      }
      public java.util.List<LCDriverLoginData.DriverLoginData.Builder>
           getDriverLoginListBuilderList() {
        return getDriverLoginListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCDriverLoginData.DriverLoginData, LCDriverLoginData.DriverLoginData.Builder, LCDriverLoginData.DriverLoginDataOrBuilder>
          getDriverLoginListFieldBuilder() {
        if (driverLoginListBuilder_ == null) {
          driverLoginListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCDriverLoginData.DriverLoginData, LCDriverLoginData.DriverLoginData.Builder, LCDriverLoginData.DriverLoginDataOrBuilder>(
                  driverLoginList_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          driverLoginList_ = null;
        }
        return driverLoginListBuilder_;
      }
      
      // repeated .TerOnOffStatusData terminalStuList = 16;
      private java.util.List<LCTerOnOffStatusData.TerOnOffStatusData> terminalStuList_ =
        java.util.Collections.emptyList();
      private void ensureTerminalStuListIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          terminalStuList_ = new java.util.ArrayList<LCTerOnOffStatusData.TerOnOffStatusData>(terminalStuList_);
          bitField0_ |= 0x00008000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCTerOnOffStatusData.TerOnOffStatusData, LCTerOnOffStatusData.TerOnOffStatusData.Builder, LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder> terminalStuListBuilder_;
      
      public java.util.List<LCTerOnOffStatusData.TerOnOffStatusData> getTerminalStuListList() {
        if (terminalStuListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(terminalStuList_);
        } else {
          return terminalStuListBuilder_.getMessageList();
        }
      }
      public int getTerminalStuListCount() {
        if (terminalStuListBuilder_ == null) {
          return terminalStuList_.size();
        } else {
          return terminalStuListBuilder_.getCount();
        }
      }
      public LCTerOnOffStatusData.TerOnOffStatusData getTerminalStuList(int index) {
        if (terminalStuListBuilder_ == null) {
          return terminalStuList_.get(index);
        } else {
          return terminalStuListBuilder_.getMessage(index);
        }
      }
      public Builder setTerminalStuList(
          int index, LCTerOnOffStatusData.TerOnOffStatusData value) {
        if (terminalStuListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalStuListIsMutable();
          terminalStuList_.set(index, value);
          onChanged();
        } else {
          terminalStuListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTerminalStuList(
          int index, LCTerOnOffStatusData.TerOnOffStatusData.Builder builderForValue) {
        if (terminalStuListBuilder_ == null) {
          ensureTerminalStuListIsMutable();
          terminalStuList_.set(index, builderForValue.build());
          onChanged();
        } else {
          terminalStuListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTerminalStuList(LCTerOnOffStatusData.TerOnOffStatusData value) {
        if (terminalStuListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalStuListIsMutable();
          terminalStuList_.add(value);
          onChanged();
        } else {
          terminalStuListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTerminalStuList(
          int index, LCTerOnOffStatusData.TerOnOffStatusData value) {
        if (terminalStuListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalStuListIsMutable();
          terminalStuList_.add(index, value);
          onChanged();
        } else {
          terminalStuListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTerminalStuList(
          LCTerOnOffStatusData.TerOnOffStatusData.Builder builderForValue) {
        if (terminalStuListBuilder_ == null) {
          ensureTerminalStuListIsMutable();
          terminalStuList_.add(builderForValue.build());
          onChanged();
        } else {
          terminalStuListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTerminalStuList(
          int index, LCTerOnOffStatusData.TerOnOffStatusData.Builder builderForValue) {
        if (terminalStuListBuilder_ == null) {
          ensureTerminalStuListIsMutable();
          terminalStuList_.add(index, builderForValue.build());
          onChanged();
        } else {
          terminalStuListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTerminalStuList(
          Iterable<? extends LCTerOnOffStatusData.TerOnOffStatusData> values) {
        if (terminalStuListBuilder_ == null) {
          ensureTerminalStuListIsMutable();
          super.addAll(values, terminalStuList_);
          onChanged();
        } else {
          terminalStuListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTerminalStuList() {
        if (terminalStuListBuilder_ == null) {
          terminalStuList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          terminalStuListBuilder_.clear();
        }
        return this;
      }
      public Builder removeTerminalStuList(int index) {
        if (terminalStuListBuilder_ == null) {
          ensureTerminalStuListIsMutable();
          terminalStuList_.remove(index);
          onChanged();
        } else {
          terminalStuListBuilder_.remove(index);
        }
        return this;
      }
      public LCTerOnOffStatusData.TerOnOffStatusData.Builder getTerminalStuListBuilder(
          int index) {
        return getTerminalStuListFieldBuilder().getBuilder(index);
      }
      public LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder getTerminalStuListOrBuilder(
          int index) {
        if (terminalStuListBuilder_ == null) {
          return terminalStuList_.get(index);  } else {
          return terminalStuListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder>
           getTerminalStuListOrBuilderList() {
        if (terminalStuListBuilder_ != null) {
          return terminalStuListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(terminalStuList_);
        }
      }
      public LCTerOnOffStatusData.TerOnOffStatusData.Builder addTerminalStuListBuilder() {
        return getTerminalStuListFieldBuilder().addBuilder(
            LCTerOnOffStatusData.TerOnOffStatusData.getDefaultInstance());
      }
      public LCTerOnOffStatusData.TerOnOffStatusData.Builder addTerminalStuListBuilder(
          int index) {
        return getTerminalStuListFieldBuilder().addBuilder(
            index, LCTerOnOffStatusData.TerOnOffStatusData.getDefaultInstance());
      }
      public java.util.List<LCTerOnOffStatusData.TerOnOffStatusData.Builder>
           getTerminalStuListBuilderList() {
        return getTerminalStuListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCTerOnOffStatusData.TerOnOffStatusData, LCTerOnOffStatusData.TerOnOffStatusData.Builder, LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder>
          getTerminalStuListFieldBuilder() {
        if (terminalStuListBuilder_ == null) {
          terminalStuListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCTerOnOffStatusData.TerOnOffStatusData, LCTerOnOffStatusData.TerOnOffStatusData.Builder, LCTerOnOffStatusData.TerOnOffStatusDataOrBuilder>(
                  terminalStuList_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          terminalStuList_ = null;
        }
        return terminalStuListBuilder_;
      }
      
      // repeated .WFlowData wflowList = 17;
      private java.util.List<LCWFlowData.WFlowData> wflowList_ =
        java.util.Collections.emptyList();
      private void ensureWflowListIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          wflowList_ = new java.util.ArrayList<LCWFlowData.WFlowData>(wflowList_);
          bitField0_ |= 0x00010000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          LCWFlowData.WFlowData, LCWFlowData.WFlowData.Builder, LCWFlowData.WFlowDataOrBuilder> wflowListBuilder_;
      
      public java.util.List<LCWFlowData.WFlowData> getWflowListList() {
        if (wflowListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wflowList_);
        } else {
          return wflowListBuilder_.getMessageList();
        }
      }
      public int getWflowListCount() {
        if (wflowListBuilder_ == null) {
          return wflowList_.size();
        } else {
          return wflowListBuilder_.getCount();
        }
      }
      public LCWFlowData.WFlowData getWflowList(int index) {
        if (wflowListBuilder_ == null) {
          return wflowList_.get(index);
        } else {
          return wflowListBuilder_.getMessage(index);
        }
      }
      public Builder setWflowList(
          int index, LCWFlowData.WFlowData value) {
        if (wflowListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWflowListIsMutable();
          wflowList_.set(index, value);
          onChanged();
        } else {
          wflowListBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setWflowList(
          int index, LCWFlowData.WFlowData.Builder builderForValue) {
        if (wflowListBuilder_ == null) {
          ensureWflowListIsMutable();
          wflowList_.set(index, builderForValue.build());
          onChanged();
        } else {
          wflowListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addWflowList(LCWFlowData.WFlowData value) {
        if (wflowListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWflowListIsMutable();
          wflowList_.add(value);
          onChanged();
        } else {
          wflowListBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addWflowList(
          int index, LCWFlowData.WFlowData value) {
        if (wflowListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWflowListIsMutable();
          wflowList_.add(index, value);
          onChanged();
        } else {
          wflowListBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addWflowList(
          LCWFlowData.WFlowData.Builder builderForValue) {
        if (wflowListBuilder_ == null) {
          ensureWflowListIsMutable();
          wflowList_.add(builderForValue.build());
          onChanged();
        } else {
          wflowListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addWflowList(
          int index, LCWFlowData.WFlowData.Builder builderForValue) {
        if (wflowListBuilder_ == null) {
          ensureWflowListIsMutable();
          wflowList_.add(index, builderForValue.build());
          onChanged();
        } else {
          wflowListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWflowList(
          Iterable<? extends LCWFlowData.WFlowData> values) {
        if (wflowListBuilder_ == null) {
          ensureWflowListIsMutable();
          super.addAll(values, wflowList_);
          onChanged();
        } else {
          wflowListBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearWflowList() {
        if (wflowListBuilder_ == null) {
          wflowList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          wflowListBuilder_.clear();
        }
        return this;
      }
      public Builder removeWflowList(int index) {
        if (wflowListBuilder_ == null) {
          ensureWflowListIsMutable();
          wflowList_.remove(index);
          onChanged();
        } else {
          wflowListBuilder_.remove(index);
        }
        return this;
      }
      public LCWFlowData.WFlowData.Builder getWflowListBuilder(
          int index) {
        return getWflowListFieldBuilder().getBuilder(index);
      }
      public LCWFlowData.WFlowDataOrBuilder getWflowListOrBuilder(
          int index) {
        if (wflowListBuilder_ == null) {
          return wflowList_.get(index);  } else {
          return wflowListBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends LCWFlowData.WFlowDataOrBuilder>
           getWflowListOrBuilderList() {
        if (wflowListBuilder_ != null) {
          return wflowListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wflowList_);
        }
      }
      public LCWFlowData.WFlowData.Builder addWflowListBuilder() {
        return getWflowListFieldBuilder().addBuilder(
            LCWFlowData.WFlowData.getDefaultInstance());
      }
      public LCWFlowData.WFlowData.Builder addWflowListBuilder(
          int index) {
        return getWflowListFieldBuilder().addBuilder(
            index, LCWFlowData.WFlowData.getDefaultInstance());
      }
      public java.util.List<LCWFlowData.WFlowData.Builder>
           getWflowListBuilderList() {
        return getWflowListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          LCWFlowData.WFlowData, LCWFlowData.WFlowData.Builder, LCWFlowData.WFlowDataOrBuilder>
          getWflowListFieldBuilder() {
        if (wflowListBuilder_ == null) {
          wflowListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              LCWFlowData.WFlowData, LCWFlowData.WFlowData.Builder, LCWFlowData.WFlowDataOrBuilder>(
                  wflowList_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          wflowList_ = null;
        }
        return wflowListBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AllAlarmData)
    }
    
    static {
      defaultInstance = new AllAlarmData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AllAlarmData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AllAlarmData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AllAlarmData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n>core/proto/webservice/statisticsdata/e" +
      "ntity/AllAlarmData.proto\032?core/proto/web" +
      "service/statisticsdata/entity/OverspeedD" +
      "ata.proto\032?core/proto/webservice/statist" +
      "icsdata/entity/AreaInOutData.proto\032Ccore" +
      "/proto/webservice/statisticsdata/entity/" +
      "AreaOverspeedData.proto\032@core/proto/webs" +
      "ervice/statisticsdata/entity/RouteInOutD" +
      "ata.proto\032Dcore/proto/webservice/statist" +
      "icsdata/entity/RLineOverspeedData.proto\032",
      "Ccore/proto/webservice/statisticsdata/en" +
      "tity/RLineOvertimeData.proto\032Ecore/proto" +
      "/webservice/statisticsdata/entity/Overti" +
      "meParkingData.proto\032=core/proto/webservi" +
      "ce/statisticsdata/entity/FatigueData.pro" +
      "to\032?core/proto/webservice/statisticsdata" +
      "/entity/EmergencyData.proto\032Fcore/proto/" +
      "webservice/statisticsdata/entity/PowerSt" +
      "ayInLowerData.proto\032Fcore/proto/webservi" +
      "ce/statisticsdata/entity/ElectricPowerOf",
      "fData.proto\032?core/proto/webservice/stati" +
      "sticsdata/entity/ACCStatusData.proto\032>co" +
      "re/proto/webservice/statisticsdata/entit" +
      "y/MileagesData.proto\032Acore/proto/webserv" +
      "ice/statisticsdata/entity/DriverLoginDat" +
      "a.proto\032Dcore/proto/webservice/statistic" +
      "sdata/entity/TerOnOffStatusData.proto\032;c" +
      "ore/proto/webservice/statisticsdata/enti" +
      "ty/WFlowData.proto\"\261\005\n\014AllAlarmData\022\022\n\nt" +
      "erminalID\030\001 \002(\003\022%\n\roverspeedList\030\002 \003(\0132\016",
      ".OverspeedData\022%\n\rareaInOutList\030\003 \003(\0132\016." +
      "AreaInOutData\022+\n\017areaOverSpdList\030\004 \003(\0132\022" +
      ".AreaOverspeedData\022\'\n\016routeInOutList\030\005 \003" +
      "(\0132\017.RouteInOutData\022-\n\020rlineOverSpdList\030" +
      "\006 \003(\0132\023.RLineOverspeedData\022*\n\016rlineOverT" +
      "List\030\007 \003(\0132\022.RLineOvertimeData\022+\n\roverti" +
      "mePList\030\010 \003(\0132\024.OvertimeParkingData\022!\n\013f" +
      "atigueList\030\t \003(\0132\014.FatigueData\022%\n\remerge" +
      "ncyList\030\n \003(\0132\016.EmergencyData\022+\n\014powerSI" +
      "LList\030\013 \003(\0132\025.PowerStayInLowerData\022-\n\016el",
      "ectricPOList\030\014 \003(\0132\025.ElectricPowerOffDat" +
      "a\022\037\n\007accList\030\r \003(\0132\016.ACCStatusData\022\"\n\013mi" +
      "leageList\030\016 \003(\0132\r.MileagesData\022)\n\017driver" +
      "LoginList\030\017 \003(\0132\020.DriverLoginData\022,\n\017ter" +
      "minalStuList\030\020 \003(\0132\023.TerOnOffStatusData\022" +
      "\035\n\twflowList\030\021 \003(\0132\n.WFlowDataBa\nOcom.na" +
      "vinfo.opentsp.platform.location.protocol" +
      ".webservice.statisticsdata.entityB\016LCAll" +
      "AlarmData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AllAlarmData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AllAlarmData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AllAlarmData_descriptor,
              new String[] { "TerminalID", "OverspeedList", "AreaInOutList", "AreaOverSpdList", "RouteInOutList", "RlineOverSpdList", "RlineOverTList", "OvertimePList", "FatigueList", "EmergencyList", "PowerSILList", "ElectricPOList", "AccList", "MileageList", "DriverLoginList", "TerminalStuList", "WflowList", },
              AllAlarmData.class,
              AllAlarmData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          LCOverspeedData.getDescriptor(),
          LCAreaInOutData.getDescriptor(),
          LCAreaOverspeedData.getDescriptor(),
          LCRouteInOutData.getDescriptor(),
          LCRLineOverspeedData.getDescriptor(),
          LCRLineOvertimeData.getDescriptor(),
          LCOvertimeParkingData.getDescriptor(),
          LCFatigueData.getDescriptor(),
          LCEmergencyData.getDescriptor(),
          LCPowerStayInLowerData.getDescriptor(),
          LCElectricPowerOffData.getDescriptor(),
          LCACCStatusData.getDescriptor(),
          LCMileagesData.getDescriptor(),
          LCDriverLoginData.getDescriptor(),
          LCTerOnOffStatusData.getDescriptor(),
          LCWFlowData.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
