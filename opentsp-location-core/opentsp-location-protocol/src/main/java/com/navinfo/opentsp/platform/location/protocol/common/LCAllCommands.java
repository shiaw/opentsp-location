// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/common/java/AllCommands.proto

package com.navinfo.opentsp.platform.location.protocol.common;

public final class LCAllCommands {
  private LCAllCommands() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AllCommandsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class AllCommands extends
      com.google.protobuf.GeneratedMessage
      implements AllCommandsOrBuilder {
    // Use AllCommands.newBuilder() to construct.
    private AllCommands(Builder builder) {
      super(builder);
    }
    private AllCommands(boolean noInit) {}
    
    private static final AllCommands defaultInstance;
    public static AllCommands getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllCommands getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCAllCommands.internal_static_AllCommands_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCAllCommands.internal_static_AllCommands_fieldAccessorTable;
    }
    
    public enum Platform
        implements com.google.protobuf.ProtocolMessageEnum {
      DistrictInfoReport(0, 4097),
      DistrictInfoReportRes(1, 1),
      QueryDistrictMMNode(2, 3),
      QueryDistrictMMNodeRes(3, 4099),
      Heartbeat(4, 4249),
      ServerCommonRes(5, 4352),
      RequestLoginKey(6, 4353),
      RequestLoginKeyRes(7, 257),
      ServerAuth(8, 258),
      ServerAuthRes(9, 4354),
      ServerLogin(10, 259),
      ServerLoginRes(11, 4355),
      Reconnect(12, 261),
      Logout(13, 262),
      ServerStatusNotice(14, 263),
      ServerStatusNoticeRes(15, 4359),
      ServerExpiredNotice(16, 4360),
      MultiServerAuth(17, 265),
      MultiServerAuthRes(18, 4361),
      SubscribeRequest(19, 512),
      SubscribeRequestRes(20, 4608),
      DataSubscribe(21, 513),
      DataSubscribeRes(22, 4609),
      DataUnsubscribe(23, 514),
      BatchLocationQuery(24, 515),
      BatchLocationQueryRes(25, 4611),
      ;
      
      public static final int DistrictInfoReport_VALUE = 4097;
      public static final int DistrictInfoReportRes_VALUE = 1;
      public static final int QueryDistrictMMNode_VALUE = 3;
      public static final int QueryDistrictMMNodeRes_VALUE = 4099;
      public static final int Heartbeat_VALUE = 4249;
      public static final int ServerCommonRes_VALUE = 4352;
      public static final int RequestLoginKey_VALUE = 4353;
      public static final int RequestLoginKeyRes_VALUE = 257;
      public static final int ServerAuth_VALUE = 258;
      public static final int ServerAuthRes_VALUE = 4354;
      public static final int ServerLogin_VALUE = 259;
      public static final int ServerLoginRes_VALUE = 4355;
      public static final int Reconnect_VALUE = 261;
      public static final int Logout_VALUE = 262;
      public static final int ServerStatusNotice_VALUE = 263;
      public static final int ServerStatusNoticeRes_VALUE = 4359;
      public static final int ServerExpiredNotice_VALUE = 4360;
      public static final int MultiServerAuth_VALUE = 265;
      public static final int MultiServerAuthRes_VALUE = 4361;
      public static final int SubscribeRequest_VALUE = 512;
      public static final int SubscribeRequestRes_VALUE = 4608;
      public static final int DataSubscribe_VALUE = 513;
      public static final int DataSubscribeRes_VALUE = 4609;
      public static final int DataUnsubscribe_VALUE = 514;
      public static final int BatchLocationQuery_VALUE = 515;
      public static final int BatchLocationQueryRes_VALUE = 4611;
      
      
      public final int getNumber() { return value; }
      
      public static Platform valueOf(int value) {
        switch (value) {
          case 4097: return DistrictInfoReport;
          case 1: return DistrictInfoReportRes;
          case 3: return QueryDistrictMMNode;
          case 4099: return QueryDistrictMMNodeRes;
          case 4249: return Heartbeat;
          case 4352: return ServerCommonRes;
          case 4353: return RequestLoginKey;
          case 257: return RequestLoginKeyRes;
          case 258: return ServerAuth;
          case 4354: return ServerAuthRes;
          case 259: return ServerLogin;
          case 4355: return ServerLoginRes;
          case 261: return Reconnect;
          case 262: return Logout;
          case 263: return ServerStatusNotice;
          case 4359: return ServerStatusNoticeRes;
          case 4360: return ServerExpiredNotice;
          case 265: return MultiServerAuth;
          case 4361: return MultiServerAuthRes;
          case 512: return SubscribeRequest;
          case 4608: return SubscribeRequestRes;
          case 513: return DataSubscribe;
          case 4609: return DataSubscribeRes;
          case 514: return DataUnsubscribe;
          case 515: return BatchLocationQuery;
          case 4611: return BatchLocationQueryRes;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Platform>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Platform>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Platform>() {
              public Platform findValueByNumber(int number) {
                return Platform.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return AllCommands.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Platform[] VALUES = {
        DistrictInfoReport, DistrictInfoReportRes, QueryDistrictMMNode, QueryDistrictMMNodeRes, Heartbeat, ServerCommonRes, RequestLoginKey, RequestLoginKeyRes, ServerAuth, ServerAuthRes, ServerLogin, ServerLoginRes, Reconnect, Logout, ServerStatusNotice, ServerStatusNoticeRes, ServerExpiredNotice, MultiServerAuth, MultiServerAuthRes, SubscribeRequest, SubscribeRequestRes, DataSubscribe, DataSubscribeRes, DataUnsubscribe, BatchLocationQuery, BatchLocationQueryRes, 
      };
      
      public static Platform valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Platform(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AllCommands.Platform)
    }
    
    public enum NodeCluster
        implements com.google.protobuf.ProtocolMessageEnum {
      BroadcastNodeInfo(0, 1537),
      ReportServerIdentify(1, 1538),
      HeartBeatToMM(2, 5635),
      LinkStatusSwitchNotice(3, 5638),
      NodeStatusReport(4, 5640),
      DPNodeTerminalInfo(5, 5746),
      ReportErrorNode(6, 5641),
      BroadcastErrorNode(7, 1545),
      RequestNewNode(8, 5648),
      AssignNewNode(9, 1552),
      ConfigForNode(10, 1553),
      ConfigForTA(11, 1616),
      ConfigForDP(12, 1648),
      ConfigForRP(13, 1680),
      ConfigForDA(14, 1808),
      ConfigForDSA(15, 5985),
      ConfigForEncrypt(16, 5984),
      ConfigForRPStatisticQuery(17, 1681),
      GetNodeInfo(18, 1840),
      GetNodeInfoRes(19, 5936),
      AddNodeInfoNotice(20, 5937),
      GetNodeInfoByType(21, 1842),
      GetNodeInfoByTypeRes(22, 5938),
      CollectionCheck(23, 1843),
      DataTransfer(24, 1844),
      DataTransferCompletionNotice(25, 5941),
      DataStatistic(26, 1846),
      DataStatisticCompletionNotice(27, 5943),
      ;
      
      public static final int BroadcastNodeInfo_VALUE = 1537;
      public static final int ReportServerIdentify_VALUE = 1538;
      public static final int HeartBeatToMM_VALUE = 5635;
      public static final int LinkStatusSwitchNotice_VALUE = 5638;
      public static final int NodeStatusReport_VALUE = 5640;
      public static final int DPNodeTerminalInfo_VALUE = 5746;
      public static final int ReportErrorNode_VALUE = 5641;
      public static final int BroadcastErrorNode_VALUE = 1545;
      public static final int RequestNewNode_VALUE = 5648;
      public static final int AssignNewNode_VALUE = 1552;
      public static final int ConfigForNode_VALUE = 1553;
      public static final int ConfigForTA_VALUE = 1616;
      public static final int ConfigForDP_VALUE = 1648;
      public static final int ConfigForRP_VALUE = 1680;
      public static final int ConfigForDA_VALUE = 1808;
      public static final int ConfigForDSA_VALUE = 5985;
      public static final int ConfigForEncrypt_VALUE = 5984;
      public static final int ConfigForRPStatisticQuery_VALUE = 1681;
      public static final int GetNodeInfo_VALUE = 1840;
      public static final int GetNodeInfoRes_VALUE = 5936;
      public static final int AddNodeInfoNotice_VALUE = 5937;
      public static final int GetNodeInfoByType_VALUE = 1842;
      public static final int GetNodeInfoByTypeRes_VALUE = 5938;
      public static final int CollectionCheck_VALUE = 1843;
      public static final int DataTransfer_VALUE = 1844;
      public static final int DataTransferCompletionNotice_VALUE = 5941;
      public static final int DataStatistic_VALUE = 1846;
      public static final int DataStatisticCompletionNotice_VALUE = 5943;
      
      
      public final int getNumber() { return value; }
      
      public static NodeCluster valueOf(int value) {
        switch (value) {
          case 1537: return BroadcastNodeInfo;
          case 1538: return ReportServerIdentify;
          case 5635: return HeartBeatToMM;
          case 5638: return LinkStatusSwitchNotice;
          case 5640: return NodeStatusReport;
          case 5746: return DPNodeTerminalInfo;
          case 5641: return ReportErrorNode;
          case 1545: return BroadcastErrorNode;
          case 5648: return RequestNewNode;
          case 1552: return AssignNewNode;
          case 1553: return ConfigForNode;
          case 1616: return ConfigForTA;
          case 1648: return ConfigForDP;
          case 1680: return ConfigForRP;
          case 1808: return ConfigForDA;
          case 5985: return ConfigForDSA;
          case 5984: return ConfigForEncrypt;
          case 1681: return ConfigForRPStatisticQuery;
          case 1840: return GetNodeInfo;
          case 5936: return GetNodeInfoRes;
          case 5937: return AddNodeInfoNotice;
          case 1842: return GetNodeInfoByType;
          case 5938: return GetNodeInfoByTypeRes;
          case 1843: return CollectionCheck;
          case 1844: return DataTransfer;
          case 5941: return DataTransferCompletionNotice;
          case 1846: return DataStatistic;
          case 5943: return DataStatisticCompletionNotice;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<NodeCluster>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NodeCluster>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeCluster>() {
              public NodeCluster findValueByNumber(int number) {
                return NodeCluster.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return AllCommands.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final NodeCluster[] VALUES = {
        BroadcastNodeInfo, ReportServerIdentify, HeartBeatToMM, LinkStatusSwitchNotice, NodeStatusReport, DPNodeTerminalInfo, ReportErrorNode, BroadcastErrorNode, RequestNewNode, AssignNewNode, ConfigForNode, ConfigForTA, ConfigForDP, ConfigForRP, ConfigForDA, ConfigForDSA, ConfigForEncrypt, ConfigForRPStatisticQuery, GetNodeInfo, GetNodeInfoRes, AddNodeInfoNotice, GetNodeInfoByType, GetNodeInfoByTypeRes, CollectionCheck, DataTransfer, DataTransferCompletionNotice, DataStatistic, DataStatisticCompletionNotice, 
      };
      
      public static NodeCluster valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private NodeCluster(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AllCommands.NodeCluster)
    }
    
    public enum DataAccess
        implements com.google.protobuf.ProtocolMessageEnum {
      GetTerminalInfos(0, 2304),
      GetTerminalInfosRes(1, 6400),
      UpdateTerminalInfo(2, 2305),
      TerminalInfoSynchronous(3, 2306),
      TerminalRegisterSave(4, 2307),
      QueryTerminalRegister(5, 2308),
      QueryTerminalRegisterRes(6, 6404),
      GetDictData(7, 2320),
      GetDictDataRes(8, 6416),
      QueryAreaInfo(9, 2352),
      QueryAreaInfoRes(10, 6448),
      DeleteAreaInfo(11, 2353),
      QueryRegularData(12, 2354),
      QueryRegularDataRes(13, 6450),
      RegularDataSave(14, 2355),
      ParameterSave(15, 2356),
      DeleteRegularData(16, 2357),
      TerminalOnlineSwitchInfoSave(17, 2436),
      FlowInfoSave(18, 2437),
      DriverInfoReportSave(19, 2438),
      DataEncrypt(20, 2368),
      DataEncryptRes(21, 6464),
      ServerLogSave(22, 2400),
      TerminalOperateLogSave(23, 2401),
      TerminalOperateLogUpdate(24, 2402),
      MessageBroadcastSave(25, 2403),
      OutRegionToLimitSpeedSave(26, 2404),
      TaskInfoSave(27, 2448),
      TaskInfoQuery(28, 2449),
      TaskInfoQueryRes(29, 6545),
      DataSave(30, 2416),
      DataQuery(31, 2417),
      DataQueryRes(32, 6513),
      LocationDataSave(33, 2432),
      MultimediaDataSave(34, 2433),
      PassThrough(35, 2434),
      DrivingRecorder(36, 2435),
      DataQueryKeyOverdue(37, 6546),
      DataOverdueBroadcast(38, 2451),
      QueryTerminalProtocolMapping(39, 2384),
      TerminalProtocolMappingRes(40, 6480),
      TerminalStatisticStatus(41, 2452),
      AlarmCancelOrNot(42, 2453),
      QueryAlarmCancelOrNot(43, 2454),
      ;
      
      public static final int GetTerminalInfos_VALUE = 2304;
      public static final int GetTerminalInfosRes_VALUE = 6400;
      public static final int UpdateTerminalInfo_VALUE = 2305;
      public static final int TerminalInfoSynchronous_VALUE = 2306;
      public static final int TerminalRegisterSave_VALUE = 2307;
      public static final int QueryTerminalRegister_VALUE = 2308;
      public static final int QueryTerminalRegisterRes_VALUE = 6404;
      public static final int GetDictData_VALUE = 2320;
      public static final int GetDictDataRes_VALUE = 6416;
      public static final int QueryAreaInfo_VALUE = 2352;
      public static final int QueryAreaInfoRes_VALUE = 6448;
      public static final int DeleteAreaInfo_VALUE = 2353;
      public static final int QueryRegularData_VALUE = 2354;
      public static final int QueryRegularDataRes_VALUE = 6450;
      public static final int RegularDataSave_VALUE = 2355;
      public static final int ParameterSave_VALUE = 2356;
      public static final int DeleteRegularData_VALUE = 2357;
      public static final int TerminalOnlineSwitchInfoSave_VALUE = 2436;
      public static final int FlowInfoSave_VALUE = 2437;
      public static final int DriverInfoReportSave_VALUE = 2438;
      public static final int DataEncrypt_VALUE = 2368;
      public static final int DataEncryptRes_VALUE = 6464;
      public static final int ServerLogSave_VALUE = 2400;
      public static final int TerminalOperateLogSave_VALUE = 2401;
      public static final int TerminalOperateLogUpdate_VALUE = 2402;
      public static final int MessageBroadcastSave_VALUE = 2403;
      public static final int OutRegionToLimitSpeedSave_VALUE = 2404;
      public static final int TaskInfoSave_VALUE = 2448;
      public static final int TaskInfoQuery_VALUE = 2449;
      public static final int TaskInfoQueryRes_VALUE = 6545;
      public static final int DataSave_VALUE = 2416;
      public static final int DataQuery_VALUE = 2417;
      public static final int DataQueryRes_VALUE = 6513;
      public static final int LocationDataSave_VALUE = 2432;
      public static final int MultimediaDataSave_VALUE = 2433;
      public static final int PassThrough_VALUE = 2434;
      public static final int DrivingRecorder_VALUE = 2435;
      public static final int DataQueryKeyOverdue_VALUE = 6546;
      public static final int DataOverdueBroadcast_VALUE = 2451;
      public static final int QueryTerminalProtocolMapping_VALUE = 2384;
      public static final int TerminalProtocolMappingRes_VALUE = 6480;
      public static final int TerminalStatisticStatus_VALUE = 2452;
      public static final int AlarmCancelOrNot_VALUE = 2453;
      public static final int QueryAlarmCancelOrNot_VALUE = 2454;
      
      
      public final int getNumber() { return value; }
      
      public static DataAccess valueOf(int value) {
        switch (value) {
          case 2304: return GetTerminalInfos;
          case 6400: return GetTerminalInfosRes;
          case 2305: return UpdateTerminalInfo;
          case 2306: return TerminalInfoSynchronous;
          case 2307: return TerminalRegisterSave;
          case 2308: return QueryTerminalRegister;
          case 6404: return QueryTerminalRegisterRes;
          case 2320: return GetDictData;
          case 6416: return GetDictDataRes;
          case 2352: return QueryAreaInfo;
          case 6448: return QueryAreaInfoRes;
          case 2353: return DeleteAreaInfo;
          case 2354: return QueryRegularData;
          case 6450: return QueryRegularDataRes;
          case 2355: return RegularDataSave;
          case 2356: return ParameterSave;
          case 2357: return DeleteRegularData;
          case 2436: return TerminalOnlineSwitchInfoSave;
          case 2437: return FlowInfoSave;
          case 2438: return DriverInfoReportSave;
          case 2368: return DataEncrypt;
          case 6464: return DataEncryptRes;
          case 2400: return ServerLogSave;
          case 2401: return TerminalOperateLogSave;
          case 2402: return TerminalOperateLogUpdate;
          case 2403: return MessageBroadcastSave;
          case 2404: return OutRegionToLimitSpeedSave;
          case 2448: return TaskInfoSave;
          case 2449: return TaskInfoQuery;
          case 6545: return TaskInfoQueryRes;
          case 2416: return DataSave;
          case 2417: return DataQuery;
          case 6513: return DataQueryRes;
          case 2432: return LocationDataSave;
          case 2433: return MultimediaDataSave;
          case 2434: return PassThrough;
          case 2435: return DrivingRecorder;
          case 6546: return DataQueryKeyOverdue;
          case 2451: return DataOverdueBroadcast;
          case 2384: return QueryTerminalProtocolMapping;
          case 6480: return TerminalProtocolMappingRes;
          case 2452: return TerminalStatisticStatus;
          case 2453: return AlarmCancelOrNot;
          case 2454: return QueryAlarmCancelOrNot;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<DataAccess>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DataAccess>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataAccess>() {
              public DataAccess findValueByNumber(int number) {
                return DataAccess.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return AllCommands.getDescriptor().getEnumTypes().get(2);
      }
      
      private static final DataAccess[] VALUES = {
        GetTerminalInfos, GetTerminalInfosRes, UpdateTerminalInfo, TerminalInfoSynchronous, TerminalRegisterSave, QueryTerminalRegister, QueryTerminalRegisterRes, GetDictData, GetDictDataRes, QueryAreaInfo, QueryAreaInfoRes, DeleteAreaInfo, QueryRegularData, QueryRegularDataRes, RegularDataSave, ParameterSave, DeleteRegularData, TerminalOnlineSwitchInfoSave, FlowInfoSave, DriverInfoReportSave, DataEncrypt, DataEncryptRes, ServerLogSave, TerminalOperateLogSave, TerminalOperateLogUpdate, MessageBroadcastSave, OutRegionToLimitSpeedSave, TaskInfoSave, TaskInfoQuery, TaskInfoQueryRes, DataSave, DataQuery, DataQueryRes, LocationDataSave, MultimediaDataSave, PassThrough, DrivingRecorder, DataQueryKeyOverdue, DataOverdueBroadcast, QueryTerminalProtocolMapping, TerminalProtocolMappingRes, TerminalStatisticStatus, AlarmCancelOrNot, QueryAlarmCancelOrNot, 
      };
      
      public static DataAccess valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private DataAccess(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AllCommands.DataAccess)
    }
    
    public enum Terminal
        implements com.google.protobuf.ProtocolMessageEnum {
      DownCommonRes(0, 12289),
      UpCommonRes(1, 8193),
      ReportLocationData(2, 12290),
      TerminalRegister(3, 12291),
      TerminalRegisterRes(4, 8195),
      TerminalAuth(5, 12292),
      TerminalLogout(6, 12293),
      DriverInfoReport(7, 12294),
      TerminalOnlineSwitch(8, 12295),
      ShortLocationDataReport(9, 12296),
      WaybillReport(10, 12297),
      ReportDriverReq(11, 8208),
      BatchLocationDataUpload(12, 12305),
      CANBUSDataUpload(13, 12306),
      CallName(14, 8272),
      CallNameRes(15, 12368),
      TRVersionCollect(16, 8277),
      TRVersionRes(17, 12373),
      TRSpeedCollect(18, 8278),
      TRSpeedCollectionRes(19, 12374),
      TRDoubtCollect(20, 8279),
      TRDoubtCollectionRes(21, 12375),
      TRPulseCollection(22, 8280),
      TRPulseCollectionRes(23, 12376),
      TRSetPulseValue(24, 8281),
      DownPassThrough(25, 8497),
      UpPassThrough(26, 12593),
      DataCompression(27, 12594),
      PlatformRSAKey(28, 8499),
      TerminalRSAKey(29, 12595),
      QueryTerminalProperty(30, 8500),
      QueryTerminalPropertyRes(31, 12596),
      TRCollectDriverInfo(32, 8288),
      TRCollectDriverInfoRes(33, 12384),
      TRCollectRealTime(34, 8289),
      TRCollectRealTimeRes(35, 12385),
      TRCollectMileage(36, 8290),
      TRCollectMileageRes(37, 12386),
      TRCollectVehicleInfo(38, 8291),
      TRCollectVehicleInfoRes(39, 12387),
      TRCollectStatusSignal(40, 8292),
      TRCollectStatusSignalRes(41, 12388),
      TRCollectOnlyCode(42, 8293),
      TRCollectOnlyCodeRes(43, 12389),
      TRCollectLocationData(44, 8294),
      TRCollectLocationDataRes(45, 12390),
      TRCollectOvertimeRecord(46, 8295),
      TRCollectOvertimeRecordRes(47, 12391),
      TRCollectDriverIdentity(48, 8296),
      TRCollectDriverIdentityRes(49, 12392),
      TRCollectPowerRecord(50, 8297),
      TRCollectPowerRecordRes(51, 12393),
      TRCollectParaModifyRecord(52, 8304),
      TRCollectParaModifyRecordRes(53, 12400),
      TRCollectSpeedLog(54, 8305),
      TRCollectSpeedLogRes(55, 12401),
      TRSetVehicleInfo(56, 8306),
      TRSetInstallDate(57, 8307),
      TRSetStatusSignal(58, 8308),
      TRSetCurrentDate(59, 8309),
      TRSetMileage(60, 8310),
      DispatchMessage(61, 8529),
      CallListener(62, 8530),
      TakePhotography(63, 8531),
      TakePhotographyRes(64, 12627),
      MultimediaUpload(65, 12628),
      OilCircuitControl(66, 8534),
      VehicleControl(67, 8535),
      EventSetting(68, 8536),
      EventReport(69, 12633),
      AskQuestion(70, 8544),
      AnswerQuestion(71, 12640),
      InfoDemandMenu(72, 8545),
      InfoDemandOrCancel(73, 12642),
      InfoService(74, 8547),
      MediaEventInfoUpLoad(75, 12644),
      MediaDataQuery(76, 8549),
      MediaDataQueryRes(77, 12645),
      SaveMultimediaSingleUpload(78, 8550),
      SaveMultimediaUpload(79, 8551),
      RecordStartCommand(80, 8552),
      ConfirmAlarmMessage(81, 8553),
      TerminalStatusControl(82, 8560),
      DrivingBehaviorSetting(83, 8816),
      AntiTamperBoxSetting(84, 8817),
      AntiTamperBoxShieldAlarmSetting(85, 8818),
      CANDataReportSetting(86, 8819),
      CANBUSDataQuery(87, 8501),
      CANBUSDataReport(88, 12307),
      MessageTimeoutProcess(89, 8785),
      ConnectServerConfig(90, 8786),
      ReportTacticsAndInterval(91, 8787),
      PrivilegeNumbers(92, 8788),
      AlarmTriggeredSetting(93, 8789),
      SpeedingAlarmSetting(94, 8790),
      SpeedingAlarmCancel(95, 8791),
      FatigueDrivingSetting(96, 8792),
      FatigueDrivingCancel(97, 8793),
      MultiMediaParameter(98, 8800),
      VehicleInfoSetting(99, 8801),
      RoadTransportPermit(100, 8802),
      CollisionAlarm(101, 8803),
      RolloverAlarm(102, 8804),
      TakePictureControl(103, 8805),
      GnssSetting(104, 8806),
      CanBusSetting(105, 8807),
      ParameterQuery(106, 8962),
      ParameterQueryRes(107, 13058),
      ParameterQueryText(108, 8963),
      ParameterQueryTextRes(109, 13059),
      PhoneBookSetting(110, 8964),
      SetCircleAreaAlarm(111, 8965),
      DeleteCircleAreaAlarm(112, 8966),
      SetRectangleAreaAlarm(113, 8967),
      DeleteRectangleAreaAlarm(114, 8968),
      SetPolygonAreaAlarm(115, 8969),
      DeletePolygonAreaAlarm(116, 8976),
      SetRouteAlarm(117, 8977),
      DeleteRouteAlarm(118, 8978),
      TemporaryLocationControl(119, 8979),
      DrivingBanSetting(120, 8980),
      DrivingBanSettingCancel(121, 8981),
      OvertimeParking(122, 8808),
      OvertimeParkingCancel(123, 8809),
      QueryAppointPara(124, 8982),
      TerminalShutdown(125, 9216),
      TerminalReset(126, 9217),
      TerminalRestoreFactory(127, 9218),
      TerminalCloseGPRS(128, 9219),
      TerminalCloseAllWireless(129, 9220),
      WirelessUpdate(130, 9221),
      ConnectToServer(131, 9222),
      TerminalUpgradePackage(132, 9223),
      TerminalUpgradePackageRes(133, 13320),
      MessageBroadcastInArea(134, 9472),
      MessageBroadcastInAreaDel(135, 9473),
      OvertimeParkingInArea(136, 9474),
      OvertimeParkingInAreaDel(137, 9475),
      OutRegionToLimitSpeed(138, 8983),
      OutRegionToLimitSpeedDel(139, 8984),
      TerminalStatusControlRes(140, 12656),
      TerminalStatusChangeNotify(141, 12912),
      CANBUSDataQueryRes(142, 12597),
      TerminalBroadcastSwitch(143, 9504),
      BroadcastInfoNotice(144, 9505),
      ServerStationComment(145, 9506),
      DelayOvertimeParkingInArea(146, 9509),
      VehiclePassInArea(147, 9477),
      VehiclePassInAreaDel(148, 9478),
      InAreaTriggerActivationOrLockNotify(149, 8985),
      InAreaTriggerActivationOrLockNotifyDel(150, 8992),
      ActivationOrLockNotify(151, 13089),
      InAreaRetentionNotifySet(152, 8994),
      InAreaRetentionNotifySetDel(153, 8995),
      InAreaRetentionNotify(154, 13092),
      OvertimeParkingInAreaNotify(155, 13606),
      InOrOutAreaNotify(156, 13608),
      VehicleControlRes(157, 1280),
      ;
      
      public static final int DownCommonRes_VALUE = 12289;
      public static final int UpCommonRes_VALUE = 8193;
      public static final int ReportLocationData_VALUE = 12290;
      public static final int TerminalRegister_VALUE = 12291;
      public static final int TerminalRegisterRes_VALUE = 8195;
      public static final int TerminalAuth_VALUE = 12292;
      public static final int TerminalLogout_VALUE = 12293;
      public static final int DriverInfoReport_VALUE = 12294;
      public static final int TerminalOnlineSwitch_VALUE = 12295;
      public static final int ShortLocationDataReport_VALUE = 12296;
      public static final int WaybillReport_VALUE = 12297;
      public static final int ReportDriverReq_VALUE = 8208;
      public static final int BatchLocationDataUpload_VALUE = 12305;
      public static final int CANBUSDataUpload_VALUE = 12306;
      public static final int CallName_VALUE = 8272;
      public static final int CallNameRes_VALUE = 12368;
      public static final int TRVersionCollect_VALUE = 8277;
      public static final int TRVersionRes_VALUE = 12373;
      public static final int TRSpeedCollect_VALUE = 8278;
      public static final int TRSpeedCollectionRes_VALUE = 12374;
      public static final int TRDoubtCollect_VALUE = 8279;
      public static final int TRDoubtCollectionRes_VALUE = 12375;
      public static final int TRPulseCollection_VALUE = 8280;
      public static final int TRPulseCollectionRes_VALUE = 12376;
      public static final int TRSetPulseValue_VALUE = 8281;
      public static final int DownPassThrough_VALUE = 8497;
      public static final int UpPassThrough_VALUE = 12593;
      public static final int DataCompression_VALUE = 12594;
      public static final int PlatformRSAKey_VALUE = 8499;
      public static final int TerminalRSAKey_VALUE = 12595;
      public static final int QueryTerminalProperty_VALUE = 8500;
      public static final int QueryTerminalPropertyRes_VALUE = 12596;
      public static final int TRCollectDriverInfo_VALUE = 8288;
      public static final int TRCollectDriverInfoRes_VALUE = 12384;
      public static final int TRCollectRealTime_VALUE = 8289;
      public static final int TRCollectRealTimeRes_VALUE = 12385;
      public static final int TRCollectMileage_VALUE = 8290;
      public static final int TRCollectMileageRes_VALUE = 12386;
      public static final int TRCollectVehicleInfo_VALUE = 8291;
      public static final int TRCollectVehicleInfoRes_VALUE = 12387;
      public static final int TRCollectStatusSignal_VALUE = 8292;
      public static final int TRCollectStatusSignalRes_VALUE = 12388;
      public static final int TRCollectOnlyCode_VALUE = 8293;
      public static final int TRCollectOnlyCodeRes_VALUE = 12389;
      public static final int TRCollectLocationData_VALUE = 8294;
      public static final int TRCollectLocationDataRes_VALUE = 12390;
      public static final int TRCollectOvertimeRecord_VALUE = 8295;
      public static final int TRCollectOvertimeRecordRes_VALUE = 12391;
      public static final int TRCollectDriverIdentity_VALUE = 8296;
      public static final int TRCollectDriverIdentityRes_VALUE = 12392;
      public static final int TRCollectPowerRecord_VALUE = 8297;
      public static final int TRCollectPowerRecordRes_VALUE = 12393;
      public static final int TRCollectParaModifyRecord_VALUE = 8304;
      public static final int TRCollectParaModifyRecordRes_VALUE = 12400;
      public static final int TRCollectSpeedLog_VALUE = 8305;
      public static final int TRCollectSpeedLogRes_VALUE = 12401;
      public static final int TRSetVehicleInfo_VALUE = 8306;
      public static final int TRSetInstallDate_VALUE = 8307;
      public static final int TRSetStatusSignal_VALUE = 8308;
      public static final int TRSetCurrentDate_VALUE = 8309;
      public static final int TRSetMileage_VALUE = 8310;
      public static final int DispatchMessage_VALUE = 8529;
      public static final int CallListener_VALUE = 8530;
      public static final int TakePhotography_VALUE = 8531;
      public static final int TakePhotographyRes_VALUE = 12627;
      public static final int MultimediaUpload_VALUE = 12628;
      public static final int OilCircuitControl_VALUE = 8534;
      public static final int VehicleControl_VALUE = 8535;
      public static final int EventSetting_VALUE = 8536;
      public static final int EventReport_VALUE = 12633;
      public static final int AskQuestion_VALUE = 8544;
      public static final int AnswerQuestion_VALUE = 12640;
      public static final int InfoDemandMenu_VALUE = 8545;
      public static final int InfoDemandOrCancel_VALUE = 12642;
      public static final int InfoService_VALUE = 8547;
      public static final int MediaEventInfoUpLoad_VALUE = 12644;
      public static final int MediaDataQuery_VALUE = 8549;
      public static final int MediaDataQueryRes_VALUE = 12645;
      public static final int SaveMultimediaSingleUpload_VALUE = 8550;
      public static final int SaveMultimediaUpload_VALUE = 8551;
      public static final int RecordStartCommand_VALUE = 8552;
      public static final int ConfirmAlarmMessage_VALUE = 8553;
      public static final int TerminalStatusControl_VALUE = 8560;
      public static final int DrivingBehaviorSetting_VALUE = 8816;
      public static final int AntiTamperBoxSetting_VALUE = 8817;
      public static final int AntiTamperBoxShieldAlarmSetting_VALUE = 8818;
      public static final int CANDataReportSetting_VALUE = 8819;
      public static final int CANBUSDataQuery_VALUE = 8501;
      public static final int CANBUSDataReport_VALUE = 12307;
      public static final int MessageTimeoutProcess_VALUE = 8785;
      public static final int ConnectServerConfig_VALUE = 8786;
      public static final int ReportTacticsAndInterval_VALUE = 8787;
      public static final int PrivilegeNumbers_VALUE = 8788;
      public static final int AlarmTriggeredSetting_VALUE = 8789;
      public static final int SpeedingAlarmSetting_VALUE = 8790;
      public static final int SpeedingAlarmCancel_VALUE = 8791;
      public static final int FatigueDrivingSetting_VALUE = 8792;
      public static final int FatigueDrivingCancel_VALUE = 8793;
      public static final int MultiMediaParameter_VALUE = 8800;
      public static final int VehicleInfoSetting_VALUE = 8801;
      public static final int RoadTransportPermit_VALUE = 8802;
      public static final int CollisionAlarm_VALUE = 8803;
      public static final int RolloverAlarm_VALUE = 8804;
      public static final int TakePictureControl_VALUE = 8805;
      public static final int GnssSetting_VALUE = 8806;
      public static final int CanBusSetting_VALUE = 8807;
      public static final int ParameterQuery_VALUE = 8962;
      public static final int ParameterQueryRes_VALUE = 13058;
      public static final int ParameterQueryText_VALUE = 8963;
      public static final int ParameterQueryTextRes_VALUE = 13059;
      public static final int PhoneBookSetting_VALUE = 8964;
      public static final int SetCircleAreaAlarm_VALUE = 8965;
      public static final int DeleteCircleAreaAlarm_VALUE = 8966;
      public static final int SetRectangleAreaAlarm_VALUE = 8967;
      public static final int DeleteRectangleAreaAlarm_VALUE = 8968;
      public static final int SetPolygonAreaAlarm_VALUE = 8969;
      public static final int DeletePolygonAreaAlarm_VALUE = 8976;
      public static final int SetRouteAlarm_VALUE = 8977;
      public static final int DeleteRouteAlarm_VALUE = 8978;
      public static final int TemporaryLocationControl_VALUE = 8979;
      public static final int DrivingBanSetting_VALUE = 8980;
      public static final int DrivingBanSettingCancel_VALUE = 8981;
      public static final int OvertimeParking_VALUE = 8808;
      public static final int OvertimeParkingCancel_VALUE = 8809;
      public static final int QueryAppointPara_VALUE = 8982;
      public static final int TerminalShutdown_VALUE = 9216;
      public static final int TerminalReset_VALUE = 9217;
      public static final int TerminalRestoreFactory_VALUE = 9218;
      public static final int TerminalCloseGPRS_VALUE = 9219;
      public static final int TerminalCloseAllWireless_VALUE = 9220;
      public static final int WirelessUpdate_VALUE = 9221;
      public static final int ConnectToServer_VALUE = 9222;
      public static final int TerminalUpgradePackage_VALUE = 9223;
      public static final int TerminalUpgradePackageRes_VALUE = 13320;
      public static final int MessageBroadcastInArea_VALUE = 9472;
      public static final int MessageBroadcastInAreaDel_VALUE = 9473;
      public static final int OvertimeParkingInArea_VALUE = 9474;
      public static final int OvertimeParkingInAreaDel_VALUE = 9475;
      public static final int OutRegionToLimitSpeed_VALUE = 8983;
      public static final int OutRegionToLimitSpeedDel_VALUE = 8984;
      public static final int TerminalStatusControlRes_VALUE = 12656;
      public static final int TerminalStatusChangeNotify_VALUE = 12912;
      public static final int CANBUSDataQueryRes_VALUE = 12597;
      public static final int TerminalBroadcastSwitch_VALUE = 9504;
      public static final int BroadcastInfoNotice_VALUE = 9505;
      public static final int ServerStationComment_VALUE = 9506;
      public static final int DelayOvertimeParkingInArea_VALUE = 9509;
      public static final int VehiclePassInArea_VALUE = 9477;
      public static final int VehiclePassInAreaDel_VALUE = 9478;
      public static final int InAreaTriggerActivationOrLockNotify_VALUE = 8985;
      public static final int InAreaTriggerActivationOrLockNotifyDel_VALUE = 8992;
      public static final int ActivationOrLockNotify_VALUE = 13089;
      public static final int InAreaRetentionNotifySet_VALUE = 8994;
      public static final int InAreaRetentionNotifySetDel_VALUE = 8995;
      public static final int InAreaRetentionNotify_VALUE = 13092;
      public static final int OvertimeParkingInAreaNotify_VALUE = 13606;
      public static final int InOrOutAreaNotify_VALUE = 13608;
      public static final int VehicleControlRes_VALUE = 1280;
      
      
      public final int getNumber() { return value; }
      
      public static Terminal valueOf(int value) {
        switch (value) {
          case 12289: return DownCommonRes;
          case 8193: return UpCommonRes;
          case 12290: return ReportLocationData;
          case 12291: return TerminalRegister;
          case 8195: return TerminalRegisterRes;
          case 12292: return TerminalAuth;
          case 12293: return TerminalLogout;
          case 12294: return DriverInfoReport;
          case 12295: return TerminalOnlineSwitch;
          case 12296: return ShortLocationDataReport;
          case 12297: return WaybillReport;
          case 8208: return ReportDriverReq;
          case 12305: return BatchLocationDataUpload;
          case 12306: return CANBUSDataUpload;
          case 8272: return CallName;
          case 12368: return CallNameRes;
          case 8277: return TRVersionCollect;
          case 12373: return TRVersionRes;
          case 8278: return TRSpeedCollect;
          case 12374: return TRSpeedCollectionRes;
          case 8279: return TRDoubtCollect;
          case 12375: return TRDoubtCollectionRes;
          case 8280: return TRPulseCollection;
          case 12376: return TRPulseCollectionRes;
          case 8281: return TRSetPulseValue;
          case 8497: return DownPassThrough;
          case 12593: return UpPassThrough;
          case 12594: return DataCompression;
          case 8499: return PlatformRSAKey;
          case 12595: return TerminalRSAKey;
          case 8500: return QueryTerminalProperty;
          case 12596: return QueryTerminalPropertyRes;
          case 8288: return TRCollectDriverInfo;
          case 12384: return TRCollectDriverInfoRes;
          case 8289: return TRCollectRealTime;
          case 12385: return TRCollectRealTimeRes;
          case 8290: return TRCollectMileage;
          case 12386: return TRCollectMileageRes;
          case 8291: return TRCollectVehicleInfo;
          case 12387: return TRCollectVehicleInfoRes;
          case 8292: return TRCollectStatusSignal;
          case 12388: return TRCollectStatusSignalRes;
          case 8293: return TRCollectOnlyCode;
          case 12389: return TRCollectOnlyCodeRes;
          case 8294: return TRCollectLocationData;
          case 12390: return TRCollectLocationDataRes;
          case 8295: return TRCollectOvertimeRecord;
          case 12391: return TRCollectOvertimeRecordRes;
          case 8296: return TRCollectDriverIdentity;
          case 12392: return TRCollectDriverIdentityRes;
          case 8297: return TRCollectPowerRecord;
          case 12393: return TRCollectPowerRecordRes;
          case 8304: return TRCollectParaModifyRecord;
          case 12400: return TRCollectParaModifyRecordRes;
          case 8305: return TRCollectSpeedLog;
          case 12401: return TRCollectSpeedLogRes;
          case 8306: return TRSetVehicleInfo;
          case 8307: return TRSetInstallDate;
          case 8308: return TRSetStatusSignal;
          case 8309: return TRSetCurrentDate;
          case 8310: return TRSetMileage;
          case 8529: return DispatchMessage;
          case 8530: return CallListener;
          case 8531: return TakePhotography;
          case 12627: return TakePhotographyRes;
          case 12628: return MultimediaUpload;
          case 8534: return OilCircuitControl;
          case 8535: return VehicleControl;
          case 8536: return EventSetting;
          case 12633: return EventReport;
          case 8544: return AskQuestion;
          case 12640: return AnswerQuestion;
          case 8545: return InfoDemandMenu;
          case 12642: return InfoDemandOrCancel;
          case 8547: return InfoService;
          case 12644: return MediaEventInfoUpLoad;
          case 8549: return MediaDataQuery;
          case 12645: return MediaDataQueryRes;
          case 8550: return SaveMultimediaSingleUpload;
          case 8551: return SaveMultimediaUpload;
          case 8552: return RecordStartCommand;
          case 8553: return ConfirmAlarmMessage;
          case 8560: return TerminalStatusControl;
          case 8816: return DrivingBehaviorSetting;
          case 8817: return AntiTamperBoxSetting;
          case 8818: return AntiTamperBoxShieldAlarmSetting;
          case 8819: return CANDataReportSetting;
          case 8501: return CANBUSDataQuery;
          case 12307: return CANBUSDataReport;
          case 8785: return MessageTimeoutProcess;
          case 8786: return ConnectServerConfig;
          case 8787: return ReportTacticsAndInterval;
          case 8788: return PrivilegeNumbers;
          case 8789: return AlarmTriggeredSetting;
          case 8790: return SpeedingAlarmSetting;
          case 8791: return SpeedingAlarmCancel;
          case 8792: return FatigueDrivingSetting;
          case 8793: return FatigueDrivingCancel;
          case 8800: return MultiMediaParameter;
          case 8801: return VehicleInfoSetting;
          case 8802: return RoadTransportPermit;
          case 8803: return CollisionAlarm;
          case 8804: return RolloverAlarm;
          case 8805: return TakePictureControl;
          case 8806: return GnssSetting;
          case 8807: return CanBusSetting;
          case 8962: return ParameterQuery;
          case 13058: return ParameterQueryRes;
          case 8963: return ParameterQueryText;
          case 13059: return ParameterQueryTextRes;
          case 8964: return PhoneBookSetting;
          case 8965: return SetCircleAreaAlarm;
          case 8966: return DeleteCircleAreaAlarm;
          case 8967: return SetRectangleAreaAlarm;
          case 8968: return DeleteRectangleAreaAlarm;
          case 8969: return SetPolygonAreaAlarm;
          case 8976: return DeletePolygonAreaAlarm;
          case 8977: return SetRouteAlarm;
          case 8978: return DeleteRouteAlarm;
          case 8979: return TemporaryLocationControl;
          case 8980: return DrivingBanSetting;
          case 8981: return DrivingBanSettingCancel;
          case 8808: return OvertimeParking;
          case 8809: return OvertimeParkingCancel;
          case 8982: return QueryAppointPara;
          case 9216: return TerminalShutdown;
          case 9217: return TerminalReset;
          case 9218: return TerminalRestoreFactory;
          case 9219: return TerminalCloseGPRS;
          case 9220: return TerminalCloseAllWireless;
          case 9221: return WirelessUpdate;
          case 9222: return ConnectToServer;
          case 9223: return TerminalUpgradePackage;
          case 13320: return TerminalUpgradePackageRes;
          case 9472: return MessageBroadcastInArea;
          case 9473: return MessageBroadcastInAreaDel;
          case 9474: return OvertimeParkingInArea;
          case 9475: return OvertimeParkingInAreaDel;
          case 8983: return OutRegionToLimitSpeed;
          case 8984: return OutRegionToLimitSpeedDel;
          case 12656: return TerminalStatusControlRes;
          case 12912: return TerminalStatusChangeNotify;
          case 12597: return CANBUSDataQueryRes;
          case 9504: return TerminalBroadcastSwitch;
          case 9505: return BroadcastInfoNotice;
          case 9506: return ServerStationComment;
          case 9509: return DelayOvertimeParkingInArea;
          case 9477: return VehiclePassInArea;
          case 9478: return VehiclePassInAreaDel;
          case 8985: return InAreaTriggerActivationOrLockNotify;
          case 8992: return InAreaTriggerActivationOrLockNotifyDel;
          case 13089: return ActivationOrLockNotify;
          case 8994: return InAreaRetentionNotifySet;
          case 8995: return InAreaRetentionNotifySetDel;
          case 13092: return InAreaRetentionNotify;
          case 13606: return OvertimeParkingInAreaNotify;
          case 13608: return InOrOutAreaNotify;
          case 1280: return VehicleControlRes;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Terminal>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Terminal>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Terminal>() {
              public Terminal findValueByNumber(int number) {
                return Terminal.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return AllCommands.getDescriptor().getEnumTypes().get(3);
      }
      
      private static final Terminal[] VALUES = {
        DownCommonRes, UpCommonRes, ReportLocationData, TerminalRegister, TerminalRegisterRes, TerminalAuth, TerminalLogout, DriverInfoReport, TerminalOnlineSwitch, ShortLocationDataReport, WaybillReport, ReportDriverReq, BatchLocationDataUpload, CANBUSDataUpload, CallName, CallNameRes, TRVersionCollect, TRVersionRes, TRSpeedCollect, TRSpeedCollectionRes, TRDoubtCollect, TRDoubtCollectionRes, TRPulseCollection, TRPulseCollectionRes, TRSetPulseValue, DownPassThrough, UpPassThrough, DataCompression, PlatformRSAKey, TerminalRSAKey, QueryTerminalProperty, QueryTerminalPropertyRes, TRCollectDriverInfo, TRCollectDriverInfoRes, TRCollectRealTime, TRCollectRealTimeRes, TRCollectMileage, TRCollectMileageRes, TRCollectVehicleInfo, TRCollectVehicleInfoRes, TRCollectStatusSignal, TRCollectStatusSignalRes, TRCollectOnlyCode, TRCollectOnlyCodeRes, TRCollectLocationData, TRCollectLocationDataRes, TRCollectOvertimeRecord, TRCollectOvertimeRecordRes, TRCollectDriverIdentity, TRCollectDriverIdentityRes, TRCollectPowerRecord, TRCollectPowerRecordRes, TRCollectParaModifyRecord, TRCollectParaModifyRecordRes, TRCollectSpeedLog, TRCollectSpeedLogRes, TRSetVehicleInfo, TRSetInstallDate, TRSetStatusSignal, TRSetCurrentDate, TRSetMileage, DispatchMessage, CallListener, TakePhotography, TakePhotographyRes, MultimediaUpload, OilCircuitControl, VehicleControl, EventSetting, EventReport, AskQuestion, AnswerQuestion, InfoDemandMenu, InfoDemandOrCancel, InfoService, MediaEventInfoUpLoad, MediaDataQuery, MediaDataQueryRes, SaveMultimediaSingleUpload, SaveMultimediaUpload, RecordStartCommand, ConfirmAlarmMessage, TerminalStatusControl, DrivingBehaviorSetting, AntiTamperBoxSetting, AntiTamperBoxShieldAlarmSetting, CANDataReportSetting, CANBUSDataQuery, CANBUSDataReport, MessageTimeoutProcess, ConnectServerConfig, ReportTacticsAndInterval, PrivilegeNumbers, AlarmTriggeredSetting, SpeedingAlarmSetting, SpeedingAlarmCancel, FatigueDrivingSetting, FatigueDrivingCancel, MultiMediaParameter, VehicleInfoSetting, RoadTransportPermit, CollisionAlarm, RolloverAlarm, TakePictureControl, GnssSetting, CanBusSetting, ParameterQuery, ParameterQueryRes, ParameterQueryText, ParameterQueryTextRes, PhoneBookSetting, SetCircleAreaAlarm, DeleteCircleAreaAlarm, SetRectangleAreaAlarm, DeleteRectangleAreaAlarm, SetPolygonAreaAlarm, DeletePolygonAreaAlarm, SetRouteAlarm, DeleteRouteAlarm, TemporaryLocationControl, DrivingBanSetting, DrivingBanSettingCancel, OvertimeParking, OvertimeParkingCancel, QueryAppointPara, TerminalShutdown, TerminalReset, TerminalRestoreFactory, TerminalCloseGPRS, TerminalCloseAllWireless, WirelessUpdate, ConnectToServer, TerminalUpgradePackage, TerminalUpgradePackageRes, MessageBroadcastInArea, MessageBroadcastInAreaDel, OvertimeParkingInArea, OvertimeParkingInAreaDel, OutRegionToLimitSpeed, OutRegionToLimitSpeedDel, TerminalStatusControlRes, TerminalStatusChangeNotify, CANBUSDataQueryRes, TerminalBroadcastSwitch, BroadcastInfoNotice, ServerStationComment, DelayOvertimeParkingInArea, VehiclePassInArea, VehiclePassInAreaDel, InAreaTriggerActivationOrLockNotify, InAreaTriggerActivationOrLockNotifyDel, ActivationOrLockNotify, InAreaRetentionNotifySet, InAreaRetentionNotifySetDel, InAreaRetentionNotify, OvertimeParkingInAreaNotify, InOrOutAreaNotify, VehicleControlRes, 
      };
      
      public static Terminal valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Terminal(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AllCommands.Terminal)
    }
    
    public enum InitialData
        implements com.google.protobuf.ProtocolMessageEnum {
      DataInquiry(0, 16385),
      DataInquiryRes(1, 17665),
      ;
      
      public static final int DataInquiry_VALUE = 16385;
      public static final int DataInquiryRes_VALUE = 17665;
      
      
      public final int getNumber() { return value; }
      
      public static InitialData valueOf(int value) {
        switch (value) {
          case 16385: return DataInquiry;
          case 17665: return DataInquiryRes;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<InitialData>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<InitialData>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InitialData>() {
              public InitialData findValueByNumber(int number) {
                return InitialData.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return AllCommands.getDescriptor().getEnumTypes().get(4);
      }
      
      private static final InitialData[] VALUES = {
        DataInquiry, DataInquiryRes, 
      };
      
      public static InitialData valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private InitialData(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AllCommands.InitialData)
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static AllCommands parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AllCommands parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AllCommands parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AllCommands parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AllCommands parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AllCommands parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static AllCommands parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AllCommands parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AllCommands parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AllCommands parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AllCommands prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AllCommandsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCAllCommands.internal_static_AllCommands_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCAllCommands.internal_static_AllCommands_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCAllCommands.AllCommands.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AllCommands.getDescriptor();
      }
      
      public AllCommands getDefaultInstanceForType() {
        return AllCommands.getDefaultInstance();
      }
      
      public AllCommands build() {
        AllCommands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private AllCommands buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        AllCommands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public AllCommands buildPartial() {
        AllCommands result = new AllCommands(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AllCommands) {
          return mergeFrom((AllCommands)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(AllCommands other) {
        if (other == AllCommands.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:AllCommands)
    }
    
    static {
      defaultInstance = new AllCommands(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AllCommands)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AllCommands_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AllCommands_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n(core/proto/common/java/AllCommands.pro" +
      "to\"\3522\n\013AllCommands\"\327\004\n\010Platform\022\027\n\022Distr" +
      "ictInfoReport\020\201 \022\031\n\025DistrictInfoReportRe" +
      "s\020\001\022\027\n\023QueryDistrictMMNode\020\003\022\033\n\026QueryDis" +
      "trictMMNodeRes\020\203 \022\016\n\tHeartbeat\020\231!\022\024\n\017Ser" +
      "verCommonRes\020\200\"\022\024\n\017RequestLoginKey\020\201\"\022\027\n" +
      "\022RequestLoginKeyRes\020\201\002\022\017\n\nServerAuth\020\202\002\022" +
      "\022\n\rServerAuthRes\020\202\"\022\020\n\013ServerLogin\020\203\002\022\023\n" +
      "\016ServerLoginRes\020\203\"\022\016\n\tReconnect\020\205\002\022\013\n\006Lo" +
      "gout\020\206\002\022\027\n\022ServerStatusNotice\020\207\002\022\032\n\025Serv",
      "erStatusNoticeRes\020\207\"\022\030\n\023ServerExpiredNot" +
      "ice\020\210\"\022\024\n\017MultiServerAuth\020\211\002\022\027\n\022MultiSer" +
      "verAuthRes\020\211\"\022\025\n\020SubscribeRequest\020\200\004\022\030\n\023" +
      "SubscribeRequestRes\020\200$\022\022\n\rDataSubscribe\020" +
      "\201\004\022\025\n\020DataSubscribeRes\020\201$\022\024\n\017DataUnsubsc" +
      "ribe\020\202\004\022\027\n\022BatchLocationQuery\020\203\004\022\032\n\025Batc" +
      "hLocationQueryRes\020\203$\"\225\005\n\013NodeCluster\022\026\n\021" +
      "BroadcastNodeInfo\020\201\014\022\031\n\024ReportServerIden" +
      "tify\020\202\014\022\022\n\rHeartBeatToMM\020\203,\022\033\n\026LinkStatu" +
      "sSwitchNotice\020\206,\022\025\n\020NodeStatusReport\020\210,\022",
      "\027\n\022DPNodeTerminalInfo\020\362,\022\024\n\017ReportErrorN" +
      "ode\020\211,\022\027\n\022BroadcastErrorNode\020\211\014\022\023\n\016Reque" +
      "stNewNode\020\220,\022\022\n\rAssignNewNode\020\220\014\022\022\n\rConf" +
      "igForNode\020\221\014\022\020\n\013ConfigForTA\020\320\014\022\020\n\013Config" +
      "ForDP\020\360\014\022\020\n\013ConfigForRP\020\220\r\022\020\n\013ConfigForD" +
      "A\020\220\016\022\021\n\014ConfigForDSA\020\341.\022\025\n\020ConfigForEncr" +
      "ypt\020\340.\022\036\n\031ConfigForRPStatisticQuery\020\221\r\022\020" +
      "\n\013GetNodeInfo\020\260\016\022\023\n\016GetNodeInfoRes\020\260.\022\026\n" +
      "\021AddNodeInfoNotice\020\261.\022\026\n\021GetNodeInfoByTy" +
      "pe\020\262\016\022\031\n\024GetNodeInfoByTypeRes\020\262.\022\024\n\017Coll",
      "ectionCheck\020\263\016\022\021\n\014DataTransfer\020\264\016\022!\n\034Dat" +
      "aTransferCompletionNotice\020\265.\022\022\n\rDataStat" +
      "istic\020\266\016\022\"\n\035DataStatisticCompletionNotic" +
      "e\020\267.\"\271\010\n\nDataAccess\022\025\n\020GetTerminalInfos\020" +
      "\200\022\022\030\n\023GetTerminalInfosRes\020\2002\022\027\n\022UpdateTe" +
      "rminalInfo\020\201\022\022\034\n\027TerminalInfoSynchronous" +
      "\020\202\022\022\031\n\024TerminalRegisterSave\020\203\022\022\032\n\025QueryT" +
      "erminalRegister\020\204\022\022\035\n\030QueryTerminalRegis" +
      "terRes\020\2042\022\020\n\013GetDictData\020\220\022\022\023\n\016GetDictDa" +
      "taRes\020\2202\022\022\n\rQueryAreaInfo\020\260\022\022\025\n\020QueryAre",
      "aInfoRes\020\2602\022\023\n\016DeleteAreaInfo\020\261\022\022\025\n\020Quer" +
      "yRegularData\020\262\022\022\030\n\023QueryRegularDataRes\020\262" +
      "2\022\024\n\017RegularDataSave\020\263\022\022\022\n\rParameterSave" +
      "\020\264\022\022\026\n\021DeleteRegularData\020\265\022\022!\n\034TerminalO" +
      "nlineSwitchInfoSave\020\204\023\022\021\n\014FlowInfoSave\020\205" +
      "\023\022\031\n\024DriverInfoReportSave\020\206\023\022\020\n\013DataEncr" +
      "ypt\020\300\022\022\023\n\016DataEncryptRes\020\3002\022\022\n\rServerLog" +
      "Save\020\340\022\022\033\n\026TerminalOperateLogSave\020\341\022\022\035\n\030" +
      "TerminalOperateLogUpdate\020\342\022\022\031\n\024MessageBr" +
      "oadcastSave\020\343\022\022\036\n\031OutRegionToLimitSpeedS",
      "ave\020\344\022\022\021\n\014TaskInfoSave\020\220\023\022\022\n\rTaskInfoQue" +
      "ry\020\221\023\022\025\n\020TaskInfoQueryRes\020\2213\022\r\n\010DataSave" +
      "\020\360\022\022\016\n\tDataQuery\020\361\022\022\021\n\014DataQueryRes\020\3612\022\025" +
      "\n\020LocationDataSave\020\200\023\022\027\n\022MultimediaDataS" +
      "ave\020\201\023\022\020\n\013PassThrough\020\202\023\022\024\n\017DrivingRecor" +
      "der\020\203\023\022\030\n\023DataQueryKeyOverdue\020\2223\022\031\n\024Data" +
      "OverdueBroadcast\020\223\023\022!\n\034QueryTerminalProt" +
      "ocolMapping\020\320\022\022\037\n\032TerminalProtocolMappin" +
      "gRes\020\3202\022\034\n\027TerminalStatisticStatus\020\224\023\022\025\n" +
      "\020AlarmCancelOrNot\020\225\023\022\032\n\025QueryAlarmCancel",
      "OrNot\020\226\023\"\364\037\n\010Terminal\022\022\n\rDownCommonRes\020\201" +
      "`\022\020\n\013UpCommonRes\020\201@\022\027\n\022ReportLocationDat" +
      "a\020\202`\022\025\n\020TerminalRegister\020\203`\022\030\n\023TerminalR" +
      "egisterRes\020\203@\022\021\n\014TerminalAuth\020\204`\022\023\n\016Term" +
      "inalLogout\020\205`\022\025\n\020DriverInfoReport\020\206`\022\031\n\024" +
      "TerminalOnlineSwitch\020\207`\022\034\n\027ShortLocation" +
      "DataReport\020\210`\022\022\n\rWaybillReport\020\211`\022\024\n\017Rep" +
      "ortDriverReq\020\220@\022\034\n\027BatchLocationDataUplo" +
      "ad\020\221`\022\025\n\020CANBUSDataUpload\020\222`\022\r\n\010CallName" +
      "\020\320@\022\020\n\013CallNameRes\020\320`\022\025\n\020TRVersionCollec",
      "t\020\325@\022\021\n\014TRVersionRes\020\325`\022\023\n\016TRSpeedCollec" +
      "t\020\326@\022\031\n\024TRSpeedCollectionRes\020\326`\022\023\n\016TRDou" +
      "btCollect\020\327@\022\031\n\024TRDoubtCollectionRes\020\327`\022" +
      "\026\n\021TRPulseCollection\020\330@\022\031\n\024TRPulseCollec" +
      "tionRes\020\330`\022\024\n\017TRSetPulseValue\020\331@\022\024\n\017Down" +
      "PassThrough\020\261B\022\022\n\rUpPassThrough\020\261b\022\024\n\017Da" +
      "taCompression\020\262b\022\023\n\016PlatformRSAKey\020\263B\022\023\n" +
      "\016TerminalRSAKey\020\263b\022\032\n\025QueryTerminalPrope" +
      "rty\020\264B\022\035\n\030QueryTerminalPropertyRes\020\264b\022\030\n" +
      "\023TRCollectDriverInfo\020\340@\022\033\n\026TRCollectDriv",
      "erInfoRes\020\340`\022\026\n\021TRCollectRealTime\020\341@\022\031\n\024" +
      "TRCollectRealTimeRes\020\341`\022\025\n\020TRCollectMile" +
      "age\020\342@\022\030\n\023TRCollectMileageRes\020\342`\022\031\n\024TRCo" +
      "llectVehicleInfo\020\343@\022\034\n\027TRCollectVehicleI" +
      "nfoRes\020\343`\022\032\n\025TRCollectStatusSignal\020\344@\022\035\n" +
      "\030TRCollectStatusSignalRes\020\344`\022\026\n\021TRCollec" +
      "tOnlyCode\020\345@\022\031\n\024TRCollectOnlyCodeRes\020\345`\022" +
      "\032\n\025TRCollectLocationData\020\346@\022\035\n\030TRCollect" +
      "LocationDataRes\020\346`\022\034\n\027TRCollectOvertimeR" +
      "ecord\020\347@\022\037\n\032TRCollectOvertimeRecordRes\020\347",
      "`\022\034\n\027TRCollectDriverIdentity\020\350@\022\037\n\032TRCol" +
      "lectDriverIdentityRes\020\350`\022\031\n\024TRCollectPow" +
      "erRecord\020\351@\022\034\n\027TRCollectPowerRecordRes\020\351" +
      "`\022\036\n\031TRCollectParaModifyRecord\020\360@\022!\n\034TRC" +
      "ollectParaModifyRecordRes\020\360`\022\026\n\021TRCollec" +
      "tSpeedLog\020\361@\022\031\n\024TRCollectSpeedLogRes\020\361`\022" +
      "\025\n\020TRSetVehicleInfo\020\362@\022\025\n\020TRSetInstallDa" +
      "te\020\363@\022\026\n\021TRSetStatusSignal\020\364@\022\025\n\020TRSetCu" +
      "rrentDate\020\365@\022\021\n\014TRSetMileage\020\366@\022\024\n\017Dispa" +
      "tchMessage\020\321B\022\021\n\014CallListener\020\322B\022\024\n\017Take",
      "Photography\020\323B\022\027\n\022TakePhotographyRes\020\323b\022" +
      "\025\n\020MultimediaUpload\020\324b\022\026\n\021OilCircuitCont" +
      "rol\020\326B\022\023\n\016VehicleControl\020\327B\022\021\n\014EventSett" +
      "ing\020\330B\022\020\n\013EventReport\020\331b\022\020\n\013AskQuestion\020" +
      "\340B\022\023\n\016AnswerQuestion\020\340b\022\023\n\016InfoDemandMen" +
      "u\020\341B\022\027\n\022InfoDemandOrCancel\020\342b\022\020\n\013InfoSer" +
      "vice\020\343B\022\031\n\024MediaEventInfoUpLoad\020\344b\022\023\n\016Me" +
      "diaDataQuery\020\345B\022\026\n\021MediaDataQueryRes\020\345b\022" +
      "\037\n\032SaveMultimediaSingleUpload\020\346B\022\031\n\024Save" +
      "MultimediaUpload\020\347B\022\027\n\022RecordStartComman",
      "d\020\350B\022\030\n\023ConfirmAlarmMessage\020\351B\022\032\n\025Termin" +
      "alStatusControl\020\360B\022\033\n\026DrivingBehaviorSet" +
      "ting\020\360D\022\031\n\024AntiTamperBoxSetting\020\361D\022$\n\037An" +
      "tiTamperBoxShieldAlarmSetting\020\362D\022\031\n\024CAND" +
      "ataReportSetting\020\363D\022\024\n\017CANBUSDataQuery\020\265" +
      "B\022\025\n\020CANBUSDataReport\020\223`\022\032\n\025MessageTimeo" +
      "utProcess\020\321D\022\030\n\023ConnectServerConfig\020\322D\022\035" +
      "\n\030ReportTacticsAndInterval\020\323D\022\025\n\020Privile" +
      "geNumbers\020\324D\022\032\n\025AlarmTriggeredSetting\020\325D" +
      "\022\031\n\024SpeedingAlarmSetting\020\326D\022\030\n\023SpeedingA",
      "larmCancel\020\327D\022\032\n\025FatigueDrivingSetting\020\330" +
      "D\022\031\n\024FatigueDrivingCancel\020\331D\022\030\n\023MultiMed" +
      "iaParameter\020\340D\022\027\n\022VehicleInfoSetting\020\341D\022" +
      "\030\n\023RoadTransportPermit\020\342D\022\023\n\016CollisionAl" +
      "arm\020\343D\022\022\n\rRolloverAlarm\020\344D\022\027\n\022TakePictur" +
      "eControl\020\345D\022\020\n\013GnssSetting\020\346D\022\022\n\rCanBusS" +
      "etting\020\347D\022\023\n\016ParameterQuery\020\202F\022\026\n\021Parame" +
      "terQueryRes\020\202f\022\027\n\022ParameterQueryText\020\203F\022" +
      "\032\n\025ParameterQueryTextRes\020\203f\022\025\n\020PhoneBook" +
      "Setting\020\204F\022\027\n\022SetCircleAreaAlarm\020\205F\022\032\n\025D",
      "eleteCircleAreaAlarm\020\206F\022\032\n\025SetRectangleA" +
      "reaAlarm\020\207F\022\035\n\030DeleteRectangleAreaAlarm\020" +
      "\210F\022\030\n\023SetPolygonAreaAlarm\020\211F\022\033\n\026DeletePo" +
      "lygonAreaAlarm\020\220F\022\022\n\rSetRouteAlarm\020\221F\022\025\n" +
      "\020DeleteRouteAlarm\020\222F\022\035\n\030TemporaryLocatio" +
      "nControl\020\223F\022\026\n\021DrivingBanSetting\020\224F\022\034\n\027D" +
      "rivingBanSettingCancel\020\225F\022\024\n\017OvertimePar" +
      "king\020\350D\022\032\n\025OvertimeParkingCancel\020\351D\022\025\n\020Q" +
      "ueryAppointPara\020\226F\022\025\n\020TerminalShutdown\020\200" +
      "H\022\022\n\rTerminalReset\020\201H\022\033\n\026TerminalRestore",
      "Factory\020\202H\022\026\n\021TerminalCloseGPRS\020\203H\022\035\n\030Te" +
      "rminalCloseAllWireless\020\204H\022\023\n\016WirelessUpd" +
      "ate\020\205H\022\024\n\017ConnectToServer\020\206H\022\033\n\026Terminal" +
      "UpgradePackage\020\207H\022\036\n\031TerminalUpgradePack" +
      "ageRes\020\210h\022\033\n\026MessageBroadcastInArea\020\200J\022\036" +
      "\n\031MessageBroadcastInAreaDel\020\201J\022\032\n\025Overti" +
      "meParkingInArea\020\202J\022\035\n\030OvertimeParkingInA" +
      "reaDel\020\203J\022\032\n\025OutRegionToLimitSpeed\020\227F\022\035\n" +
      "\030OutRegionToLimitSpeedDel\020\230F\022\035\n\030Terminal" +
      "StatusControlRes\020\360b\022\037\n\032TerminalStatusCha",
      "ngeNotify\020\360d\022\027\n\022CANBUSDataQueryRes\020\265b\022\034\n" +
      "\027TerminalBroadcastSwitch\020\240J\022\030\n\023Broadcast" +
      "InfoNotice\020\241J\022\031\n\024ServerStationComment\020\242J" +
      "\022\037\n\032DelayOvertimeParkingInArea\020\245J\022\026\n\021Veh" +
      "iclePassInArea\020\205J\022\031\n\024VehiclePassInAreaDe" +
      "l\020\206J\022(\n#InAreaTriggerActivationOrLockNot" +
      "ify\020\231F\022+\n&InAreaTriggerActivationOrLockN" +
      "otifyDel\020\240F\022\033\n\026ActivationOrLockNotify\020\241f" +
      "\022\035\n\030InAreaRetentionNotifySet\020\242F\022 \n\033InAre" +
      "aRetentionNotifySetDel\020\243F\022\032\n\025InAreaReten",
      "tionNotify\020\244f\022 \n\033OvertimeParkingInAreaNo" +
      "tify\020\246j\022\026\n\021InOrOutAreaNotify\020\250j\022\026\n\021Vehic" +
      "leControlRes\020\200\n\"6\n\013InitialData\022\021\n\013DataIn" +
      "quiry\020\201\200\001\022\024\n\016DataInquiryRes\020\201\212\001BF\n5com.n" +
      "avinfo.opentsp.platform.location.protoco" +
      "l.commonB\rLCAllCommands"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AllCommands_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AllCommands_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AllCommands_descriptor,
              new String[] { },
              AllCommands.class,
              AllCommands.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
