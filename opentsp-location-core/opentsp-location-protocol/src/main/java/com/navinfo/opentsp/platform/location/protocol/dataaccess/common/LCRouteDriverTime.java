// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/dataaccess/common/java/RouteDriverTime.proto

package com.navinfo.opentsp.platform.location.protocol.dataaccess.common;

public final class LCRouteDriverTime {
  private LCRouteDriverTime() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RouteDriverTimeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 routeId = 1;
    boolean hasRouteId();
    long getRouteId();
    
    // required int64 lineId = 2;
    boolean hasLineId();
    long getLineId();
    
    // required int32 maxTime = 3;
    boolean hasMaxTime();
    int getMaxTime();
    
    // required int32 minTime = 4;
    boolean hasMinTime();
    int getMinTime();
    
    // required bool basedTime = 5;
    boolean hasBasedTime();
    boolean getBasedTime();
    
    // optional bool isEveryDay = 6;
    boolean hasIsEveryDay();
    boolean getIsEveryDay();
    
    // optional int64 startDate = 7;
    boolean hasStartDate();
    long getStartDate();
    
    // optional int64 endDate = 8;
    boolean hasEndDate();
    long getEndDate();
  }
  public static final class RouteDriverTime extends
      com.google.protobuf.GeneratedMessage
      implements RouteDriverTimeOrBuilder {
    // Use RouteDriverTime.newBuilder() to construct.
    private RouteDriverTime(Builder builder) {
      super(builder);
    }
    private RouteDriverTime(boolean noInit) {}
    
    private static final RouteDriverTime defaultInstance;
    public static RouteDriverTime getDefaultInstance() {
      return defaultInstance;
    }
    
    public RouteDriverTime getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCRouteDriverTime.internal_static_RouteDriverTime_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCRouteDriverTime.internal_static_RouteDriverTime_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 routeId = 1;
    public static final int ROUTEID_FIELD_NUMBER = 1;
    private long routeId_;
    public boolean hasRouteId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getRouteId() {
      return routeId_;
    }
    
    // required int64 lineId = 2;
    public static final int LINEID_FIELD_NUMBER = 2;
    private long lineId_;
    public boolean hasLineId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getLineId() {
      return lineId_;
    }
    
    // required int32 maxTime = 3;
    public static final int MAXTIME_FIELD_NUMBER = 3;
    private int maxTime_;
    public boolean hasMaxTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getMaxTime() {
      return maxTime_;
    }
    
    // required int32 minTime = 4;
    public static final int MINTIME_FIELD_NUMBER = 4;
    private int minTime_;
    public boolean hasMinTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getMinTime() {
      return minTime_;
    }
    
    // required bool basedTime = 5;
    public static final int BASEDTIME_FIELD_NUMBER = 5;
    private boolean basedTime_;
    public boolean hasBasedTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getBasedTime() {
      return basedTime_;
    }
    
    // optional bool isEveryDay = 6;
    public static final int ISEVERYDAY_FIELD_NUMBER = 6;
    private boolean isEveryDay_;
    public boolean hasIsEveryDay() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getIsEveryDay() {
      return isEveryDay_;
    }
    
    // optional int64 startDate = 7;
    public static final int STARTDATE_FIELD_NUMBER = 7;
    private long startDate_;
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getStartDate() {
      return startDate_;
    }
    
    // optional int64 endDate = 8;
    public static final int ENDDATE_FIELD_NUMBER = 8;
    private long endDate_;
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getEndDate() {
      return endDate_;
    }
    
    private void initFields() {
      routeId_ = 0L;
      lineId_ = 0L;
      maxTime_ = 0;
      minTime_ = 0;
      basedTime_ = false;
      isEveryDay_ = false;
      startDate_ = 0L;
      endDate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRouteId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLineId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBasedTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, routeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, lineId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, maxTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, minTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, basedTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isEveryDay_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, startDate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, endDate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, routeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, lineId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, basedTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isEveryDay_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, startDate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, endDate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static RouteDriverTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RouteDriverTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RouteDriverTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RouteDriverTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RouteDriverTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RouteDriverTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static RouteDriverTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RouteDriverTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RouteDriverTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RouteDriverTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RouteDriverTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RouteDriverTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCRouteDriverTime.internal_static_RouteDriverTime_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCRouteDriverTime.internal_static_RouteDriverTime_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.dataaccess.common.LCRouteDriverTime.RouteDriverTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        routeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lineId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        basedTime_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isEveryDay_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        startDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RouteDriverTime.getDescriptor();
      }
      
      public RouteDriverTime getDefaultInstanceForType() {
        return RouteDriverTime.getDefaultInstance();
      }
      
      public RouteDriverTime build() {
        RouteDriverTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private RouteDriverTime buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        RouteDriverTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public RouteDriverTime buildPartial() {
        RouteDriverTime result = new RouteDriverTime(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.routeId_ = routeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lineId_ = lineId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxTime_ = maxTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minTime_ = minTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.basedTime_ = basedTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isEveryDay_ = isEveryDay_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.startDate_ = startDate_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.endDate_ = endDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RouteDriverTime) {
          return mergeFrom((RouteDriverTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(RouteDriverTime other) {
        if (other == RouteDriverTime.getDefaultInstance()) return this;
        if (other.hasRouteId()) {
          setRouteId(other.getRouteId());
        }
        if (other.hasLineId()) {
          setLineId(other.getLineId());
        }
        if (other.hasMaxTime()) {
          setMaxTime(other.getMaxTime());
        }
        if (other.hasMinTime()) {
          setMinTime(other.getMinTime());
        }
        if (other.hasBasedTime()) {
          setBasedTime(other.getBasedTime());
        }
        if (other.hasIsEveryDay()) {
          setIsEveryDay(other.getIsEveryDay());
        }
        if (other.hasStartDate()) {
          setStartDate(other.getStartDate());
        }
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRouteId()) {
          
          return false;
        }
        if (!hasLineId()) {
          
          return false;
        }
        if (!hasMaxTime()) {
          
          return false;
        }
        if (!hasMinTime()) {
          
          return false;
        }
        if (!hasBasedTime()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              routeId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lineId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              basedTime_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isEveryDay_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              startDate_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              endDate_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 routeId = 1;
      private long routeId_ ;
      public boolean hasRouteId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getRouteId() {
        return routeId_;
      }
      public Builder setRouteId(long value) {
        bitField0_ |= 0x00000001;
        routeId_ = value;
        onChanged();
        return this;
      }
      public Builder clearRouteId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        routeId_ = 0L;
        onChanged();
        return this;
      }
      
      // required int64 lineId = 2;
      private long lineId_ ;
      public boolean hasLineId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getLineId() {
        return lineId_;
      }
      public Builder setLineId(long value) {
        bitField0_ |= 0x00000002;
        lineId_ = value;
        onChanged();
        return this;
      }
      public Builder clearLineId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lineId_ = 0L;
        onChanged();
        return this;
      }
      
      // required int32 maxTime = 3;
      private int maxTime_ ;
      public boolean hasMaxTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getMaxTime() {
        return maxTime_;
      }
      public Builder setMaxTime(int value) {
        bitField0_ |= 0x00000004;
        maxTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxTime_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 minTime = 4;
      private int minTime_ ;
      public boolean hasMinTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMinTime() {
        return minTime_;
      }
      public Builder setMinTime(int value) {
        bitField0_ |= 0x00000008;
        minTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minTime_ = 0;
        onChanged();
        return this;
      }
      
      // required bool basedTime = 5;
      private boolean basedTime_ ;
      public boolean hasBasedTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getBasedTime() {
        return basedTime_;
      }
      public Builder setBasedTime(boolean value) {
        bitField0_ |= 0x00000010;
        basedTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearBasedTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        basedTime_ = false;
        onChanged();
        return this;
      }
      
      // optional bool isEveryDay = 6;
      private boolean isEveryDay_ ;
      public boolean hasIsEveryDay() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getIsEveryDay() {
        return isEveryDay_;
      }
      public Builder setIsEveryDay(boolean value) {
        bitField0_ |= 0x00000020;
        isEveryDay_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsEveryDay() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isEveryDay_ = false;
        onChanged();
        return this;
      }
      
      // optional int64 startDate = 7;
      private long startDate_ ;
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getStartDate() {
        return startDate_;
      }
      public Builder setStartDate(long value) {
        bitField0_ |= 0x00000040;
        startDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        startDate_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 endDate = 8;
      private long endDate_ ;
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getEndDate() {
        return endDate_;
      }
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000080;
        endDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        endDate_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RouteDriverTime)
    }
    
    static {
      defaultInstance = new RouteDriverTime(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RouteDriverTime)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RouteDriverTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RouteDriverTime_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n7core/proto/dataaccess/common/java/Rout" +
      "eDriverTime.proto\"\237\001\n\017RouteDriverTime\022\017\n" +
      "\007routeId\030\001 \002(\003\022\016\n\006lineId\030\002 \002(\003\022\017\n\007maxTim" +
      "e\030\003 \002(\005\022\017\n\007minTime\030\004 \002(\005\022\021\n\tbasedTime\030\005 " +
      "\002(\010\022\022\n\nisEveryDay\030\006 \001(\010\022\021\n\tstartDate\030\007 \001" +
      "(\003\022\017\n\007endDate\030\010 \001(\003BU\n@com.navinfo.opent" +
      "sp.platform.location.protocol.dataaccess" +
      ".commonB\021LCRouteDriverTime"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RouteDriverTime_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RouteDriverTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RouteDriverTime_descriptor,
              new String[] { "RouteId", "LineId", "MaxTime", "MinTime", "BasedTime", "IsEveryDay", "StartDate", "EndDate", },
              RouteDriverTime.class,
              RouteDriverTime.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
