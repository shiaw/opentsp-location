// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/common/java/PowerEventType.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.common;

public final class LCPowerEventType {
  private LCPowerEventType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum PowerEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    powerOn(0, 1),
    powerOff(1, 2),
    ;
    
    public static final int powerOn_VALUE = 1;
    public static final int powerOff_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static PowerEventType valueOf(int value) {
      switch (value) {
        case 1: return powerOn;
        case 2: return powerOff;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PowerEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PowerEventType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PowerEventType>() {
            public PowerEventType findValueByNumber(int number) {
              return PowerEventType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LCPowerEventType.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final PowerEventType[] VALUES = {
      powerOn, powerOff, 
    };
    
    public static PowerEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PowerEventType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:PowerEventType)
  }
  
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n4core/proto/terminal/common/java/PowerE" +
      "ventType.proto*+\n\016PowerEventType\022\013\n\007powe" +
      "rOn\020\001\022\014\n\010powerOff\020\002BR\n>com.navinfo.opent" +
      "sp.platform.location.protocol.terminal.c" +
      "ommonB\020LCPowerEventType"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
