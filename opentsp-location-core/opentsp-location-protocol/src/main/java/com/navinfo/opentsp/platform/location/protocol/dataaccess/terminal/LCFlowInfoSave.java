// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/dataaccess/terminal/java/FlowInfoSave.proto

package com.navinfo.opentsp.platform.location.protocol.dataaccess.terminal;

public final class LCFlowInfoSave {
  private LCFlowInfoSave() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FlowInfoSaveOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .FlowInfoSave.TerminalDataFlow flows = 1;
    java.util.List<FlowInfoSave.TerminalDataFlow>
        getFlowsList();
    FlowInfoSave.TerminalDataFlow getFlows(int index);
    int getFlowsCount();
    java.util.List<? extends FlowInfoSave.TerminalDataFlowOrBuilder>
        getFlowsOrBuilderList();
    FlowInfoSave.TerminalDataFlowOrBuilder getFlowsOrBuilder(
            int index);
  }
  public static final class FlowInfoSave extends
      com.google.protobuf.GeneratedMessage
      implements FlowInfoSaveOrBuilder {
    // Use FlowInfoSave.newBuilder() to construct.
    private FlowInfoSave(Builder builder) {
      super(builder);
    }
    private FlowInfoSave(boolean noInit) {}
    
    private static final FlowInfoSave defaultInstance;
    public static FlowInfoSave getDefaultInstance() {
      return defaultInstance;
    }
    
    public FlowInfoSave getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCFlowInfoSave.internal_static_FlowInfoSave_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCFlowInfoSave.internal_static_FlowInfoSave_fieldAccessorTable;
    }
    
    public interface TerminalDataFlowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required int64 terminalId = 1;
      boolean hasTerminalId();
      long getTerminalId();
      
      // required int64 flowDate = 2;
      boolean hasFlowDate();
      long getFlowDate();
      
      // required int32 upFlow = 3;
      boolean hasUpFlow();
      int getUpFlow();
      
      // required int32 downFlow = 4;
      boolean hasDownFlow();
      int getDownFlow();
    }
    public static final class TerminalDataFlow extends
        com.google.protobuf.GeneratedMessage
        implements TerminalDataFlowOrBuilder {
      // Use TerminalDataFlow.newBuilder() to construct.
      private TerminalDataFlow(Builder builder) {
        super(builder);
      }
      private TerminalDataFlow(boolean noInit) {}
      
      private static final TerminalDataFlow defaultInstance;
      public static TerminalDataFlow getDefaultInstance() {
        return defaultInstance;
      }
      
      public TerminalDataFlow getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCFlowInfoSave.internal_static_FlowInfoSave_TerminalDataFlow_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCFlowInfoSave.internal_static_FlowInfoSave_TerminalDataFlow_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required int64 terminalId = 1;
      public static final int TERMINALID_FIELD_NUMBER = 1;
      private long terminalId_;
      public boolean hasTerminalId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTerminalId() {
        return terminalId_;
      }
      
      // required int64 flowDate = 2;
      public static final int FLOWDATE_FIELD_NUMBER = 2;
      private long flowDate_;
      public boolean hasFlowDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getFlowDate() {
        return flowDate_;
      }
      
      // required int32 upFlow = 3;
      public static final int UPFLOW_FIELD_NUMBER = 3;
      private int upFlow_;
      public boolean hasUpFlow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getUpFlow() {
        return upFlow_;
      }
      
      // required int32 downFlow = 4;
      public static final int DOWNFLOW_FIELD_NUMBER = 4;
      private int downFlow_;
      public boolean hasDownFlow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getDownFlow() {
        return downFlow_;
      }
      
      private void initFields() {
        terminalId_ = 0L;
        flowDate_ = 0L;
        upFlow_ = 0;
        downFlow_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasTerminalId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasFlowDate()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasUpFlow()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDownFlow()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, terminalId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, flowDate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, upFlow_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, downFlow_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, terminalId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, flowDate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, upFlow_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, downFlow_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static TerminalDataFlow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static TerminalDataFlow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static TerminalDataFlow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static TerminalDataFlow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static TerminalDataFlow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static TerminalDataFlow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static TerminalDataFlow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static TerminalDataFlow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static TerminalDataFlow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static TerminalDataFlow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(TerminalDataFlow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements TerminalDataFlowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return LCFlowInfoSave.internal_static_FlowInfoSave_TerminalDataFlow_descriptor;
        }
        
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return LCFlowInfoSave.internal_static_FlowInfoSave_TerminalDataFlow_fieldAccessorTable;
        }
        
        // Construct using com.navinfo.opentsp.platform.location.protocol.dataaccess.terminal.LCFlowInfoSave.FlowInfoSave.TerminalDataFlow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          terminalId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          flowDate_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          upFlow_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          downFlow_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return TerminalDataFlow.getDescriptor();
        }
        
        public TerminalDataFlow getDefaultInstanceForType() {
          return TerminalDataFlow.getDefaultInstance();
        }
        
        public TerminalDataFlow build() {
          TerminalDataFlow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private TerminalDataFlow buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          TerminalDataFlow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public TerminalDataFlow buildPartial() {
          TerminalDataFlow result = new TerminalDataFlow(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.terminalId_ = terminalId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.flowDate_ = flowDate_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.upFlow_ = upFlow_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.downFlow_ = downFlow_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof TerminalDataFlow) {
            return mergeFrom((TerminalDataFlow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(TerminalDataFlow other) {
          if (other == TerminalDataFlow.getDefaultInstance()) return this;
          if (other.hasTerminalId()) {
            setTerminalId(other.getTerminalId());
          }
          if (other.hasFlowDate()) {
            setFlowDate(other.getFlowDate());
          }
          if (other.hasUpFlow()) {
            setUpFlow(other.getUpFlow());
          }
          if (other.hasDownFlow()) {
            setDownFlow(other.getDownFlow());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasTerminalId()) {
            
            return false;
          }
          if (!hasFlowDate()) {
            
            return false;
          }
          if (!hasUpFlow()) {
            
            return false;
          }
          if (!hasDownFlow()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                terminalId_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                flowDate_ = input.readInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                upFlow_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                downFlow_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int64 terminalId = 1;
        private long terminalId_ ;
        public boolean hasTerminalId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public long getTerminalId() {
          return terminalId_;
        }
        public Builder setTerminalId(long value) {
          bitField0_ |= 0x00000001;
          terminalId_ = value;
          onChanged();
          return this;
        }
        public Builder clearTerminalId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          terminalId_ = 0L;
          onChanged();
          return this;
        }
        
        // required int64 flowDate = 2;
        private long flowDate_ ;
        public boolean hasFlowDate() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public long getFlowDate() {
          return flowDate_;
        }
        public Builder setFlowDate(long value) {
          bitField0_ |= 0x00000002;
          flowDate_ = value;
          onChanged();
          return this;
        }
        public Builder clearFlowDate() {
          bitField0_ = (bitField0_ & ~0x00000002);
          flowDate_ = 0L;
          onChanged();
          return this;
        }
        
        // required int32 upFlow = 3;
        private int upFlow_ ;
        public boolean hasUpFlow() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getUpFlow() {
          return upFlow_;
        }
        public Builder setUpFlow(int value) {
          bitField0_ |= 0x00000004;
          upFlow_ = value;
          onChanged();
          return this;
        }
        public Builder clearUpFlow() {
          bitField0_ = (bitField0_ & ~0x00000004);
          upFlow_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 downFlow = 4;
        private int downFlow_ ;
        public boolean hasDownFlow() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getDownFlow() {
          return downFlow_;
        }
        public Builder setDownFlow(int value) {
          bitField0_ |= 0x00000008;
          downFlow_ = value;
          onChanged();
          return this;
        }
        public Builder clearDownFlow() {
          bitField0_ = (bitField0_ & ~0x00000008);
          downFlow_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlowInfoSave.TerminalDataFlow)
      }
      
      static {
        defaultInstance = new TerminalDataFlow(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlowInfoSave.TerminalDataFlow)
    }
    
    // repeated .FlowInfoSave.TerminalDataFlow flows = 1;
    public static final int FLOWS_FIELD_NUMBER = 1;
    private java.util.List<TerminalDataFlow> flows_;
    public java.util.List<TerminalDataFlow> getFlowsList() {
      return flows_;
    }
    public java.util.List<? extends TerminalDataFlowOrBuilder>
        getFlowsOrBuilderList() {
      return flows_;
    }
    public int getFlowsCount() {
      return flows_.size();
    }
    public TerminalDataFlow getFlows(int index) {
      return flows_.get(index);
    }
    public TerminalDataFlowOrBuilder getFlowsOrBuilder(
        int index) {
      return flows_.get(index);
    }
    
    private void initFields() {
      flows_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getFlowsCount(); i++) {
        if (!getFlows(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < flows_.size(); i++) {
        output.writeMessage(1, flows_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < flows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, flows_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FlowInfoSave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FlowInfoSave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FlowInfoSave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FlowInfoSave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FlowInfoSave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FlowInfoSave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FlowInfoSave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FlowInfoSave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FlowInfoSave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FlowInfoSave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FlowInfoSave prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FlowInfoSaveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCFlowInfoSave.internal_static_FlowInfoSave_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCFlowInfoSave.internal_static_FlowInfoSave_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.dataaccess.terminal.LCFlowInfoSave.FlowInfoSave.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFlowsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (flowsBuilder_ == null) {
          flows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          flowsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FlowInfoSave.getDescriptor();
      }
      
      public FlowInfoSave getDefaultInstanceForType() {
        return FlowInfoSave.getDefaultInstance();
      }
      
      public FlowInfoSave build() {
        FlowInfoSave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FlowInfoSave buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FlowInfoSave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FlowInfoSave buildPartial() {
        FlowInfoSave result = new FlowInfoSave(this);
        int from_bitField0_ = bitField0_;
        if (flowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            flows_ = java.util.Collections.unmodifiableList(flows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.flows_ = flows_;
        } else {
          result.flows_ = flowsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FlowInfoSave) {
          return mergeFrom((FlowInfoSave)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FlowInfoSave other) {
        if (other == FlowInfoSave.getDefaultInstance()) return this;
        if (flowsBuilder_ == null) {
          if (!other.flows_.isEmpty()) {
            if (flows_.isEmpty()) {
              flows_ = other.flows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFlowsIsMutable();
              flows_.addAll(other.flows_);
            }
            onChanged();
          }
        } else {
          if (!other.flows_.isEmpty()) {
            if (flowsBuilder_.isEmpty()) {
              flowsBuilder_.dispose();
              flowsBuilder_ = null;
              flows_ = other.flows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              flowsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFlowsFieldBuilder() : null;
            } else {
              flowsBuilder_.addAllMessages(other.flows_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getFlowsCount(); i++) {
          if (!getFlows(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              TerminalDataFlow.Builder subBuilder = TerminalDataFlow.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFlows(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .FlowInfoSave.TerminalDataFlow flows = 1;
      private java.util.List<TerminalDataFlow> flows_ =
        java.util.Collections.emptyList();
      private void ensureFlowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          flows_ = new java.util.ArrayList<TerminalDataFlow>(flows_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          TerminalDataFlow, TerminalDataFlow.Builder, TerminalDataFlowOrBuilder> flowsBuilder_;
      
      public java.util.List<TerminalDataFlow> getFlowsList() {
        if (flowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(flows_);
        } else {
          return flowsBuilder_.getMessageList();
        }
      }
      public int getFlowsCount() {
        if (flowsBuilder_ == null) {
          return flows_.size();
        } else {
          return flowsBuilder_.getCount();
        }
      }
      public TerminalDataFlow getFlows(int index) {
        if (flowsBuilder_ == null) {
          return flows_.get(index);
        } else {
          return flowsBuilder_.getMessage(index);
        }
      }
      public Builder setFlows(
          int index, TerminalDataFlow value) {
        if (flowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowsIsMutable();
          flows_.set(index, value);
          onChanged();
        } else {
          flowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFlows(
          int index, TerminalDataFlow.Builder builderForValue) {
        if (flowsBuilder_ == null) {
          ensureFlowsIsMutable();
          flows_.set(index, builderForValue.build());
          onChanged();
        } else {
          flowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFlows(TerminalDataFlow value) {
        if (flowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowsIsMutable();
          flows_.add(value);
          onChanged();
        } else {
          flowsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFlows(
          int index, TerminalDataFlow value) {
        if (flowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowsIsMutable();
          flows_.add(index, value);
          onChanged();
        } else {
          flowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFlows(
          TerminalDataFlow.Builder builderForValue) {
        if (flowsBuilder_ == null) {
          ensureFlowsIsMutable();
          flows_.add(builderForValue.build());
          onChanged();
        } else {
          flowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFlows(
          int index, TerminalDataFlow.Builder builderForValue) {
        if (flowsBuilder_ == null) {
          ensureFlowsIsMutable();
          flows_.add(index, builderForValue.build());
          onChanged();
        } else {
          flowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFlows(
          Iterable<? extends TerminalDataFlow> values) {
        if (flowsBuilder_ == null) {
          ensureFlowsIsMutable();
          super.addAll(values, flows_);
          onChanged();
        } else {
          flowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFlows() {
        if (flowsBuilder_ == null) {
          flows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          flowsBuilder_.clear();
        }
        return this;
      }
      public Builder removeFlows(int index) {
        if (flowsBuilder_ == null) {
          ensureFlowsIsMutable();
          flows_.remove(index);
          onChanged();
        } else {
          flowsBuilder_.remove(index);
        }
        return this;
      }
      public TerminalDataFlow.Builder getFlowsBuilder(
          int index) {
        return getFlowsFieldBuilder().getBuilder(index);
      }
      public TerminalDataFlowOrBuilder getFlowsOrBuilder(
          int index) {
        if (flowsBuilder_ == null) {
          return flows_.get(index);  } else {
          return flowsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends TerminalDataFlowOrBuilder>
           getFlowsOrBuilderList() {
        if (flowsBuilder_ != null) {
          return flowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(flows_);
        }
      }
      public TerminalDataFlow.Builder addFlowsBuilder() {
        return getFlowsFieldBuilder().addBuilder(
            TerminalDataFlow.getDefaultInstance());
      }
      public TerminalDataFlow.Builder addFlowsBuilder(
          int index) {
        return getFlowsFieldBuilder().addBuilder(
            index, TerminalDataFlow.getDefaultInstance());
      }
      public java.util.List<TerminalDataFlow.Builder>
           getFlowsBuilderList() {
        return getFlowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TerminalDataFlow, TerminalDataFlow.Builder, TerminalDataFlowOrBuilder>
          getFlowsFieldBuilder() {
        if (flowsBuilder_ == null) {
          flowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TerminalDataFlow, TerminalDataFlow.Builder, TerminalDataFlowOrBuilder>(
                  flows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          flows_ = null;
        }
        return flowsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FlowInfoSave)
    }
    
    static {
      defaultInstance = new FlowInfoSave(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlowInfoSave)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlowInfoSave_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlowInfoSave_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlowInfoSave_TerminalDataFlow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlowInfoSave_TerminalDataFlow_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n6core/proto/dataaccess/terminal/java/Fl" +
      "owInfoSave.proto\"\231\001\n\014FlowInfoSave\022-\n\005flo" +
      "ws\030\001 \003(\0132\036.FlowInfoSave.TerminalDataFlow" +
      "\032Z\n\020TerminalDataFlow\022\022\n\nterminalId\030\001 \002(\003" +
      "\022\020\n\010flowDate\030\002 \002(\003\022\016\n\006upFlow\030\003 \002(\005\022\020\n\010do" +
      "wnFlow\030\004 \002(\005BT\nBcom.navinfo.opentsp.plat" +
      "form.location.protocol.dataaccess.termin" +
      "alB\016LCFlowInfoSave"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FlowInfoSave_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FlowInfoSave_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlowInfoSave_descriptor,
              new String[] { "Flows", },
              FlowInfoSave.class,
              FlowInfoSave.Builder.class);
          internal_static_FlowInfoSave_TerminalDataFlow_descriptor =
            internal_static_FlowInfoSave_descriptor.getNestedTypes().get(0);
          internal_static_FlowInfoSave_TerminalDataFlow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlowInfoSave_TerminalDataFlow_descriptor,
              new String[] { "TerminalId", "FlowDate", "UpFlow", "DownFlow", },
              FlowInfoSave.TerminalDataFlow.class,
              FlowInfoSave.TerminalDataFlow.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
