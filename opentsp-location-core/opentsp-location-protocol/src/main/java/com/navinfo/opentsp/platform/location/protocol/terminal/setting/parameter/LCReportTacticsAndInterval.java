// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/setting/parameter/java/ReportTacticsAndInterval.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter;

public final class LCReportTacticsAndInterval {
  private LCReportTacticsAndInterval() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ReportTacticsAndIntervalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .ReportTacticsAndInterval.ReportTactics tactics = 1;
    boolean hasTactics();
    ReportTacticsAndInterval.ReportTactics getTactics();
    
    // optional .ReportTacticsAndInterval.ReportProgram program = 2;
    boolean hasProgram();
    ReportTacticsAndInterval.ReportProgram getProgram();
    
    // optional int32 notLoginTime = 3;
    boolean hasNotLoginTime();
    int getNotLoginTime();
    
    // optional int32 sleepingTime = 4;
    boolean hasSleepingTime();
    int getSleepingTime();
    
    // optional int32 urgentTime = 5;
    boolean hasUrgentTime();
    int getUrgentTime();
    
    // optional int32 defaultTime = 6;
    boolean hasDefaultTime();
    int getDefaultTime();
    
    // optional int32 defaultDistance = 7;
    boolean hasDefaultDistance();
    int getDefaultDistance();
    
    // optional int32 notLoginDistance = 8;
    boolean hasNotLoginDistance();
    int getNotLoginDistance();
    
    // optional int32 sleepingDistance = 9;
    boolean hasSleepingDistance();
    int getSleepingDistance();
    
    // optional int32 urgentDistance = 10;
    boolean hasUrgentDistance();
    int getUrgentDistance();
    
    // optional int32 inflectionAngle = 11;
    boolean hasInflectionAngle();
    int getInflectionAngle();
    
    // optional int32 fenceRadius = 12;
    boolean hasFenceRadius();
    int getFenceRadius();
    
    // optional int64 alarmInterval = 13;
    boolean hasAlarmInterval();
    long getAlarmInterval();
  }
  public static final class ReportTacticsAndInterval extends
      com.google.protobuf.GeneratedMessage
      implements ReportTacticsAndIntervalOrBuilder {
    // Use ReportTacticsAndInterval.newBuilder() to construct.
    private ReportTacticsAndInterval(Builder builder) {
      super(builder);
    }
    private ReportTacticsAndInterval(boolean noInit) {}
    
    private static final ReportTacticsAndInterval defaultInstance;
    public static ReportTacticsAndInterval getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReportTacticsAndInterval getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCReportTacticsAndInterval.internal_static_ReportTacticsAndInterval_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCReportTacticsAndInterval.internal_static_ReportTacticsAndInterval_fieldAccessorTable;
    }
    
    public enum ReportTactics
        implements com.google.protobuf.ProtocolMessageEnum {
      timing(0, 0),
      distance(1, 1),
      timingAndDistance(2, 2),
      ;
      
      public static final int timing_VALUE = 0;
      public static final int distance_VALUE = 1;
      public static final int timingAndDistance_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static ReportTactics valueOf(int value) {
        switch (value) {
          case 0: return timing;
          case 1: return distance;
          case 2: return timingAndDistance;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ReportTactics>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ReportTactics>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReportTactics>() {
              public ReportTactics findValueByNumber(int number) {
                return ReportTactics.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ReportTacticsAndInterval.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ReportTactics[] VALUES = {
        timing, distance, timingAndDistance, 
      };
      
      public static ReportTactics valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private ReportTactics(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:ReportTacticsAndInterval.ReportTactics)
    }
    
    public enum ReportProgram
        implements com.google.protobuf.ProtocolMessageEnum {
      accStatus(0, 0),
      loginAndAcc(1, 1),
      ;
      
      public static final int accStatus_VALUE = 0;
      public static final int loginAndAcc_VALUE = 1;
      
      
      public final int getNumber() { return value; }
      
      public static ReportProgram valueOf(int value) {
        switch (value) {
          case 0: return accStatus;
          case 1: return loginAndAcc;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ReportProgram>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ReportProgram>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReportProgram>() {
              public ReportProgram findValueByNumber(int number) {
                return ReportProgram.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ReportTacticsAndInterval.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final ReportProgram[] VALUES = {
        accStatus, loginAndAcc, 
      };
      
      public static ReportProgram valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private ReportProgram(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:ReportTacticsAndInterval.ReportProgram)
    }
    
    private int bitField0_;
    // optional .ReportTacticsAndInterval.ReportTactics tactics = 1;
    public static final int TACTICS_FIELD_NUMBER = 1;
    private ReportTactics tactics_;
    public boolean hasTactics() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public ReportTactics getTactics() {
      return tactics_;
    }
    
    // optional .ReportTacticsAndInterval.ReportProgram program = 2;
    public static final int PROGRAM_FIELD_NUMBER = 2;
    private ReportProgram program_;
    public boolean hasProgram() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public ReportProgram getProgram() {
      return program_;
    }
    
    // optional int32 notLoginTime = 3;
    public static final int NOTLOGINTIME_FIELD_NUMBER = 3;
    private int notLoginTime_;
    public boolean hasNotLoginTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getNotLoginTime() {
      return notLoginTime_;
    }
    
    // optional int32 sleepingTime = 4;
    public static final int SLEEPINGTIME_FIELD_NUMBER = 4;
    private int sleepingTime_;
    public boolean hasSleepingTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSleepingTime() {
      return sleepingTime_;
    }
    
    // optional int32 urgentTime = 5;
    public static final int URGENTTIME_FIELD_NUMBER = 5;
    private int urgentTime_;
    public boolean hasUrgentTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getUrgentTime() {
      return urgentTime_;
    }
    
    // optional int32 defaultTime = 6;
    public static final int DEFAULTTIME_FIELD_NUMBER = 6;
    private int defaultTime_;
    public boolean hasDefaultTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getDefaultTime() {
      return defaultTime_;
    }
    
    // optional int32 defaultDistance = 7;
    public static final int DEFAULTDISTANCE_FIELD_NUMBER = 7;
    private int defaultDistance_;
    public boolean hasDefaultDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getDefaultDistance() {
      return defaultDistance_;
    }
    
    // optional int32 notLoginDistance = 8;
    public static final int NOTLOGINDISTANCE_FIELD_NUMBER = 8;
    private int notLoginDistance_;
    public boolean hasNotLoginDistance() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getNotLoginDistance() {
      return notLoginDistance_;
    }
    
    // optional int32 sleepingDistance = 9;
    public static final int SLEEPINGDISTANCE_FIELD_NUMBER = 9;
    private int sleepingDistance_;
    public boolean hasSleepingDistance() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getSleepingDistance() {
      return sleepingDistance_;
    }
    
    // optional int32 urgentDistance = 10;
    public static final int URGENTDISTANCE_FIELD_NUMBER = 10;
    private int urgentDistance_;
    public boolean hasUrgentDistance() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getUrgentDistance() {
      return urgentDistance_;
    }
    
    // optional int32 inflectionAngle = 11;
    public static final int INFLECTIONANGLE_FIELD_NUMBER = 11;
    private int inflectionAngle_;
    public boolean hasInflectionAngle() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getInflectionAngle() {
      return inflectionAngle_;
    }
    
    // optional int32 fenceRadius = 12;
    public static final int FENCERADIUS_FIELD_NUMBER = 12;
    private int fenceRadius_;
    public boolean hasFenceRadius() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getFenceRadius() {
      return fenceRadius_;
    }
    
    // optional int64 alarmInterval = 13;
    public static final int ALARMINTERVAL_FIELD_NUMBER = 13;
    private long alarmInterval_;
    public boolean hasAlarmInterval() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public long getAlarmInterval() {
      return alarmInterval_;
    }
    
    private void initFields() {
      tactics_ = ReportTactics.timing;
      program_ = ReportProgram.accStatus;
      notLoginTime_ = 0;
      sleepingTime_ = 0;
      urgentTime_ = 0;
      defaultTime_ = 0;
      defaultDistance_ = 0;
      notLoginDistance_ = 0;
      sleepingDistance_ = 0;
      urgentDistance_ = 0;
      inflectionAngle_ = 0;
      fenceRadius_ = 0;
      alarmInterval_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, tactics_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, program_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, notLoginTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sleepingTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, urgentTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, defaultTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, defaultDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, notLoginDistance_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, sleepingDistance_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, urgentDistance_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, inflectionAngle_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, fenceRadius_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, alarmInterval_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, tactics_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, program_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, notLoginTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sleepingTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, urgentTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, defaultTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, defaultDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, notLoginDistance_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sleepingDistance_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, urgentDistance_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, inflectionAngle_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fenceRadius_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, alarmInterval_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static ReportTacticsAndInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ReportTacticsAndInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static ReportTacticsAndInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static ReportTacticsAndInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ReportTacticsAndInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ReportTacticsAndInterval prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ReportTacticsAndIntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCReportTacticsAndInterval.internal_static_ReportTacticsAndInterval_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCReportTacticsAndInterval.internal_static_ReportTacticsAndInterval_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter.LCReportTacticsAndInterval.ReportTacticsAndInterval.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        tactics_ = ReportTactics.timing;
        bitField0_ = (bitField0_ & ~0x00000001);
        program_ = ReportProgram.accStatus;
        bitField0_ = (bitField0_ & ~0x00000002);
        notLoginTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sleepingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        urgentTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        defaultTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        defaultDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        notLoginDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sleepingDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        urgentDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        inflectionAngle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        fenceRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        alarmInterval_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ReportTacticsAndInterval.getDescriptor();
      }
      
      public ReportTacticsAndInterval getDefaultInstanceForType() {
        return ReportTacticsAndInterval.getDefaultInstance();
      }
      
      public ReportTacticsAndInterval build() {
        ReportTacticsAndInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private ReportTacticsAndInterval buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        ReportTacticsAndInterval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public ReportTacticsAndInterval buildPartial() {
        ReportTacticsAndInterval result = new ReportTacticsAndInterval(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tactics_ = tactics_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.program_ = program_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.notLoginTime_ = notLoginTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sleepingTime_ = sleepingTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.urgentTime_ = urgentTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.defaultTime_ = defaultTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.defaultDistance_ = defaultDistance_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.notLoginDistance_ = notLoginDistance_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sleepingDistance_ = sleepingDistance_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.urgentDistance_ = urgentDistance_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.inflectionAngle_ = inflectionAngle_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.fenceRadius_ = fenceRadius_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.alarmInterval_ = alarmInterval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportTacticsAndInterval) {
          return mergeFrom((ReportTacticsAndInterval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ReportTacticsAndInterval other) {
        if (other == ReportTacticsAndInterval.getDefaultInstance()) return this;
        if (other.hasTactics()) {
          setTactics(other.getTactics());
        }
        if (other.hasProgram()) {
          setProgram(other.getProgram());
        }
        if (other.hasNotLoginTime()) {
          setNotLoginTime(other.getNotLoginTime());
        }
        if (other.hasSleepingTime()) {
          setSleepingTime(other.getSleepingTime());
        }
        if (other.hasUrgentTime()) {
          setUrgentTime(other.getUrgentTime());
        }
        if (other.hasDefaultTime()) {
          setDefaultTime(other.getDefaultTime());
        }
        if (other.hasDefaultDistance()) {
          setDefaultDistance(other.getDefaultDistance());
        }
        if (other.hasNotLoginDistance()) {
          setNotLoginDistance(other.getNotLoginDistance());
        }
        if (other.hasSleepingDistance()) {
          setSleepingDistance(other.getSleepingDistance());
        }
        if (other.hasUrgentDistance()) {
          setUrgentDistance(other.getUrgentDistance());
        }
        if (other.hasInflectionAngle()) {
          setInflectionAngle(other.getInflectionAngle());
        }
        if (other.hasFenceRadius()) {
          setFenceRadius(other.getFenceRadius());
        }
        if (other.hasAlarmInterval()) {
          setAlarmInterval(other.getAlarmInterval());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ReportTactics value = ReportTactics.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                tactics_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              ReportProgram value = ReportProgram.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                program_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              notLoginTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sleepingTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              urgentTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              defaultTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              defaultDistance_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              notLoginDistance_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sleepingDistance_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              urgentDistance_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              inflectionAngle_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              fenceRadius_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              alarmInterval_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .ReportTacticsAndInterval.ReportTactics tactics = 1;
      private ReportTactics tactics_ = ReportTactics.timing;
      public boolean hasTactics() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public ReportTactics getTactics() {
        return tactics_;
      }
      public Builder setTactics(ReportTactics value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        tactics_ = value;
        onChanged();
        return this;
      }
      public Builder clearTactics() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tactics_ = ReportTactics.timing;
        onChanged();
        return this;
      }
      
      // optional .ReportTacticsAndInterval.ReportProgram program = 2;
      private ReportProgram program_ = ReportProgram.accStatus;
      public boolean hasProgram() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public ReportProgram getProgram() {
        return program_;
      }
      public Builder setProgram(ReportProgram value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        program_ = value;
        onChanged();
        return this;
      }
      public Builder clearProgram() {
        bitField0_ = (bitField0_ & ~0x00000002);
        program_ = ReportProgram.accStatus;
        onChanged();
        return this;
      }
      
      // optional int32 notLoginTime = 3;
      private int notLoginTime_ ;
      public boolean hasNotLoginTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getNotLoginTime() {
        return notLoginTime_;
      }
      public Builder setNotLoginTime(int value) {
        bitField0_ |= 0x00000004;
        notLoginTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearNotLoginTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        notLoginTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sleepingTime = 4;
      private int sleepingTime_ ;
      public boolean hasSleepingTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSleepingTime() {
        return sleepingTime_;
      }
      public Builder setSleepingTime(int value) {
        bitField0_ |= 0x00000008;
        sleepingTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearSleepingTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sleepingTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 urgentTime = 5;
      private int urgentTime_ ;
      public boolean hasUrgentTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getUrgentTime() {
        return urgentTime_;
      }
      public Builder setUrgentTime(int value) {
        bitField0_ |= 0x00000010;
        urgentTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearUrgentTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        urgentTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 defaultTime = 6;
      private int defaultTime_ ;
      public boolean hasDefaultTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getDefaultTime() {
        return defaultTime_;
      }
      public Builder setDefaultTime(int value) {
        bitField0_ |= 0x00000020;
        defaultTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefaultTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        defaultTime_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 defaultDistance = 7;
      private int defaultDistance_ ;
      public boolean hasDefaultDistance() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getDefaultDistance() {
        return defaultDistance_;
      }
      public Builder setDefaultDistance(int value) {
        bitField0_ |= 0x00000040;
        defaultDistance_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefaultDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        defaultDistance_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 notLoginDistance = 8;
      private int notLoginDistance_ ;
      public boolean hasNotLoginDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getNotLoginDistance() {
        return notLoginDistance_;
      }
      public Builder setNotLoginDistance(int value) {
        bitField0_ |= 0x00000080;
        notLoginDistance_ = value;
        onChanged();
        return this;
      }
      public Builder clearNotLoginDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        notLoginDistance_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sleepingDistance = 9;
      private int sleepingDistance_ ;
      public boolean hasSleepingDistance() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getSleepingDistance() {
        return sleepingDistance_;
      }
      public Builder setSleepingDistance(int value) {
        bitField0_ |= 0x00000100;
        sleepingDistance_ = value;
        onChanged();
        return this;
      }
      public Builder clearSleepingDistance() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sleepingDistance_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 urgentDistance = 10;
      private int urgentDistance_ ;
      public boolean hasUrgentDistance() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getUrgentDistance() {
        return urgentDistance_;
      }
      public Builder setUrgentDistance(int value) {
        bitField0_ |= 0x00000200;
        urgentDistance_ = value;
        onChanged();
        return this;
      }
      public Builder clearUrgentDistance() {
        bitField0_ = (bitField0_ & ~0x00000200);
        urgentDistance_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 inflectionAngle = 11;
      private int inflectionAngle_ ;
      public boolean hasInflectionAngle() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getInflectionAngle() {
        return inflectionAngle_;
      }
      public Builder setInflectionAngle(int value) {
        bitField0_ |= 0x00000400;
        inflectionAngle_ = value;
        onChanged();
        return this;
      }
      public Builder clearInflectionAngle() {
        bitField0_ = (bitField0_ & ~0x00000400);
        inflectionAngle_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 fenceRadius = 12;
      private int fenceRadius_ ;
      public boolean hasFenceRadius() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getFenceRadius() {
        return fenceRadius_;
      }
      public Builder setFenceRadius(int value) {
        bitField0_ |= 0x00000800;
        fenceRadius_ = value;
        onChanged();
        return this;
      }
      public Builder clearFenceRadius() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fenceRadius_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 alarmInterval = 13;
      private long alarmInterval_ ;
      public boolean hasAlarmInterval() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public long getAlarmInterval() {
        return alarmInterval_;
      }
      public Builder setAlarmInterval(long value) {
        bitField0_ |= 0x00001000;
        alarmInterval_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlarmInterval() {
        bitField0_ = (bitField0_ & ~0x00001000);
        alarmInterval_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ReportTacticsAndInterval)
    }
    
    static {
      defaultInstance = new ReportTacticsAndInterval(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ReportTacticsAndInterval)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportTacticsAndInterval_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReportTacticsAndInterval_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\nIcore/proto/terminal/setting/parameter/" +
      "java/ReportTacticsAndInterval.proto\"\200\004\n\030" +
      "ReportTacticsAndInterval\0228\n\007tactics\030\001 \001(" +
      "\0162\'.ReportTacticsAndInterval.ReportTacti" +
      "cs\0228\n\007program\030\002 \001(\0162\'.ReportTacticsAndIn" +
      "terval.ReportProgram\022\024\n\014notLoginTime\030\003 \001" +
      "(\005\022\024\n\014sleepingTime\030\004 \001(\005\022\022\n\nurgentTime\030\005" +
      " \001(\005\022\023\n\013defaultTime\030\006 \001(\005\022\027\n\017defaultDist" +
      "ance\030\007 \001(\005\022\030\n\020notLoginDistance\030\010 \001(\005\022\030\n\020" +
      "sleepingDistance\030\t \001(\005\022\026\n\016urgentDistance",
      "\030\n \001(\005\022\027\n\017inflectionAngle\030\013 \001(\005\022\023\n\013fence" +
      "Radius\030\014 \001(\005\022\025\n\ralarmInterval\030\r \001(\003\"@\n\rR" +
      "eportTactics\022\n\n\006timing\020\000\022\014\n\010distance\020\001\022\025" +
      "\n\021timingAndDistance\020\002\"/\n\rReportProgram\022\r" +
      "\n\taccStatus\020\000\022\017\n\013loginAndAcc\020\001Bg\nIcom.na" +
      "vinfo.opentsp.platform.location.protocol" +
      ".terminal.setting.parameterB\032LCReportTac" +
      "ticsAndInterval"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ReportTacticsAndInterval_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ReportTacticsAndInterval_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReportTacticsAndInterval_descriptor,
              new String[] { "Tactics", "Program", "NotLoginTime", "SleepingTime", "UrgentTime", "DefaultTime", "DefaultDistance", "NotLoginDistance", "SleepingDistance", "UrgentDistance", "InflectionAngle", "FenceRadius", "AlarmInterval", },
              ReportTacticsAndInterval.class,
              ReportTacticsAndInterval.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
