// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/remote/java/WirelessUpdate.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.remote;

public final class LCWirelessUpdate {
  private LCWirelessUpdate() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WirelessUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string urlAddress = 1;
    boolean hasUrlAddress();
    String getUrlAddress();
    
    // optional string dialName = 2;
    boolean hasDialName();
    String getDialName();
    
    // required string username = 3;
    boolean hasUsername();
    String getUsername();
    
    // required string password = 4;
    boolean hasPassword();
    String getPassword();
    
    // required string serverIp = 5;
    boolean hasServerIp();
    String getServerIp();
    
    // optional int32 tcpPort = 6;
    boolean hasTcpPort();
    int getTcpPort();
    
    // optional int32 udpPort = 7;
    boolean hasUdpPort();
    int getUdpPort();
    
    // optional string productId = 8;
    boolean hasProductId();
    String getProductId();
    
    // optional string hardwareVersion = 9;
    boolean hasHardwareVersion();
    String getHardwareVersion();
    
    // optional string firmwareVersion = 10;
    boolean hasFirmwareVersion();
    String getFirmwareVersion();
    
    // optional bool isAlwaysConnecting = 11;
    boolean hasIsAlwaysConnecting();
    boolean getIsAlwaysConnecting();
    
    // optional int32 connectTime = 12;
    boolean hasConnectTime();
    int getConnectTime();
  }
  public static final class WirelessUpdate extends
      com.google.protobuf.GeneratedMessage
      implements WirelessUpdateOrBuilder {
    // Use WirelessUpdate.newBuilder() to construct.
    private WirelessUpdate(Builder builder) {
      super(builder);
    }
    private WirelessUpdate(boolean noInit) {}
    
    private static final WirelessUpdate defaultInstance;
    public static WirelessUpdate getDefaultInstance() {
      return defaultInstance;
    }
    
    public WirelessUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCWirelessUpdate.internal_static_WirelessUpdate_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCWirelessUpdate.internal_static_WirelessUpdate_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string urlAddress = 1;
    public static final int URLADDRESS_FIELD_NUMBER = 1;
    private Object urlAddress_;
    public boolean hasUrlAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getUrlAddress() {
      Object ref = urlAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          urlAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUrlAddressBytes() {
      Object ref = urlAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        urlAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dialName = 2;
    public static final int DIALNAME_FIELD_NUMBER = 2;
    private Object dialName_;
    public boolean hasDialName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDialName() {
      Object ref = dialName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dialName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDialNameBytes() {
      Object ref = dialName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dialName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string username = 3;
    public static final int USERNAME_FIELD_NUMBER = 3;
    private Object username_;
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getUsername() {
      Object ref = username_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          username_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUsernameBytes() {
      Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string password = 4;
    public static final int PASSWORD_FIELD_NUMBER = 4;
    private Object password_;
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getPassword() {
      Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          password_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasswordBytes() {
      Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string serverIp = 5;
    public static final int SERVERIP_FIELD_NUMBER = 5;
    private Object serverIp_;
    public boolean hasServerIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getServerIp() {
      Object ref = serverIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serverIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getServerIpBytes() {
      Object ref = serverIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serverIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 tcpPort = 6;
    public static final int TCPPORT_FIELD_NUMBER = 6;
    private int tcpPort_;
    public boolean hasTcpPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTcpPort() {
      return tcpPort_;
    }
    
    // optional int32 udpPort = 7;
    public static final int UDPPORT_FIELD_NUMBER = 7;
    private int udpPort_;
    public boolean hasUdpPort() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getUdpPort() {
      return udpPort_;
    }
    
    // optional string productId = 8;
    public static final int PRODUCTID_FIELD_NUMBER = 8;
    private Object productId_;
    public boolean hasProductId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getProductId() {
      Object ref = productId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          productId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProductIdBytes() {
      Object ref = productId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        productId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string hardwareVersion = 9;
    public static final int HARDWAREVERSION_FIELD_NUMBER = 9;
    private Object hardwareVersion_;
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getHardwareVersion() {
      Object ref = hardwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hardwareVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHardwareVersionBytes() {
      Object ref = hardwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hardwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string firmwareVersion = 10;
    public static final int FIRMWAREVERSION_FIELD_NUMBER = 10;
    private Object firmwareVersion_;
    public boolean hasFirmwareVersion() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getFirmwareVersion() {
      Object ref = firmwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          firmwareVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFirmwareVersionBytes() {
      Object ref = firmwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        firmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool isAlwaysConnecting = 11;
    public static final int ISALWAYSCONNECTING_FIELD_NUMBER = 11;
    private boolean isAlwaysConnecting_;
    public boolean hasIsAlwaysConnecting() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public boolean getIsAlwaysConnecting() {
      return isAlwaysConnecting_;
    }
    
    // optional int32 connectTime = 12;
    public static final int CONNECTTIME_FIELD_NUMBER = 12;
    private int connectTime_;
    public boolean hasConnectTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getConnectTime() {
      return connectTime_;
    }
    
    private void initFields() {
      urlAddress_ = "";
      dialName_ = "";
      username_ = "";
      password_ = "";
      serverIp_ = "";
      tcpPort_ = 0;
      udpPort_ = 0;
      productId_ = "";
      hardwareVersion_ = "";
      firmwareVersion_ = "";
      isAlwaysConnecting_ = false;
      connectTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUsername()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUrlAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDialNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getServerIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tcpPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, udpPort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getProductIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getFirmwareVersionBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, isAlwaysConnecting_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, connectTime_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUrlAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDialNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUsernameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getServerIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tcpPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, udpPort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getProductIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getHardwareVersionBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getFirmwareVersionBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isAlwaysConnecting_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, connectTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static WirelessUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static WirelessUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static WirelessUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static WirelessUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static WirelessUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static WirelessUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static WirelessUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static WirelessUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static WirelessUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static WirelessUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(WirelessUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements WirelessUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCWirelessUpdate.internal_static_WirelessUpdate_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCWirelessUpdate.internal_static_WirelessUpdate_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.remote.LCWirelessUpdate.WirelessUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        urlAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dialName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        serverIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        tcpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        udpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        productId_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        hardwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        firmwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        isAlwaysConnecting_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        connectTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WirelessUpdate.getDescriptor();
      }
      
      public WirelessUpdate getDefaultInstanceForType() {
        return WirelessUpdate.getDefaultInstance();
      }
      
      public WirelessUpdate build() {
        WirelessUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private WirelessUpdate buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        WirelessUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public WirelessUpdate buildPartial() {
        WirelessUpdate result = new WirelessUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.urlAddress_ = urlAddress_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dialName_ = dialName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.username_ = username_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.serverIp_ = serverIp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tcpPort_ = tcpPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.udpPort_ = udpPort_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.productId_ = productId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.hardwareVersion_ = hardwareVersion_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.firmwareVersion_ = firmwareVersion_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isAlwaysConnecting_ = isAlwaysConnecting_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.connectTime_ = connectTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WirelessUpdate) {
          return mergeFrom((WirelessUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(WirelessUpdate other) {
        if (other == WirelessUpdate.getDefaultInstance()) return this;
        if (other.hasUrlAddress()) {
          setUrlAddress(other.getUrlAddress());
        }
        if (other.hasDialName()) {
          setDialName(other.getDialName());
        }
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasServerIp()) {
          setServerIp(other.getServerIp());
        }
        if (other.hasTcpPort()) {
          setTcpPort(other.getTcpPort());
        }
        if (other.hasUdpPort()) {
          setUdpPort(other.getUdpPort());
        }
        if (other.hasProductId()) {
          setProductId(other.getProductId());
        }
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasFirmwareVersion()) {
          setFirmwareVersion(other.getFirmwareVersion());
        }
        if (other.hasIsAlwaysConnecting()) {
          setIsAlwaysConnecting(other.getIsAlwaysConnecting());
        }
        if (other.hasConnectTime()) {
          setConnectTime(other.getConnectTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUsername()) {
          
          return false;
        }
        if (!hasPassword()) {
          
          return false;
        }
        if (!hasServerIp()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              urlAddress_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dialName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              username_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              password_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              serverIp_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tcpPort_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              udpPort_ = input.readInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              productId_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              hardwareVersion_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              firmwareVersion_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              isAlwaysConnecting_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              connectTime_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string urlAddress = 1;
      private Object urlAddress_ = "";
      public boolean hasUrlAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getUrlAddress() {
        Object ref = urlAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          urlAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUrlAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        urlAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearUrlAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        urlAddress_ = getDefaultInstance().getUrlAddress();
        onChanged();
        return this;
      }
      void setUrlAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        urlAddress_ = value;
        onChanged();
      }
      
      // optional string dialName = 2;
      private Object dialName_ = "";
      public boolean hasDialName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDialName() {
        Object ref = dialName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dialName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDialName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dialName_ = value;
        onChanged();
        return this;
      }
      public Builder clearDialName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dialName_ = getDefaultInstance().getDialName();
        onChanged();
        return this;
      }
      void setDialName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        dialName_ = value;
        onChanged();
      }
      
      // required string username = 3;
      private Object username_ = "";
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getUsername() {
        Object ref = username_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUsername(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        username_ = value;
        onChanged();
        return this;
      }
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000004);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      void setUsername(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        username_ = value;
        onChanged();
      }
      
      // required string password = 4;
      private Object password_ = "";
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getPassword() {
        Object ref = password_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000008);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      void setPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
      }
      
      // required string serverIp = 5;
      private Object serverIp_ = "";
      public boolean hasServerIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getServerIp() {
        Object ref = serverIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serverIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setServerIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        serverIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearServerIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        serverIp_ = getDefaultInstance().getServerIp();
        onChanged();
        return this;
      }
      void setServerIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        serverIp_ = value;
        onChanged();
      }
      
      // optional int32 tcpPort = 6;
      private int tcpPort_ ;
      public boolean hasTcpPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTcpPort() {
        return tcpPort_;
      }
      public Builder setTcpPort(int value) {
        bitField0_ |= 0x00000020;
        tcpPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearTcpPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tcpPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 udpPort = 7;
      private int udpPort_ ;
      public boolean hasUdpPort() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getUdpPort() {
        return udpPort_;
      }
      public Builder setUdpPort(int value) {
        bitField0_ |= 0x00000040;
        udpPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearUdpPort() {
        bitField0_ = (bitField0_ & ~0x00000040);
        udpPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional string productId = 8;
      private Object productId_ = "";
      public boolean hasProductId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getProductId() {
        Object ref = productId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          productId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProductId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        productId_ = value;
        onChanged();
        return this;
      }
      public Builder clearProductId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        productId_ = getDefaultInstance().getProductId();
        onChanged();
        return this;
      }
      void setProductId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        productId_ = value;
        onChanged();
      }
      
      // optional string hardwareVersion = 9;
      private Object hardwareVersion_ = "";
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getHardwareVersion() {
        Object ref = hardwareVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hardwareVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHardwareVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hardwareVersion_ = getDefaultInstance().getHardwareVersion();
        onChanged();
        return this;
      }
      void setHardwareVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        hardwareVersion_ = value;
        onChanged();
      }
      
      // optional string firmwareVersion = 10;
      private Object firmwareVersion_ = "";
      public boolean hasFirmwareVersion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getFirmwareVersion() {
        Object ref = firmwareVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          firmwareVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFirmwareVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
        onChanged();
        return this;
      }
      void setFirmwareVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        firmwareVersion_ = value;
        onChanged();
      }
      
      // optional bool isAlwaysConnecting = 11;
      private boolean isAlwaysConnecting_ ;
      public boolean hasIsAlwaysConnecting() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public boolean getIsAlwaysConnecting() {
        return isAlwaysConnecting_;
      }
      public Builder setIsAlwaysConnecting(boolean value) {
        bitField0_ |= 0x00000400;
        isAlwaysConnecting_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsAlwaysConnecting() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isAlwaysConnecting_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 connectTime = 12;
      private int connectTime_ ;
      public boolean hasConnectTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getConnectTime() {
        return connectTime_;
      }
      public Builder setConnectTime(int value) {
        bitField0_ |= 0x00000800;
        connectTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearConnectTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        connectTime_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:WirelessUpdate)
    }
    
    static {
      defaultInstance = new WirelessUpdate(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:WirelessUpdate)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WirelessUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WirelessUpdate_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n4core/proto/terminal/remote/java/Wirele" +
      "ssUpdate.proto\"\204\002\n\016WirelessUpdate\022\022\n\nurl" +
      "Address\030\001 \001(\t\022\020\n\010dialName\030\002 \001(\t\022\020\n\010usern" +
      "ame\030\003 \002(\t\022\020\n\010password\030\004 \002(\t\022\020\n\010serverIp\030" +
      "\005 \002(\t\022\017\n\007tcpPort\030\006 \001(\005\022\017\n\007udpPort\030\007 \001(\005\022" +
      "\021\n\tproductId\030\010 \001(\t\022\027\n\017hardwareVersion\030\t " +
      "\001(\t\022\027\n\017firmwareVersion\030\n \001(\t\022\032\n\022isAlways" +
      "Connecting\030\013 \001(\010\022\023\n\013connectTime\030\014 \001(\005BR\n" +
      ">com.navinfo.opentsp.platform.location.p" +
      "rotocol.terminal.remoteB\020LCWirelessUpdat",
      "e"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_WirelessUpdate_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_WirelessUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WirelessUpdate_descriptor,
              new String[] { "UrlAddress", "DialName", "Username", "Password", "ServerIp", "TcpPort", "UdpPort", "ProductId", "HardwareVersion", "FirmwareVersion", "IsAlwaysConnecting", "ConnectTime", },
              WirelessUpdate.class,
              WirelessUpdate.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
