// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/setting/parameter/java/TakePictureControl.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter;

public final class LCTakePictureControl {
  private LCTakePictureControl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum IntervalUnit
      implements com.google.protobuf.ProtocolMessageEnum {
    timing_second(0, 1),
    timing_minute(1, 2),
    distance_meter(2, 3),
    distance_kiloMiter(3, 4),
    ;
    
    public static final int timing_second_VALUE = 1;
    public static final int timing_minute_VALUE = 2;
    public static final int distance_meter_VALUE = 3;
    public static final int distance_kiloMiter_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static IntervalUnit valueOf(int value) {
      switch (value) {
        case 1: return timing_second;
        case 2: return timing_minute;
        case 3: return distance_meter;
        case 4: return distance_kiloMiter;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<IntervalUnit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<IntervalUnit>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IntervalUnit>() {
            public IntervalUnit findValueByNumber(int number) {
              return IntervalUnit.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return LCTakePictureControl.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final IntervalUnit[] VALUES = {
      timing_second, timing_minute, distance_meter, distance_kiloMiter, 
    };
    
    public static IntervalUnit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private IntervalUnit(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:IntervalUnit)
  }
  
  public interface TakePictureControlOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .PassageStatus passageStatus = 1;
    java.util.List<PassageStatus>
        getPassageStatusList();
    PassageStatus getPassageStatus(int index);
    int getPassageStatusCount();
    java.util.List<? extends PassageStatusOrBuilder>
        getPassageStatusOrBuilderList();
    PassageStatusOrBuilder getPassageStatusOrBuilder(
            int index);
    
    // required bool status = 2;
    boolean hasStatus();
    boolean getStatus();
    
    // required int32 timingInterval = 3;
    boolean hasTimingInterval();
    int getTimingInterval();
    
    // required .IntervalUnit unit = 4;
    boolean hasUnit();
    IntervalUnit getUnit();
  }
  public static final class TakePictureControl extends
      com.google.protobuf.GeneratedMessage
      implements TakePictureControlOrBuilder {
    // Use TakePictureControl.newBuilder() to construct.
    private TakePictureControl(Builder builder) {
      super(builder);
    }
    private TakePictureControl(boolean noInit) {}
    
    private static final TakePictureControl defaultInstance;
    public static TakePictureControl getDefaultInstance() {
      return defaultInstance;
    }
    
    public TakePictureControl getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTakePictureControl.internal_static_TakePictureControl_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTakePictureControl.internal_static_TakePictureControl_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated .PassageStatus passageStatus = 1;
    public static final int PASSAGESTATUS_FIELD_NUMBER = 1;
    private java.util.List<PassageStatus> passageStatus_;
    public java.util.List<PassageStatus> getPassageStatusList() {
      return passageStatus_;
    }
    public java.util.List<? extends PassageStatusOrBuilder>
        getPassageStatusOrBuilderList() {
      return passageStatus_;
    }
    public int getPassageStatusCount() {
      return passageStatus_.size();
    }
    public PassageStatus getPassageStatus(int index) {
      return passageStatus_.get(index);
    }
    public PassageStatusOrBuilder getPassageStatusOrBuilder(
        int index) {
      return passageStatus_.get(index);
    }
    
    // required bool status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private boolean status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getStatus() {
      return status_;
    }
    
    // required int32 timingInterval = 3;
    public static final int TIMINGINTERVAL_FIELD_NUMBER = 3;
    private int timingInterval_;
    public boolean hasTimingInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTimingInterval() {
      return timingInterval_;
    }
    
    // required .IntervalUnit unit = 4;
    public static final int UNIT_FIELD_NUMBER = 4;
    private IntervalUnit unit_;
    public boolean hasUnit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public IntervalUnit getUnit() {
      return unit_;
    }
    
    private void initFields() {
      passageStatus_ = java.util.Collections.emptyList();
      status_ = false;
      timingInterval_ = 0;
      unit_ = IntervalUnit.timing_second;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimingInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPassageStatusCount(); i++) {
        if (!getPassageStatus(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < passageStatus_.size(); i++) {
        output.writeMessage(1, passageStatus_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, timingInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, unit_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < passageStatus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, passageStatus_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timingInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, unit_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TakePictureControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TakePictureControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TakePictureControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TakePictureControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TakePictureControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TakePictureControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TakePictureControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TakePictureControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TakePictureControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TakePictureControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TakePictureControl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TakePictureControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTakePictureControl.internal_static_TakePictureControl_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTakePictureControl.internal_static_TakePictureControl_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter.LCTakePictureControl.TakePictureControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPassageStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (passageStatusBuilder_ == null) {
          passageStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          passageStatusBuilder_.clear();
        }
        status_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        timingInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        unit_ = IntervalUnit.timing_second;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TakePictureControl.getDescriptor();
      }
      
      public TakePictureControl getDefaultInstanceForType() {
        return TakePictureControl.getDefaultInstance();
      }
      
      public TakePictureControl build() {
        TakePictureControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TakePictureControl buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TakePictureControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TakePictureControl buildPartial() {
        TakePictureControl result = new TakePictureControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (passageStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            passageStatus_ = java.util.Collections.unmodifiableList(passageStatus_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.passageStatus_ = passageStatus_;
        } else {
          result.passageStatus_ = passageStatusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timingInterval_ = timingInterval_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unit_ = unit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TakePictureControl) {
          return mergeFrom((TakePictureControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TakePictureControl other) {
        if (other == TakePictureControl.getDefaultInstance()) return this;
        if (passageStatusBuilder_ == null) {
          if (!other.passageStatus_.isEmpty()) {
            if (passageStatus_.isEmpty()) {
              passageStatus_ = other.passageStatus_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePassageStatusIsMutable();
              passageStatus_.addAll(other.passageStatus_);
            }
            onChanged();
          }
        } else {
          if (!other.passageStatus_.isEmpty()) {
            if (passageStatusBuilder_.isEmpty()) {
              passageStatusBuilder_.dispose();
              passageStatusBuilder_ = null;
              passageStatus_ = other.passageStatus_;
              bitField0_ = (bitField0_ & ~0x00000001);
              passageStatusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPassageStatusFieldBuilder() : null;
            } else {
              passageStatusBuilder_.addAllMessages(other.passageStatus_);
            }
          }
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTimingInterval()) {
          setTimingInterval(other.getTimingInterval());
        }
        if (other.hasUnit()) {
          setUnit(other.getUnit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasTimingInterval()) {
          
          return false;
        }
        if (!hasUnit()) {
          
          return false;
        }
        for (int i = 0; i < getPassageStatusCount(); i++) {
          if (!getPassageStatus(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              PassageStatus.Builder subBuilder = PassageStatus.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPassageStatus(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timingInterval_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              IntervalUnit value = IntervalUnit.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                unit_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .PassageStatus passageStatus = 1;
      private java.util.List<PassageStatus> passageStatus_ =
        java.util.Collections.emptyList();
      private void ensurePassageStatusIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          passageStatus_ = new java.util.ArrayList<PassageStatus>(passageStatus_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          PassageStatus, PassageStatus.Builder, PassageStatusOrBuilder> passageStatusBuilder_;
      
      public java.util.List<PassageStatus> getPassageStatusList() {
        if (passageStatusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(passageStatus_);
        } else {
          return passageStatusBuilder_.getMessageList();
        }
      }
      public int getPassageStatusCount() {
        if (passageStatusBuilder_ == null) {
          return passageStatus_.size();
        } else {
          return passageStatusBuilder_.getCount();
        }
      }
      public PassageStatus getPassageStatus(int index) {
        if (passageStatusBuilder_ == null) {
          return passageStatus_.get(index);
        } else {
          return passageStatusBuilder_.getMessage(index);
        }
      }
      public Builder setPassageStatus(
          int index, PassageStatus value) {
        if (passageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassageStatusIsMutable();
          passageStatus_.set(index, value);
          onChanged();
        } else {
          passageStatusBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPassageStatus(
          int index, PassageStatus.Builder builderForValue) {
        if (passageStatusBuilder_ == null) {
          ensurePassageStatusIsMutable();
          passageStatus_.set(index, builderForValue.build());
          onChanged();
        } else {
          passageStatusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPassageStatus(PassageStatus value) {
        if (passageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassageStatusIsMutable();
          passageStatus_.add(value);
          onChanged();
        } else {
          passageStatusBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPassageStatus(
          int index, PassageStatus value) {
        if (passageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassageStatusIsMutable();
          passageStatus_.add(index, value);
          onChanged();
        } else {
          passageStatusBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPassageStatus(
          PassageStatus.Builder builderForValue) {
        if (passageStatusBuilder_ == null) {
          ensurePassageStatusIsMutable();
          passageStatus_.add(builderForValue.build());
          onChanged();
        } else {
          passageStatusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPassageStatus(
          int index, PassageStatus.Builder builderForValue) {
        if (passageStatusBuilder_ == null) {
          ensurePassageStatusIsMutable();
          passageStatus_.add(index, builderForValue.build());
          onChanged();
        } else {
          passageStatusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPassageStatus(
          Iterable<? extends PassageStatus> values) {
        if (passageStatusBuilder_ == null) {
          ensurePassageStatusIsMutable();
          super.addAll(values, passageStatus_);
          onChanged();
        } else {
          passageStatusBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPassageStatus() {
        if (passageStatusBuilder_ == null) {
          passageStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          passageStatusBuilder_.clear();
        }
        return this;
      }
      public Builder removePassageStatus(int index) {
        if (passageStatusBuilder_ == null) {
          ensurePassageStatusIsMutable();
          passageStatus_.remove(index);
          onChanged();
        } else {
          passageStatusBuilder_.remove(index);
        }
        return this;
      }
      public PassageStatus.Builder getPassageStatusBuilder(
          int index) {
        return getPassageStatusFieldBuilder().getBuilder(index);
      }
      public PassageStatusOrBuilder getPassageStatusOrBuilder(
          int index) {
        if (passageStatusBuilder_ == null) {
          return passageStatus_.get(index);  } else {
          return passageStatusBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends PassageStatusOrBuilder>
           getPassageStatusOrBuilderList() {
        if (passageStatusBuilder_ != null) {
          return passageStatusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(passageStatus_);
        }
      }
      public PassageStatus.Builder addPassageStatusBuilder() {
        return getPassageStatusFieldBuilder().addBuilder(
            PassageStatus.getDefaultInstance());
      }
      public PassageStatus.Builder addPassageStatusBuilder(
          int index) {
        return getPassageStatusFieldBuilder().addBuilder(
            index, PassageStatus.getDefaultInstance());
      }
      public java.util.List<PassageStatus.Builder>
           getPassageStatusBuilderList() {
        return getPassageStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          PassageStatus, PassageStatus.Builder, PassageStatusOrBuilder>
          getPassageStatusFieldBuilder() {
        if (passageStatusBuilder_ == null) {
          passageStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              PassageStatus, PassageStatus.Builder, PassageStatusOrBuilder>(
                  passageStatus_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          passageStatus_ = null;
        }
        return passageStatusBuilder_;
      }
      
      // required bool status = 2;
      private boolean status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getStatus() {
        return status_;
      }
      public Builder setStatus(boolean value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = false;
        onChanged();
        return this;
      }
      
      // required int32 timingInterval = 3;
      private int timingInterval_ ;
      public boolean hasTimingInterval() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTimingInterval() {
        return timingInterval_;
      }
      public Builder setTimingInterval(int value) {
        bitField0_ |= 0x00000004;
        timingInterval_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimingInterval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timingInterval_ = 0;
        onChanged();
        return this;
      }
      
      // required .IntervalUnit unit = 4;
      private IntervalUnit unit_ = IntervalUnit.timing_second;
      public boolean hasUnit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public IntervalUnit getUnit() {
        return unit_;
      }
      public Builder setUnit(IntervalUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        unit_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unit_ = IntervalUnit.timing_second;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TakePictureControl)
    }
    
    static {
      defaultInstance = new TakePictureControl(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TakePictureControl)
  }
  
  public interface PassageStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 passageId = 1;
    boolean hasPassageId();
    int getPassageId();
    
    // required bool isPhotoing = 2;
    boolean hasIsPhotoing();
    boolean getIsPhotoing();
    
    // required bool isSaving = 3;
    boolean hasIsSaving();
    boolean getIsSaving();
  }
  public static final class PassageStatus extends
      com.google.protobuf.GeneratedMessage
      implements PassageStatusOrBuilder {
    // Use PassageStatus.newBuilder() to construct.
    private PassageStatus(Builder builder) {
      super(builder);
    }
    private PassageStatus(boolean noInit) {}
    
    private static final PassageStatus defaultInstance;
    public static PassageStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public PassageStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTakePictureControl.internal_static_PassageStatus_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTakePictureControl.internal_static_PassageStatus_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 passageId = 1;
    public static final int PASSAGEID_FIELD_NUMBER = 1;
    private int passageId_;
    public boolean hasPassageId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPassageId() {
      return passageId_;
    }
    
    // required bool isPhotoing = 2;
    public static final int ISPHOTOING_FIELD_NUMBER = 2;
    private boolean isPhotoing_;
    public boolean hasIsPhotoing() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsPhotoing() {
      return isPhotoing_;
    }
    
    // required bool isSaving = 3;
    public static final int ISSAVING_FIELD_NUMBER = 3;
    private boolean isSaving_;
    public boolean hasIsSaving() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getIsSaving() {
      return isSaving_;
    }
    
    private void initFields() {
      passageId_ = 0;
      isPhotoing_ = false;
      isSaving_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPassageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsPhotoing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsSaving()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, passageId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isPhotoing_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isSaving_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, passageId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isPhotoing_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSaving_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static PassageStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static PassageStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static PassageStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static PassageStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static PassageStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static PassageStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static PassageStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static PassageStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static PassageStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static PassageStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PassageStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PassageStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTakePictureControl.internal_static_PassageStatus_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTakePictureControl.internal_static_PassageStatus_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter.LCTakePictureControl.PassageStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        passageId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isPhotoing_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isSaving_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PassageStatus.getDescriptor();
      }
      
      public PassageStatus getDefaultInstanceForType() {
        return PassageStatus.getDefaultInstance();
      }
      
      public PassageStatus build() {
        PassageStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private PassageStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        PassageStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public PassageStatus buildPartial() {
        PassageStatus result = new PassageStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.passageId_ = passageId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isPhotoing_ = isPhotoing_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isSaving_ = isSaving_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PassageStatus) {
          return mergeFrom((PassageStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(PassageStatus other) {
        if (other == PassageStatus.getDefaultInstance()) return this;
        if (other.hasPassageId()) {
          setPassageId(other.getPassageId());
        }
        if (other.hasIsPhotoing()) {
          setIsPhotoing(other.getIsPhotoing());
        }
        if (other.hasIsSaving()) {
          setIsSaving(other.getIsSaving());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPassageId()) {
          
          return false;
        }
        if (!hasIsPhotoing()) {
          
          return false;
        }
        if (!hasIsSaving()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              passageId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isPhotoing_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isSaving_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 passageId = 1;
      private int passageId_ ;
      public boolean hasPassageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPassageId() {
        return passageId_;
      }
      public Builder setPassageId(int value) {
        bitField0_ |= 0x00000001;
        passageId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassageId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        passageId_ = 0;
        onChanged();
        return this;
      }
      
      // required bool isPhotoing = 2;
      private boolean isPhotoing_ ;
      public boolean hasIsPhotoing() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsPhotoing() {
        return isPhotoing_;
      }
      public Builder setIsPhotoing(boolean value) {
        bitField0_ |= 0x00000002;
        isPhotoing_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsPhotoing() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isPhotoing_ = false;
        onChanged();
        return this;
      }
      
      // required bool isSaving = 3;
      private boolean isSaving_ ;
      public boolean hasIsSaving() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsSaving() {
        return isSaving_;
      }
      public Builder setIsSaving(boolean value) {
        bitField0_ |= 0x00000004;
        isSaving_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsSaving() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isSaving_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PassageStatus)
    }
    
    static {
      defaultInstance = new PassageStatus(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PassageStatus)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TakePictureControl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TakePictureControl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PassageStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PassageStatus_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\nCcore/proto/terminal/setting/parameter/" +
      "java/TakePictureControl.proto\"\200\001\n\022TakePi" +
      "ctureControl\022%\n\rpassageStatus\030\001 \003(\0132\016.Pa" +
      "ssageStatus\022\016\n\006status\030\002 \002(\010\022\026\n\016timingInt" +
      "erval\030\003 \002(\005\022\033\n\004unit\030\004 \002(\0162\r.IntervalUnit" +
      "\"H\n\rPassageStatus\022\021\n\tpassageId\030\001 \002(\005\022\022\n\n" +
      "isPhotoing\030\002 \002(\010\022\020\n\010isSaving\030\003 \002(\010*`\n\014In" +
      "tervalUnit\022\021\n\rtiming_second\020\001\022\021\n\rtiming_" +
      "minute\020\002\022\022\n\016distance_meter\020\003\022\026\n\022distance" +
      "_kiloMiter\020\004Ba\nIcom.navinfo.opentsp.plat",
      "form.location.protocol.terminal.setting." +
      "parameterB\024LCTakePictureControl"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TakePictureControl_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TakePictureControl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TakePictureControl_descriptor,
              new String[] { "PassageStatus", "Status", "TimingInterval", "Unit", },
              TakePictureControl.class,
              TakePictureControl.Builder.class);
          internal_static_PassageStatus_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_PassageStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PassageStatus_descriptor,
              new String[] { "PassageId", "IsPhotoing", "IsSaving", },
              PassageStatus.class,
              PassageStatus.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
