// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RealTimeData.proto

package com.navinfo.opentsp.platform.location.protocol.common;

public final class RealTimeDataPb {
  private RealTimeDataPb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RealTimeDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 gpsTime = 1;
    boolean hasGpsTime();
    long getGpsTime();
    
    // optional int32 latitude = 2;
    boolean hasLatitude();
    int getLatitude();
    
    // optional int32 longitude = 3;
    boolean hasLongitude();
    int getLongitude();
    
    // optional int32 height = 4;
    boolean hasHeight();
    int getHeight();
    
    // optional int32 engineOutputTorque = 5;
    boolean hasEngineOutputTorque();
    int getEngineOutputTorque();
    
    // optional int32 speed = 6;
    boolean hasSpeed();
    int getSpeed();
    
    // optional int32 accelerator = 7;
    boolean hasAccelerator();
    int getAccelerator();
    
    // optional int32 brake = 8;
    boolean hasBrake();
    int getBrake();
    
    // optional int32 rotation = 9;
    boolean hasRotation();
    int getRotation();
    
    // optional int32 gear = 10;
    boolean hasGear();
    int getGear();
    
    // optional int32 clutchSwitch = 11;
    boolean hasClutchSwitch();
    int getClutchSwitch();
    
    // optional int32 realTimeOilConsumption = 12;
    boolean hasRealTimeOilConsumption();
    int getRealTimeOilConsumption();
    
    // optional int32 fuelConsumptionRate = 13;
    boolean hasFuelConsumptionRate();
    int getFuelConsumptionRate();
  }
  public static final class RealTimeData extends
      com.google.protobuf.GeneratedMessage
      implements RealTimeDataOrBuilder {
    // Use RealTimeData.newBuilder() to construct.
    private RealTimeData(Builder builder) {
      super(builder);
    }
    private RealTimeData(boolean noInit) {}
    
    private static final RealTimeData defaultInstance;
    public static RealTimeData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RealTimeData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RealTimeDataPb.internal_static_RealTimeData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RealTimeDataPb.internal_static_RealTimeData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getGpsTime() {
      return gpsTime_;
    }
    
    // optional int32 latitude = 2;
    public static final int LATITUDE_FIELD_NUMBER = 2;
    private int latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLatitude() {
      return latitude_;
    }
    
    // optional int32 longitude = 3;
    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private int longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLongitude() {
      return longitude_;
    }
    
    // optional int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getHeight() {
      return height_;
    }
    
    // optional int32 engineOutputTorque = 5;
    public static final int ENGINEOUTPUTTORQUE_FIELD_NUMBER = 5;
    private int engineOutputTorque_;
    public boolean hasEngineOutputTorque() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getEngineOutputTorque() {
      return engineOutputTorque_;
    }
    
    // optional int32 speed = 6;
    public static final int SPEED_FIELD_NUMBER = 6;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getSpeed() {
      return speed_;
    }
    
    // optional int32 accelerator = 7;
    public static final int ACCELERATOR_FIELD_NUMBER = 7;
    private int accelerator_;
    public boolean hasAccelerator() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getAccelerator() {
      return accelerator_;
    }
    
    // optional int32 brake = 8;
    public static final int BRAKE_FIELD_NUMBER = 8;
    private int brake_;
    public boolean hasBrake() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getBrake() {
      return brake_;
    }
    
    // optional int32 rotation = 9;
    public static final int ROTATION_FIELD_NUMBER = 9;
    private int rotation_;
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getRotation() {
      return rotation_;
    }
    
    // optional int32 gear = 10;
    public static final int GEAR_FIELD_NUMBER = 10;
    private int gear_;
    public boolean hasGear() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getGear() {
      return gear_;
    }
    
    // optional int32 clutchSwitch = 11;
    public static final int CLUTCHSWITCH_FIELD_NUMBER = 11;
    private int clutchSwitch_;
    public boolean hasClutchSwitch() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getClutchSwitch() {
      return clutchSwitch_;
    }
    
    // optional int32 realTimeOilConsumption = 12;
    public static final int REALTIMEOILCONSUMPTION_FIELD_NUMBER = 12;
    private int realTimeOilConsumption_;
    public boolean hasRealTimeOilConsumption() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getRealTimeOilConsumption() {
      return realTimeOilConsumption_;
    }
    
    // optional int32 fuelConsumptionRate = 13;
    public static final int FUELCONSUMPTIONRATE_FIELD_NUMBER = 13;
    private int fuelConsumptionRate_;
    public boolean hasFuelConsumptionRate() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getFuelConsumptionRate() {
      return fuelConsumptionRate_;
    }
    
    private void initFields() {
      gpsTime_ = 0L;
      latitude_ = 0;
      longitude_ = 0;
      height_ = 0;
      engineOutputTorque_ = 0;
      speed_ = 0;
      accelerator_ = 0;
      brake_ = 0;
      rotation_ = 0;
      gear_ = 0;
      clutchSwitch_ = 0;
      realTimeOilConsumption_ = 0;
      fuelConsumptionRate_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, accelerator_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, brake_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, rotation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, gear_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, clutchSwitch_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, realTimeOilConsumption_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, fuelConsumptionRate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, accelerator_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, brake_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rotation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, gear_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, clutchSwitch_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, realTimeOilConsumption_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, fuelConsumptionRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static RealTimeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RealTimeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RealTimeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RealTimeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RealTimeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RealTimeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RealTimeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RealTimeData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RealTimeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RealTimeDataPb.internal_static_RealTimeData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RealTimeDataPb.internal_static_RealTimeData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.RealTimeDataPb.RealTimeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        engineOutputTorque_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        accelerator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        brake_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        gear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        clutchSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        realTimeOilConsumption_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        fuelConsumptionRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RealTimeData.getDescriptor();
      }
      
      public RealTimeData getDefaultInstanceForType() {
        return RealTimeData.getDefaultInstance();
      }
      
      public RealTimeData build() {
        RealTimeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private RealTimeData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        RealTimeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public RealTimeData buildPartial() {
        RealTimeData result = new RealTimeData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.engineOutputTorque_ = engineOutputTorque_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.accelerator_ = accelerator_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.brake_ = brake_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rotation_ = rotation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.gear_ = gear_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.clutchSwitch_ = clutchSwitch_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.realTimeOilConsumption_ = realTimeOilConsumption_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fuelConsumptionRate_ = fuelConsumptionRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RealTimeData) {
          return mergeFrom((RealTimeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(RealTimeData other) {
        if (other == RealTimeData.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasEngineOutputTorque()) {
          setEngineOutputTorque(other.getEngineOutputTorque());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasAccelerator()) {
          setAccelerator(other.getAccelerator());
        }
        if (other.hasBrake()) {
          setBrake(other.getBrake());
        }
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        if (other.hasGear()) {
          setGear(other.getGear());
        }
        if (other.hasClutchSwitch()) {
          setClutchSwitch(other.getClutchSwitch());
        }
        if (other.hasRealTimeOilConsumption()) {
          setRealTimeOilConsumption(other.getRealTimeOilConsumption());
        }
        if (other.hasFuelConsumptionRate()) {
          setFuelConsumptionRate(other.getFuelConsumptionRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              latitude_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              longitude_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              engineOutputTorque_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              speed_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              accelerator_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              brake_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rotation_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              gear_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              clutchSwitch_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              realTimeOilConsumption_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              fuelConsumptionRate_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getGpsTime() {
        return gpsTime_;
      }
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 latitude = 2;
      private int latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000002;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 longitude = 3;
      private int longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000004;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 height = 4;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 engineOutputTorque = 5;
      private int engineOutputTorque_ ;
      public boolean hasEngineOutputTorque() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getEngineOutputTorque() {
        return engineOutputTorque_;
      }
      public Builder setEngineOutputTorque(int value) {
        bitField0_ |= 0x00000010;
        engineOutputTorque_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineOutputTorque() {
        bitField0_ = (bitField0_ & ~0x00000010);
        engineOutputTorque_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 speed = 6;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000020;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 accelerator = 7;
      private int accelerator_ ;
      public boolean hasAccelerator() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getAccelerator() {
        return accelerator_;
      }
      public Builder setAccelerator(int value) {
        bitField0_ |= 0x00000040;
        accelerator_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccelerator() {
        bitField0_ = (bitField0_ & ~0x00000040);
        accelerator_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 brake = 8;
      private int brake_ ;
      public boolean hasBrake() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getBrake() {
        return brake_;
      }
      public Builder setBrake(int value) {
        bitField0_ |= 0x00000080;
        brake_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrake() {
        bitField0_ = (bitField0_ & ~0x00000080);
        brake_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 rotation = 9;
      private int rotation_ ;
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getRotation() {
        return rotation_;
      }
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000100;
        rotation_ = value;
        onChanged();
        return this;
      }
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rotation_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 gear = 10;
      private int gear_ ;
      public boolean hasGear() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getGear() {
        return gear_;
      }
      public Builder setGear(int value) {
        bitField0_ |= 0x00000200;
        gear_ = value;
        onChanged();
        return this;
      }
      public Builder clearGear() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gear_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 clutchSwitch = 11;
      private int clutchSwitch_ ;
      public boolean hasClutchSwitch() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getClutchSwitch() {
        return clutchSwitch_;
      }
      public Builder setClutchSwitch(int value) {
        bitField0_ |= 0x00000400;
        clutchSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearClutchSwitch() {
        bitField0_ = (bitField0_ & ~0x00000400);
        clutchSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 realTimeOilConsumption = 12;
      private int realTimeOilConsumption_ ;
      public boolean hasRealTimeOilConsumption() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getRealTimeOilConsumption() {
        return realTimeOilConsumption_;
      }
      public Builder setRealTimeOilConsumption(int value) {
        bitField0_ |= 0x00000800;
        realTimeOilConsumption_ = value;
        onChanged();
        return this;
      }
      public Builder clearRealTimeOilConsumption() {
        bitField0_ = (bitField0_ & ~0x00000800);
        realTimeOilConsumption_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 fuelConsumptionRate = 13;
      private int fuelConsumptionRate_ ;
      public boolean hasFuelConsumptionRate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getFuelConsumptionRate() {
        return fuelConsumptionRate_;
      }
      public Builder setFuelConsumptionRate(int value) {
        bitField0_ |= 0x00001000;
        fuelConsumptionRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearFuelConsumptionRate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fuelConsumptionRate_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RealTimeData)
    }
    
    static {
      defaultInstance = new RealTimeData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RealTimeData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RealTimeData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RealTimeData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022RealTimeData.proto\"\226\002\n\014RealTimeData\022\017\n" +
      "\007gpsTime\030\001 \002(\003\022\020\n\010latitude\030\002 \001(\005\022\021\n\tlong" +
      "itude\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\032\n\022engineOut" +
      "putTorque\030\005 \001(\005\022\r\n\005speed\030\006 \001(\005\022\023\n\013accele" +
      "rator\030\007 \001(\005\022\r\n\005brake\030\010 \001(\005\022\020\n\010rotation\030\t" +
      " \001(\005\022\014\n\004gear\030\n \001(\005\022\024\n\014clutchSwitch\030\013 \001(\005" +
      "\022\036\n\026realTimeOilConsumption\030\014 \001(\005\022\033\n\023fuel" +
      "ConsumptionRate\030\r \001(\005BG\n5com.navinfo.ope" +
      "ntsp.platform.location.protocol.commonB\016" +
      "RealTimeDataPb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RealTimeData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RealTimeData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RealTimeData_descriptor,
              new String[] { "GpsTime", "Latitude", "Longitude", "Height", "EngineOutputTorque", "Speed", "Accelerator", "Brake", "Rotation", "Gear", "ClutchSwitch", "RealTimeOilConsumption", "FuelConsumptionRate", },
              RealTimeData.class,
              RealTimeData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
