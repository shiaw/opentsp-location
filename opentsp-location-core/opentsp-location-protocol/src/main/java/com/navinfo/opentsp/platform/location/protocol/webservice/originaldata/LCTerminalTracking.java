// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/webservice/originaldata/java/TerminalTracking.proto

package com.navinfo.opentsp.platform.location.protocol.webservice.originaldata;

public final class LCTerminalTracking {
  private LCTerminalTracking() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TerminalTrackingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 terminalId = 1;
    boolean hasTerminalId();
    long getTerminalId();
    
    // repeated .LocationData locationData = 2;
    java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> 
        getLocationDataList();
    com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData getLocationData(int index);
    int getLocationDataCount();
    java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder> 
        getLocationDataOrBuilderList();
    com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder getLocationDataOrBuilder(
            int index);
  }
  public static final class TerminalTracking extends
      com.google.protobuf.GeneratedMessage
      implements TerminalTrackingOrBuilder {
    // Use TerminalTracking.newBuilder() to construct.
    private TerminalTracking(Builder builder) {
      super(builder);
    }
    private TerminalTracking(boolean noInit) {}
    
    private static final TerminalTracking defaultInstance;
    public static TerminalTracking getDefaultInstance() {
      return defaultInstance;
    }
    
    public TerminalTracking getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTerminalTracking.internal_static_TerminalTracking_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTerminalTracking.internal_static_TerminalTracking_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 terminalId = 1;
    public static final int TERMINALID_FIELD_NUMBER = 1;
    private long terminalId_;
    public boolean hasTerminalId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTerminalId() {
      return terminalId_;
    }
    
    // repeated .LocationData locationData = 2;
    public static final int LOCATIONDATA_FIELD_NUMBER = 2;
    private java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> locationData_;
    public java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> getLocationDataList() {
      return locationData_;
    }
    public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder> 
        getLocationDataOrBuilderList() {
      return locationData_;
    }
    public int getLocationDataCount() {
      return locationData_.size();
    }
    public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData getLocationData(int index) {
      return locationData_.get(index);
    }
    public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder getLocationDataOrBuilder(
        int index) {
      return locationData_.get(index);
    }
    
    private void initFields() {
      terminalId_ = 0L;
      locationData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTerminalId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getLocationDataCount(); i++) {
        if (!getLocationData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, terminalId_);
      }
      for (int i = 0; i < locationData_.size(); i++) {
        output.writeMessage(2, locationData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, terminalId_);
      }
      for (int i = 0; i < locationData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, locationData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TerminalTracking parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TerminalTracking parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TerminalTracking parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TerminalTracking parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TerminalTracking parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TerminalTracking parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TerminalTracking parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TerminalTracking parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TerminalTracking parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TerminalTracking parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TerminalTracking prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TerminalTrackingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTerminalTracking.internal_static_TerminalTracking_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTerminalTracking.internal_static_TerminalTracking_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.webservice.originaldata.LCTerminalTracking.TerminalTracking.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        terminalId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationDataBuilder_ == null) {
          locationData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          locationDataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TerminalTracking.getDescriptor();
      }
      
      public TerminalTracking getDefaultInstanceForType() {
        return TerminalTracking.getDefaultInstance();
      }
      
      public TerminalTracking build() {
        TerminalTracking result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TerminalTracking buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TerminalTracking result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TerminalTracking buildPartial() {
        TerminalTracking result = new TerminalTracking(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.terminalId_ = terminalId_;
        if (locationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            locationData_ = java.util.Collections.unmodifiableList(locationData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.locationData_ = locationData_;
        } else {
          result.locationData_ = locationDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TerminalTracking) {
          return mergeFrom((TerminalTracking)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TerminalTracking other) {
        if (other == TerminalTracking.getDefaultInstance()) return this;
        if (other.hasTerminalId()) {
          setTerminalId(other.getTerminalId());
        }
        if (locationDataBuilder_ == null) {
          if (!other.locationData_.isEmpty()) {
            if (locationData_.isEmpty()) {
              locationData_ = other.locationData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLocationDataIsMutable();
              locationData_.addAll(other.locationData_);
            }
            onChanged();
          }
        } else {
          if (!other.locationData_.isEmpty()) {
            if (locationDataBuilder_.isEmpty()) {
              locationDataBuilder_.dispose();
              locationDataBuilder_ = null;
              locationData_ = other.locationData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              locationDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLocationDataFieldBuilder() : null;
            } else {
              locationDataBuilder_.addAllMessages(other.locationData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTerminalId()) {
          
          return false;
        }
        for (int i = 0; i < getLocationDataCount(); i++) {
          if (!getLocationData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              terminalId_ = input.readInt64();
              break;
            }
            case 18: {
              com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLocationData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 terminalId = 1;
      private long terminalId_ ;
      public boolean hasTerminalId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTerminalId() {
        return terminalId_;
      }
      public Builder setTerminalId(long value) {
        bitField0_ |= 0x00000001;
        terminalId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTerminalId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        terminalId_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .LocationData locationData = 2;
      private java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> locationData_ =
        java.util.Collections.emptyList();
      private void ensureLocationDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          locationData_ = new java.util.ArrayList<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData>(locationData_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder> locationDataBuilder_;
      
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> getLocationDataList() {
        if (locationDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationData_);
        } else {
          return locationDataBuilder_.getMessageList();
        }
      }
      public int getLocationDataCount() {
        if (locationDataBuilder_ == null) {
          return locationData_.size();
        } else {
          return locationDataBuilder_.getCount();
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData getLocationData(int index) {
        if (locationDataBuilder_ == null) {
          return locationData_.get(index);
        } else {
          return locationDataBuilder_.getMessage(index);
        }
      }
      public Builder setLocationData(
          int index, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.set(index, value);
          onChanged();
        } else {
          locationDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLocationData(
          int index, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLocationData(com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.add(value);
          onChanged();
        } else {
          locationDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLocationData(
          int index, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.add(index, value);
          onChanged();
        } else {
          locationDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLocationData(
          com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.add(builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLocationData(
          int index, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLocationData(
          Iterable<? extends com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData> values) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          super.addAll(values, locationData_);
          onChanged();
        } else {
          locationDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLocationData() {
        if (locationDataBuilder_ == null) {
          locationData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          locationDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeLocationData(int index) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.remove(index);
          onChanged();
        } else {
          locationDataBuilder_.remove(index);
        }
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder getLocationDataBuilder(
          int index) {
        return getLocationDataFieldBuilder().getBuilder(index);
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder getLocationDataOrBuilder(
          int index) {
        if (locationDataBuilder_ == null) {
          return locationData_.get(index);  } else {
          return locationDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder> 
           getLocationDataOrBuilderList() {
        if (locationDataBuilder_ != null) {
          return locationDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationData_);
        }
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder addLocationDataBuilder() {
        return getLocationDataFieldBuilder().addBuilder(
            com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.getDefaultInstance());
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder addLocationDataBuilder(
          int index) {
        return getLocationDataFieldBuilder().addBuilder(
            index, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.getDefaultInstance());
      }
      public java.util.List<com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder> 
           getLocationDataBuilderList() {
        return getLocationDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder> 
          getLocationDataFieldBuilder() {
        if (locationDataBuilder_ == null) {
          locationDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.LocationDataOrBuilder>(
                  locationData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          locationData_ = null;
        }
        return locationDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TerminalTracking)
    }
    
    static {
      defaultInstance = new TerminalTracking(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TerminalTracking)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TerminalTracking_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TerminalTracking_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n>core/proto/webservice/originaldata/jav" +
      "a/TerminalTracking.proto\032)core/proto/com" +
      "mon/java/LocationData.proto\"K\n\020TerminalT" +
      "racking\022\022\n\nterminalId\030\001 \002(\003\022#\n\014locationD" +
      "ata\030\002 \003(\0132\r.LocationDataB\\\nFcom.navinfo." +
      "opentsp.platform.location.protocol.webse" +
      "rvice.originaldataB\022LCTerminalTracking"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TerminalTracking_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TerminalTracking_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TerminalTracking_descriptor,
              new String[] { "TerminalId", "LocationData", },
              TerminalTracking.class,
              TerminalTracking.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.navinfo.opentsp.platform.location.protocol.common.LCLocationData.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
