// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/setting/parameter/java/RoadTransportPermit.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter;

public final class LCRoadTransportPermit {
  private LCRoadTransportPermit() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoadTransportPermitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string mainServerIp = 1;
    boolean hasMainServerIp();
    String getMainServerIp();
    
    // optional int32 tcpPort = 2;
    boolean hasTcpPort();
    int getTcpPort();
    
    // optional int32 udpPort = 3;
    boolean hasUdpPort();
    int getUdpPort();
    
    // optional string backupServerIp = 4;
    boolean hasBackupServerIp();
    String getBackupServerIp();
  }
  public static final class RoadTransportPermit extends
      com.google.protobuf.GeneratedMessage
      implements RoadTransportPermitOrBuilder {
    // Use RoadTransportPermit.newBuilder() to construct.
    private RoadTransportPermit(Builder builder) {
      super(builder);
    }
    private RoadTransportPermit(boolean noInit) {}
    
    private static final RoadTransportPermit defaultInstance;
    public static RoadTransportPermit getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoadTransportPermit getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCRoadTransportPermit.internal_static_RoadTransportPermit_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCRoadTransportPermit.internal_static_RoadTransportPermit_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string mainServerIp = 1;
    public static final int MAINSERVERIP_FIELD_NUMBER = 1;
    private Object mainServerIp_;
    public boolean hasMainServerIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMainServerIp() {
      Object ref = mainServerIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mainServerIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMainServerIpBytes() {
      Object ref = mainServerIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mainServerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 tcpPort = 2;
    public static final int TCPPORT_FIELD_NUMBER = 2;
    private int tcpPort_;
    public boolean hasTcpPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTcpPort() {
      return tcpPort_;
    }
    
    // optional int32 udpPort = 3;
    public static final int UDPPORT_FIELD_NUMBER = 3;
    private int udpPort_;
    public boolean hasUdpPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getUdpPort() {
      return udpPort_;
    }
    
    // optional string backupServerIp = 4;
    public static final int BACKUPSERVERIP_FIELD_NUMBER = 4;
    private Object backupServerIp_;
    public boolean hasBackupServerIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getBackupServerIp() {
      Object ref = backupServerIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          backupServerIp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getBackupServerIpBytes() {
      Object ref = backupServerIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        backupServerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      mainServerIp_ = "";
      tcpPort_ = 0;
      udpPort_ = 0;
      backupServerIp_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMainServerIpBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tcpPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, udpPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getBackupServerIpBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMainServerIpBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tcpPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, udpPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getBackupServerIpBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static RoadTransportPermit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RoadTransportPermit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RoadTransportPermit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RoadTransportPermit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RoadTransportPermit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RoadTransportPermit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static RoadTransportPermit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RoadTransportPermit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RoadTransportPermit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RoadTransportPermit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RoadTransportPermit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RoadTransportPermitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCRoadTransportPermit.internal_static_RoadTransportPermit_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCRoadTransportPermit.internal_static_RoadTransportPermit_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.setting.parameter.LCRoadTransportPermit.RoadTransportPermit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mainServerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tcpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        udpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        backupServerIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RoadTransportPermit.getDescriptor();
      }
      
      public RoadTransportPermit getDefaultInstanceForType() {
        return RoadTransportPermit.getDefaultInstance();
      }
      
      public RoadTransportPermit build() {
        RoadTransportPermit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private RoadTransportPermit buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        RoadTransportPermit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public RoadTransportPermit buildPartial() {
        RoadTransportPermit result = new RoadTransportPermit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mainServerIp_ = mainServerIp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tcpPort_ = tcpPort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.udpPort_ = udpPort_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.backupServerIp_ = backupServerIp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RoadTransportPermit) {
          return mergeFrom((RoadTransportPermit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(RoadTransportPermit other) {
        if (other == RoadTransportPermit.getDefaultInstance()) return this;
        if (other.hasMainServerIp()) {
          setMainServerIp(other.getMainServerIp());
        }
        if (other.hasTcpPort()) {
          setTcpPort(other.getTcpPort());
        }
        if (other.hasUdpPort()) {
          setUdpPort(other.getUdpPort());
        }
        if (other.hasBackupServerIp()) {
          setBackupServerIp(other.getBackupServerIp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mainServerIp_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tcpPort_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              udpPort_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              backupServerIp_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string mainServerIp = 1;
      private Object mainServerIp_ = "";
      public boolean hasMainServerIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMainServerIp() {
        Object ref = mainServerIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mainServerIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMainServerIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mainServerIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearMainServerIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mainServerIp_ = getDefaultInstance().getMainServerIp();
        onChanged();
        return this;
      }
      void setMainServerIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        mainServerIp_ = value;
        onChanged();
      }
      
      // optional int32 tcpPort = 2;
      private int tcpPort_ ;
      public boolean hasTcpPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTcpPort() {
        return tcpPort_;
      }
      public Builder setTcpPort(int value) {
        bitField0_ |= 0x00000002;
        tcpPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearTcpPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tcpPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 udpPort = 3;
      private int udpPort_ ;
      public boolean hasUdpPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getUdpPort() {
        return udpPort_;
      }
      public Builder setUdpPort(int value) {
        bitField0_ |= 0x00000004;
        udpPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearUdpPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        udpPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional string backupServerIp = 4;
      private Object backupServerIp_ = "";
      public boolean hasBackupServerIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getBackupServerIp() {
        Object ref = backupServerIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          backupServerIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setBackupServerIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        backupServerIp_ = value;
        onChanged();
        return this;
      }
      public Builder clearBackupServerIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        backupServerIp_ = getDefaultInstance().getBackupServerIp();
        onChanged();
        return this;
      }
      void setBackupServerIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        backupServerIp_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:RoadTransportPermit)
    }
    
    static {
      defaultInstance = new RoadTransportPermit(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RoadTransportPermit)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoadTransportPermit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoadTransportPermit_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\nDcore/proto/terminal/setting/parameter/" +
      "java/RoadTransportPermit.proto\"e\n\023RoadTr" +
      "ansportPermit\022\024\n\014mainServerIp\030\001 \001(\t\022\017\n\007t" +
      "cpPort\030\002 \001(\005\022\017\n\007udpPort\030\003 \001(\005\022\026\n\016backupS" +
      "erverIp\030\004 \001(\tBb\nIcom.navinfo.opentsp.pla" +
      "tform.location.protocol.terminal.setting" +
      ".parameterB\025LCRoadTransportPermit"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RoadTransportPermit_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RoadTransportPermit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoadTransportPermit_descriptor,
              new String[] { "MainServerIp", "TcpPort", "UdpPort", "BackupServerIp", },
              RoadTransportPermit.class,
              RoadTransportPermit.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
