// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/query/travelrecorder/block/java/TRDoubtDataBlock.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block;

public final class LCTRDoubtDataBlock {
  private LCTRDoubtDataBlock() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TRDoubtDataBlockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 endDate = 1;
    boolean hasEndDate();
    long getEndDate();
    
    // optional string licenseNumber = 2;
    boolean hasLicenseNumber();
    String getLicenseNumber();
    
    // repeated .TRDoubtData doubtData = 3;
    java.util.List<TRDoubtData>
        getDoubtDataList();
    TRDoubtData getDoubtData(int index);
    int getDoubtDataCount();
    java.util.List<? extends TRDoubtDataOrBuilder>
        getDoubtDataOrBuilderList();
    TRDoubtDataOrBuilder getDoubtDataOrBuilder(
            int index);
    
    // optional .TRLocationData locationData = 4;
    boolean hasLocationData();
    com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData getLocationData();
    com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder getLocationDataOrBuilder();
  }
  public static final class TRDoubtDataBlock extends
      com.google.protobuf.GeneratedMessage
      implements TRDoubtDataBlockOrBuilder {
    // Use TRDoubtDataBlock.newBuilder() to construct.
    private TRDoubtDataBlock(Builder builder) {
      super(builder);
    }
    private TRDoubtDataBlock(boolean noInit) {}
    
    private static final TRDoubtDataBlock defaultInstance;
    public static TRDoubtDataBlock getDefaultInstance() {
      return defaultInstance;
    }
    
    public TRDoubtDataBlock getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTRDoubtDataBlock.internal_static_TRDoubtDataBlock_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTRDoubtDataBlock.internal_static_TRDoubtDataBlock_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 endDate = 1;
    public static final int ENDDATE_FIELD_NUMBER = 1;
    private long endDate_;
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getEndDate() {
      return endDate_;
    }
    
    // optional string licenseNumber = 2;
    public static final int LICENSENUMBER_FIELD_NUMBER = 2;
    private Object licenseNumber_;
    public boolean hasLicenseNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getLicenseNumber() {
      Object ref = licenseNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          licenseNumber_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLicenseNumberBytes() {
      Object ref = licenseNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        licenseNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .TRDoubtData doubtData = 3;
    public static final int DOUBTDATA_FIELD_NUMBER = 3;
    private java.util.List<TRDoubtData> doubtData_;
    public java.util.List<TRDoubtData> getDoubtDataList() {
      return doubtData_;
    }
    public java.util.List<? extends TRDoubtDataOrBuilder>
        getDoubtDataOrBuilderList() {
      return doubtData_;
    }
    public int getDoubtDataCount() {
      return doubtData_.size();
    }
    public TRDoubtData getDoubtData(int index) {
      return doubtData_.get(index);
    }
    public TRDoubtDataOrBuilder getDoubtDataOrBuilder(
        int index) {
      return doubtData_.get(index);
    }
    
    // optional .TRLocationData locationData = 4;
    public static final int LOCATIONDATA_FIELD_NUMBER = 4;
    private com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData locationData_;
    public boolean hasLocationData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData getLocationData() {
      return locationData_;
    }
    public com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder getLocationDataOrBuilder() {
      return locationData_;
    }
    
    private void initFields() {
      endDate_ = 0L;
      licenseNumber_ = "";
      doubtData_ = java.util.Collections.emptyList();
      locationData_ = com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasEndDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDoubtDataCount(); i++) {
        if (!getDoubtData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLocationData()) {
        if (!getLocationData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, endDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLicenseNumberBytes());
      }
      for (int i = 0; i < doubtData_.size(); i++) {
        output.writeMessage(3, doubtData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, locationData_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, endDate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLicenseNumberBytes());
      }
      for (int i = 0; i < doubtData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, doubtData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, locationData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TRDoubtDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRDoubtDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRDoubtDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRDoubtDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TRDoubtDataBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TRDoubtDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTRDoubtDataBlock.internal_static_TRDoubtDataBlock_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTRDoubtDataBlock.internal_static_TRDoubtDataBlock_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block.LCTRDoubtDataBlock.TRDoubtDataBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDoubtDataFieldBuilder();
          getLocationDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        endDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        licenseNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (doubtDataBuilder_ == null) {
          doubtData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          doubtDataBuilder_.clear();
        }
        if (locationDataBuilder_ == null) {
          locationData_ = com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.getDefaultInstance();
        } else {
          locationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TRDoubtDataBlock.getDescriptor();
      }
      
      public TRDoubtDataBlock getDefaultInstanceForType() {
        return TRDoubtDataBlock.getDefaultInstance();
      }
      
      public TRDoubtDataBlock build() {
        TRDoubtDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TRDoubtDataBlock buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TRDoubtDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TRDoubtDataBlock buildPartial() {
        TRDoubtDataBlock result = new TRDoubtDataBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endDate_ = endDate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.licenseNumber_ = licenseNumber_;
        if (doubtDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            doubtData_ = java.util.Collections.unmodifiableList(doubtData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.doubtData_ = doubtData_;
        } else {
          result.doubtData_ = doubtDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (locationDataBuilder_ == null) {
          result.locationData_ = locationData_;
        } else {
          result.locationData_ = locationDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TRDoubtDataBlock) {
          return mergeFrom((TRDoubtDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TRDoubtDataBlock other) {
        if (other == TRDoubtDataBlock.getDefaultInstance()) return this;
        if (other.hasEndDate()) {
          setEndDate(other.getEndDate());
        }
        if (other.hasLicenseNumber()) {
          setLicenseNumber(other.getLicenseNumber());
        }
        if (doubtDataBuilder_ == null) {
          if (!other.doubtData_.isEmpty()) {
            if (doubtData_.isEmpty()) {
              doubtData_ = other.doubtData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDoubtDataIsMutable();
              doubtData_.addAll(other.doubtData_);
            }
            onChanged();
          }
        } else {
          if (!other.doubtData_.isEmpty()) {
            if (doubtDataBuilder_.isEmpty()) {
              doubtDataBuilder_.dispose();
              doubtDataBuilder_ = null;
              doubtData_ = other.doubtData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              doubtDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDoubtDataFieldBuilder() : null;
            } else {
              doubtDataBuilder_.addAllMessages(other.doubtData_);
            }
          }
        }
        if (other.hasLocationData()) {
          mergeLocationData(other.getLocationData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasEndDate()) {
          
          return false;
        }
        for (int i = 0; i < getDoubtDataCount(); i++) {
          if (!getDoubtData(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasLocationData()) {
          if (!getLocationData().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              endDate_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              licenseNumber_ = input.readBytes();
              break;
            }
            case 26: {
              TRDoubtData.Builder subBuilder = TRDoubtData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDoubtData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder subBuilder = com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.newBuilder();
              if (hasLocationData()) {
                subBuilder.mergeFrom(getLocationData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocationData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 endDate = 1;
      private long endDate_ ;
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getEndDate() {
        return endDate_;
      }
      public Builder setEndDate(long value) {
        bitField0_ |= 0x00000001;
        endDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endDate_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string licenseNumber = 2;
      private Object licenseNumber_ = "";
      public boolean hasLicenseNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getLicenseNumber() {
        Object ref = licenseNumber_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          licenseNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLicenseNumber(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        licenseNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearLicenseNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        licenseNumber_ = getDefaultInstance().getLicenseNumber();
        onChanged();
        return this;
      }
      void setLicenseNumber(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        licenseNumber_ = value;
        onChanged();
      }
      
      // repeated .TRDoubtData doubtData = 3;
      private java.util.List<TRDoubtData> doubtData_ =
        java.util.Collections.emptyList();
      private void ensureDoubtDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          doubtData_ = new java.util.ArrayList<TRDoubtData>(doubtData_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          TRDoubtData, TRDoubtData.Builder, TRDoubtDataOrBuilder> doubtDataBuilder_;
      
      public java.util.List<TRDoubtData> getDoubtDataList() {
        if (doubtDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(doubtData_);
        } else {
          return doubtDataBuilder_.getMessageList();
        }
      }
      public int getDoubtDataCount() {
        if (doubtDataBuilder_ == null) {
          return doubtData_.size();
        } else {
          return doubtDataBuilder_.getCount();
        }
      }
      public TRDoubtData getDoubtData(int index) {
        if (doubtDataBuilder_ == null) {
          return doubtData_.get(index);
        } else {
          return doubtDataBuilder_.getMessage(index);
        }
      }
      public Builder setDoubtData(
          int index, TRDoubtData value) {
        if (doubtDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubtDataIsMutable();
          doubtData_.set(index, value);
          onChanged();
        } else {
          doubtDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDoubtData(
          int index, TRDoubtData.Builder builderForValue) {
        if (doubtDataBuilder_ == null) {
          ensureDoubtDataIsMutable();
          doubtData_.set(index, builderForValue.build());
          onChanged();
        } else {
          doubtDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDoubtData(TRDoubtData value) {
        if (doubtDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubtDataIsMutable();
          doubtData_.add(value);
          onChanged();
        } else {
          doubtDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDoubtData(
          int index, TRDoubtData value) {
        if (doubtDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoubtDataIsMutable();
          doubtData_.add(index, value);
          onChanged();
        } else {
          doubtDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDoubtData(
          TRDoubtData.Builder builderForValue) {
        if (doubtDataBuilder_ == null) {
          ensureDoubtDataIsMutable();
          doubtData_.add(builderForValue.build());
          onChanged();
        } else {
          doubtDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDoubtData(
          int index, TRDoubtData.Builder builderForValue) {
        if (doubtDataBuilder_ == null) {
          ensureDoubtDataIsMutable();
          doubtData_.add(index, builderForValue.build());
          onChanged();
        } else {
          doubtDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDoubtData(
          Iterable<? extends TRDoubtData> values) {
        if (doubtDataBuilder_ == null) {
          ensureDoubtDataIsMutable();
          super.addAll(values, doubtData_);
          onChanged();
        } else {
          doubtDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDoubtData() {
        if (doubtDataBuilder_ == null) {
          doubtData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          doubtDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeDoubtData(int index) {
        if (doubtDataBuilder_ == null) {
          ensureDoubtDataIsMutable();
          doubtData_.remove(index);
          onChanged();
        } else {
          doubtDataBuilder_.remove(index);
        }
        return this;
      }
      public TRDoubtData.Builder getDoubtDataBuilder(
          int index) {
        return getDoubtDataFieldBuilder().getBuilder(index);
      }
      public TRDoubtDataOrBuilder getDoubtDataOrBuilder(
          int index) {
        if (doubtDataBuilder_ == null) {
          return doubtData_.get(index);  } else {
          return doubtDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends TRDoubtDataOrBuilder>
           getDoubtDataOrBuilderList() {
        if (doubtDataBuilder_ != null) {
          return doubtDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(doubtData_);
        }
      }
      public TRDoubtData.Builder addDoubtDataBuilder() {
        return getDoubtDataFieldBuilder().addBuilder(
            TRDoubtData.getDefaultInstance());
      }
      public TRDoubtData.Builder addDoubtDataBuilder(
          int index) {
        return getDoubtDataFieldBuilder().addBuilder(
            index, TRDoubtData.getDefaultInstance());
      }
      public java.util.List<TRDoubtData.Builder>
           getDoubtDataBuilderList() {
        return getDoubtDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TRDoubtData, TRDoubtData.Builder, TRDoubtDataOrBuilder>
          getDoubtDataFieldBuilder() {
        if (doubtDataBuilder_ == null) {
          doubtDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TRDoubtData, TRDoubtData.Builder, TRDoubtDataOrBuilder>(
                  doubtData_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          doubtData_ = null;
        }
        return doubtDataBuilder_;
      }
      
      // optional .TRLocationData locationData = 4;
      private com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData locationData_ = com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder> locationDataBuilder_;
      public boolean hasLocationData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData getLocationData() {
        if (locationDataBuilder_ == null) {
          return locationData_;
        } else {
          return locationDataBuilder_.getMessage();
        }
      }
      public Builder setLocationData(com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationData_ = value;
          onChanged();
        } else {
          locationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setLocationData(
          com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          locationData_ = builderForValue.build();
          onChanged();
        } else {
          locationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeLocationData(com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData value) {
        if (locationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              locationData_ != com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.getDefaultInstance()) {
            locationData_ =
              com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.newBuilder(locationData_).mergeFrom(value).buildPartial();
          } else {
            locationData_ = value;
          }
          onChanged();
        } else {
          locationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearLocationData() {
        if (locationDataBuilder_ == null) {
          locationData_ = com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.getDefaultInstance();
          onChanged();
        } else {
          locationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder getLocationDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLocationDataFieldBuilder().getBuilder();
      }
      public com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder getLocationDataOrBuilder() {
        if (locationDataBuilder_ != null) {
          return locationDataBuilder_.getMessageOrBuilder();
        } else {
          return locationData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder> 
          getLocationDataFieldBuilder() {
        if (locationDataBuilder_ == null) {
          locationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationData.Builder, com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.TRLocationDataOrBuilder>(
                  locationData_,
                  getParentForChildren(),
                  isClean());
          locationData_ = null;
        }
        return locationDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TRDoubtDataBlock)
    }
    
    static {
      defaultInstance = new TRDoubtDataBlock(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TRDoubtDataBlock)
  }
  
  public interface TRDoubtDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 speed = 1;
    boolean hasSpeed();
    int getSpeed();
    
    // required int32 status = 2;
    boolean hasStatus();
    int getStatus();
  }
  public static final class TRDoubtData extends
      com.google.protobuf.GeneratedMessage
      implements TRDoubtDataOrBuilder {
    // Use TRDoubtData.newBuilder() to construct.
    private TRDoubtData(Builder builder) {
      super(builder);
    }
    private TRDoubtData(boolean noInit) {}
    
    private static final TRDoubtData defaultInstance;
    public static TRDoubtData getDefaultInstance() {
      return defaultInstance;
    }
    
    public TRDoubtData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTRDoubtDataBlock.internal_static_TRDoubtData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTRDoubtDataBlock.internal_static_TRDoubtData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 speed = 1;
    public static final int SPEED_FIELD_NUMBER = 1;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSpeed() {
      return speed_;
    }
    
    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    private void initFields() {
      speed_ = 0;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TRDoubtData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRDoubtData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRDoubtData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRDoubtData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TRDoubtData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRDoubtData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRDoubtData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRDoubtData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TRDoubtData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TRDoubtDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTRDoubtDataBlock.internal_static_TRDoubtData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTRDoubtDataBlock.internal_static_TRDoubtData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block.LCTRDoubtDataBlock.TRDoubtData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TRDoubtData.getDescriptor();
      }
      
      public TRDoubtData getDefaultInstanceForType() {
        return TRDoubtData.getDefaultInstance();
      }
      
      public TRDoubtData build() {
        TRDoubtData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TRDoubtData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TRDoubtData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TRDoubtData buildPartial() {
        TRDoubtData result = new TRDoubtData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TRDoubtData) {
          return mergeFrom((TRDoubtData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TRDoubtData other) {
        if (other == TRDoubtData.getDefaultInstance()) return this;
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              speed_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 speed = 1;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000001;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TRDoubtData)
    }
    
    static {
      defaultInstance = new TRDoubtData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TRDoubtData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TRDoubtDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TRDoubtDataBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TRDoubtData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TRDoubtData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\nJcore/proto/terminal/query/travelrecord" +
      "er/block/java/TRDoubtDataBlock.proto\032+co" +
      "re/proto/common/java/TRLocationData.prot" +
      "o\"\202\001\n\020TRDoubtDataBlock\022\017\n\007endDate\030\001 \002(\003\022" +
      "\025\n\rlicenseNumber\030\002 \001(\t\022\037\n\tdoubtData\030\003 \003(" +
      "\0132\014.TRDoubtData\022%\n\014locationData\030\004 \001(\0132\017." +
      "TRLocationData\",\n\013TRDoubtData\022\r\n\005speed\030\001" +
      " \002(\005\022\016\n\006status\030\002 \002(\005Bh\nRcom.navinfo.open" +
      "tsp.platform.location.protocol.terminal." +
      "query.travelrecorder.blockB\022LCTRDoubtDat",
      "aBlock"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TRDoubtDataBlock_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TRDoubtDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TRDoubtDataBlock_descriptor,
              new String[] { "EndDate", "LicenseNumber", "DoubtData", "LocationData", },
              TRDoubtDataBlock.class,
              TRDoubtDataBlock.Builder.class);
          internal_static_TRDoubtData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TRDoubtData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TRDoubtData_descriptor,
              new String[] { "Speed", "Status", },
              TRDoubtData.class,
              TRDoubtData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.navinfo.opentsp.platform.location.protocol.common.LCTRLocationData.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
