// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/terminal/query/travelrecorder/block/java/TRSpeedDataBlock.proto

package com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block;

public final class LCTRSpeedDataBlock {
  private LCTRSpeedDataBlock() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TRSpeedDataBlockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 beginDate = 1;
    boolean hasBeginDate();
    long getBeginDate();
    
    // repeated .TRSpeedData speedData = 2;
    java.util.List<TRSpeedData>
        getSpeedDataList();
    TRSpeedData getSpeedData(int index);
    int getSpeedDataCount();
    java.util.List<? extends TRSpeedDataOrBuilder>
        getSpeedDataOrBuilderList();
    TRSpeedDataOrBuilder getSpeedDataOrBuilder(
            int index);
  }
  public static final class TRSpeedDataBlock extends
      com.google.protobuf.GeneratedMessage
      implements TRSpeedDataBlockOrBuilder {
    // Use TRSpeedDataBlock.newBuilder() to construct.
    private TRSpeedDataBlock(Builder builder) {
      super(builder);
    }
    private TRSpeedDataBlock(boolean noInit) {}
    
    private static final TRSpeedDataBlock defaultInstance;
    public static TRSpeedDataBlock getDefaultInstance() {
      return defaultInstance;
    }
    
    public TRSpeedDataBlock getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTRSpeedDataBlock.internal_static_TRSpeedDataBlock_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTRSpeedDataBlock.internal_static_TRSpeedDataBlock_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 beginDate = 1;
    public static final int BEGINDATE_FIELD_NUMBER = 1;
    private long beginDate_;
    public boolean hasBeginDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getBeginDate() {
      return beginDate_;
    }
    
    // repeated .TRSpeedData speedData = 2;
    public static final int SPEEDDATA_FIELD_NUMBER = 2;
    private java.util.List<TRSpeedData> speedData_;
    public java.util.List<TRSpeedData> getSpeedDataList() {
      return speedData_;
    }
    public java.util.List<? extends TRSpeedDataOrBuilder>
        getSpeedDataOrBuilderList() {
      return speedData_;
    }
    public int getSpeedDataCount() {
      return speedData_.size();
    }
    public TRSpeedData getSpeedData(int index) {
      return speedData_.get(index);
    }
    public TRSpeedDataOrBuilder getSpeedDataOrBuilder(
        int index) {
      return speedData_.get(index);
    }
    
    private void initFields() {
      beginDate_ = 0L;
      speedData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasBeginDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSpeedDataCount(); i++) {
        if (!getSpeedData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, beginDate_);
      }
      for (int i = 0; i < speedData_.size(); i++) {
        output.writeMessage(2, speedData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, beginDate_);
      }
      for (int i = 0; i < speedData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, speedData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TRSpeedDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRSpeedDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRSpeedDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRSpeedDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TRSpeedDataBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TRSpeedDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTRSpeedDataBlock.internal_static_TRSpeedDataBlock_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTRSpeedDataBlock.internal_static_TRSpeedDataBlock_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block.LCTRSpeedDataBlock.TRSpeedDataBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSpeedDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        beginDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (speedDataBuilder_ == null) {
          speedData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          speedDataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TRSpeedDataBlock.getDescriptor();
      }
      
      public TRSpeedDataBlock getDefaultInstanceForType() {
        return TRSpeedDataBlock.getDefaultInstance();
      }
      
      public TRSpeedDataBlock build() {
        TRSpeedDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TRSpeedDataBlock buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TRSpeedDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TRSpeedDataBlock buildPartial() {
        TRSpeedDataBlock result = new TRSpeedDataBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.beginDate_ = beginDate_;
        if (speedDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            speedData_ = java.util.Collections.unmodifiableList(speedData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.speedData_ = speedData_;
        } else {
          result.speedData_ = speedDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TRSpeedDataBlock) {
          return mergeFrom((TRSpeedDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TRSpeedDataBlock other) {
        if (other == TRSpeedDataBlock.getDefaultInstance()) return this;
        if (other.hasBeginDate()) {
          setBeginDate(other.getBeginDate());
        }
        if (speedDataBuilder_ == null) {
          if (!other.speedData_.isEmpty()) {
            if (speedData_.isEmpty()) {
              speedData_ = other.speedData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSpeedDataIsMutable();
              speedData_.addAll(other.speedData_);
            }
            onChanged();
          }
        } else {
          if (!other.speedData_.isEmpty()) {
            if (speedDataBuilder_.isEmpty()) {
              speedDataBuilder_.dispose();
              speedDataBuilder_ = null;
              speedData_ = other.speedData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              speedDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSpeedDataFieldBuilder() : null;
            } else {
              speedDataBuilder_.addAllMessages(other.speedData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasBeginDate()) {
          
          return false;
        }
        for (int i = 0; i < getSpeedDataCount(); i++) {
          if (!getSpeedData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              beginDate_ = input.readInt64();
              break;
            }
            case 18: {
              TRSpeedData.Builder subBuilder = TRSpeedData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSpeedData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 beginDate = 1;
      private long beginDate_ ;
      public boolean hasBeginDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getBeginDate() {
        return beginDate_;
      }
      public Builder setBeginDate(long value) {
        bitField0_ |= 0x00000001;
        beginDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearBeginDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        beginDate_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .TRSpeedData speedData = 2;
      private java.util.List<TRSpeedData> speedData_ =
        java.util.Collections.emptyList();
      private void ensureSpeedDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          speedData_ = new java.util.ArrayList<TRSpeedData>(speedData_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          TRSpeedData, TRSpeedData.Builder, TRSpeedDataOrBuilder> speedDataBuilder_;
      
      public java.util.List<TRSpeedData> getSpeedDataList() {
        if (speedDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedData_);
        } else {
          return speedDataBuilder_.getMessageList();
        }
      }
      public int getSpeedDataCount() {
        if (speedDataBuilder_ == null) {
          return speedData_.size();
        } else {
          return speedDataBuilder_.getCount();
        }
      }
      public TRSpeedData getSpeedData(int index) {
        if (speedDataBuilder_ == null) {
          return speedData_.get(index);
        } else {
          return speedDataBuilder_.getMessage(index);
        }
      }
      public Builder setSpeedData(
          int index, TRSpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.set(index, value);
          onChanged();
        } else {
          speedDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSpeedData(
          int index, TRSpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSpeedData(TRSpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.add(value);
          onChanged();
        } else {
          speedDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSpeedData(
          int index, TRSpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.add(index, value);
          onChanged();
        } else {
          speedDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSpeedData(
          TRSpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.add(builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSpeedData(
          int index, TRSpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSpeedData(
          Iterable<? extends TRSpeedData> values) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          super.addAll(values, speedData_);
          onChanged();
        } else {
          speedDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSpeedData() {
        if (speedDataBuilder_ == null) {
          speedData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          speedDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeSpeedData(int index) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.remove(index);
          onChanged();
        } else {
          speedDataBuilder_.remove(index);
        }
        return this;
      }
      public TRSpeedData.Builder getSpeedDataBuilder(
          int index) {
        return getSpeedDataFieldBuilder().getBuilder(index);
      }
      public TRSpeedDataOrBuilder getSpeedDataOrBuilder(
          int index) {
        if (speedDataBuilder_ == null) {
          return speedData_.get(index);  } else {
          return speedDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends TRSpeedDataOrBuilder>
           getSpeedDataOrBuilderList() {
        if (speedDataBuilder_ != null) {
          return speedDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedData_);
        }
      }
      public TRSpeedData.Builder addSpeedDataBuilder() {
        return getSpeedDataFieldBuilder().addBuilder(
            TRSpeedData.getDefaultInstance());
      }
      public TRSpeedData.Builder addSpeedDataBuilder(
          int index) {
        return getSpeedDataFieldBuilder().addBuilder(
            index, TRSpeedData.getDefaultInstance());
      }
      public java.util.List<TRSpeedData.Builder>
           getSpeedDataBuilderList() {
        return getSpeedDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TRSpeedData, TRSpeedData.Builder, TRSpeedDataOrBuilder>
          getSpeedDataFieldBuilder() {
        if (speedDataBuilder_ == null) {
          speedDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TRSpeedData, TRSpeedData.Builder, TRSpeedDataOrBuilder>(
                  speedData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          speedData_ = null;
        }
        return speedDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TRSpeedDataBlock)
    }
    
    static {
      defaultInstance = new TRSpeedDataBlock(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TRSpeedDataBlock)
  }
  
  public interface TRSpeedDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 speed = 1;
    boolean hasSpeed();
    int getSpeed();
    
    // optional int32 status = 2;
    boolean hasStatus();
    int getStatus();
  }
  public static final class TRSpeedData extends
      com.google.protobuf.GeneratedMessage
      implements TRSpeedDataOrBuilder {
    // Use TRSpeedData.newBuilder() to construct.
    private TRSpeedData(Builder builder) {
      super(builder);
    }
    private TRSpeedData(boolean noInit) {}
    
    private static final TRSpeedData defaultInstance;
    public static TRSpeedData getDefaultInstance() {
      return defaultInstance;
    }
    
    public TRSpeedData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCTRSpeedDataBlock.internal_static_TRSpeedData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCTRSpeedDataBlock.internal_static_TRSpeedData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 speed = 1;
    public static final int SPEED_FIELD_NUMBER = 1;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSpeed() {
      return speed_;
    }
    
    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    private void initFields() {
      speed_ = 0;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static TRSpeedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRSpeedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static TRSpeedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRSpeedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static TRSpeedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRSpeedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static TRSpeedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static TRSpeedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TRSpeedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TRSpeedDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCTRSpeedDataBlock.internal_static_TRSpeedData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCTRSpeedDataBlock.internal_static_TRSpeedData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.terminal.query.travelrecorder.block.LCTRSpeedDataBlock.TRSpeedData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TRSpeedData.getDescriptor();
      }
      
      public TRSpeedData getDefaultInstanceForType() {
        return TRSpeedData.getDefaultInstance();
      }
      
      public TRSpeedData build() {
        TRSpeedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private TRSpeedData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        TRSpeedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public TRSpeedData buildPartial() {
        TRSpeedData result = new TRSpeedData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TRSpeedData) {
          return mergeFrom((TRSpeedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(TRSpeedData other) {
        if (other == TRSpeedData.getDefaultInstance()) return this;
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSpeed()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              speed_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 speed = 1;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000001;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TRSpeedData)
    }
    
    static {
      defaultInstance = new TRSpeedData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TRSpeedData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TRSpeedDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TRSpeedDataBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TRSpeedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TRSpeedData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\nJcore/proto/terminal/query/travelrecord" +
      "er/block/java/TRSpeedDataBlock.proto\"F\n\020" +
      "TRSpeedDataBlock\022\021\n\tbeginDate\030\001 \002(\003\022\037\n\ts" +
      "peedData\030\002 \003(\0132\014.TRSpeedData\",\n\013TRSpeedD" +
      "ata\022\r\n\005speed\030\001 \002(\005\022\016\n\006status\030\002 \001(\005Bh\nRco" +
      "m.navinfo.opentsp.platform.location.prot" +
      "ocol.terminal.query.travelrecorder.block" +
      "B\022LCTRSpeedDataBlock"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TRSpeedDataBlock_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TRSpeedDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TRSpeedDataBlock_descriptor,
              new String[] { "BeginDate", "SpeedData", },
              TRSpeedDataBlock.class,
              TRSpeedDataBlock.Builder.class);
          internal_static_TRSpeedData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TRSpeedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TRSpeedData_descriptor,
              new String[] { "Speed", "Status", },
              TRSpeedData.class,
              TRSpeedData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
