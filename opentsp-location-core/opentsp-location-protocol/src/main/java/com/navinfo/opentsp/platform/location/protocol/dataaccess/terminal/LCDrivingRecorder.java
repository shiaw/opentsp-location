// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/dataaccess/terminal/java/DrivingRecorder.proto

package com.navinfo.opentsp.platform.location.protocol.dataaccess.terminal;

public final class LCDrivingRecorder {
  private LCDrivingRecorder() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DrivingRecorderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 terminalId = 1;
    boolean hasTerminalId();
    long getTerminalId();
    
    // required .DrivingRecorder.RecorderOperation recorderCode = 2;
    boolean hasRecorderCode();
    DrivingRecorder.RecorderOperation getRecorderCode();
    
    // required bytes recorderContent = 3;
    boolean hasRecorderContent();
    com.google.protobuf.ByteString getRecorderContent();
  }
  public static final class DrivingRecorder extends
      com.google.protobuf.GeneratedMessage
      implements DrivingRecorderOrBuilder {
    // Use DrivingRecorder.newBuilder() to construct.
    private DrivingRecorder(Builder builder) {
      super(builder);
    }
    private DrivingRecorder(boolean noInit) {}
    
    private static final DrivingRecorder defaultInstance;
    public static DrivingRecorder getDefaultInstance() {
      return defaultInstance;
    }
    
    public DrivingRecorder getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCDrivingRecorder.internal_static_DrivingRecorder_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCDrivingRecorder.internal_static_DrivingRecorder_fieldAccessorTable;
    }
    
    public enum RecorderOperation
        implements com.google.protobuf.ProtocolMessageEnum {
      TRVersion(0, 160800),
      TRVersionRes(1, 160801),
      TRSpeedCollect(2, 160802),
      TRSpeedCollectionRes(3, 160803),
      TRDoubtCollect(4, 160804),
      TRDoubtCollectionRes(5, 160805),
      TRPulseCollect(6, 160806),
      TRPulseCollectionRes(7, 160807),
      TRSetPulseValue(8, 160808),
      TRCollectDriverInfo(9, 160809),
      TRCollectDriverInfoRes(10, 160810),
      TRCollectRealTime(11, 160811),
      TRCollectRealTimeRes(12, 160812),
      TRCollectMileage(13, 160813),
      TRCollectMileageRes(14, 160814),
      TRCollectVehicleInfo(15, 160815),
      TRCollectVehicleInfoRes(16, 160816),
      TRCollectStatusSignal(17, 160817),
      TRCollectStatusSignalRes(18, 160818),
      TRCollectOnlyCode(19, 160819),
      TRCollectOnlyCodeRes(20, 160820),
      TRCollectLocationData(21, 160821),
      TRCollectLocationDataRes(22, 160822),
      TRCollectOvertimeRecord(23, 160823),
      TRCollectOvertimeRecordRes(24, 160824),
      TRCollectDriverIdentity(25, 160825),
      TRCollectDriverIdentityRes(26, 160826),
      TRCollectPowerRecord(27, 160827),
      TRCollectPowerRecordRes(28, 160828),
      TRCollectParaModifyRecord(29, 160829),
      TRCollectParaModifyRecordRes(30, 160830),
      TRCollectSpeedLog(31, 160831),
      TRCollectSpeedLogRes(32, 160832),
      TRSetVehicleInfo(33, 160833),
      TRSetInstallDate(34, 160834),
      TRSetStatusSignal(35, 160835),
      TRSetCurrentDate(36, 160836),
      TRSetMileage(37, 160837),
      ;
      
      public static final int TRVersion_VALUE = 160800;
      public static final int TRVersionRes_VALUE = 160801;
      public static final int TRSpeedCollect_VALUE = 160802;
      public static final int TRSpeedCollectionRes_VALUE = 160803;
      public static final int TRDoubtCollect_VALUE = 160804;
      public static final int TRDoubtCollectionRes_VALUE = 160805;
      public static final int TRPulseCollect_VALUE = 160806;
      public static final int TRPulseCollectionRes_VALUE = 160807;
      public static final int TRSetPulseValue_VALUE = 160808;
      public static final int TRCollectDriverInfo_VALUE = 160809;
      public static final int TRCollectDriverInfoRes_VALUE = 160810;
      public static final int TRCollectRealTime_VALUE = 160811;
      public static final int TRCollectRealTimeRes_VALUE = 160812;
      public static final int TRCollectMileage_VALUE = 160813;
      public static final int TRCollectMileageRes_VALUE = 160814;
      public static final int TRCollectVehicleInfo_VALUE = 160815;
      public static final int TRCollectVehicleInfoRes_VALUE = 160816;
      public static final int TRCollectStatusSignal_VALUE = 160817;
      public static final int TRCollectStatusSignalRes_VALUE = 160818;
      public static final int TRCollectOnlyCode_VALUE = 160819;
      public static final int TRCollectOnlyCodeRes_VALUE = 160820;
      public static final int TRCollectLocationData_VALUE = 160821;
      public static final int TRCollectLocationDataRes_VALUE = 160822;
      public static final int TRCollectOvertimeRecord_VALUE = 160823;
      public static final int TRCollectOvertimeRecordRes_VALUE = 160824;
      public static final int TRCollectDriverIdentity_VALUE = 160825;
      public static final int TRCollectDriverIdentityRes_VALUE = 160826;
      public static final int TRCollectPowerRecord_VALUE = 160827;
      public static final int TRCollectPowerRecordRes_VALUE = 160828;
      public static final int TRCollectParaModifyRecord_VALUE = 160829;
      public static final int TRCollectParaModifyRecordRes_VALUE = 160830;
      public static final int TRCollectSpeedLog_VALUE = 160831;
      public static final int TRCollectSpeedLogRes_VALUE = 160832;
      public static final int TRSetVehicleInfo_VALUE = 160833;
      public static final int TRSetInstallDate_VALUE = 160834;
      public static final int TRSetStatusSignal_VALUE = 160835;
      public static final int TRSetCurrentDate_VALUE = 160836;
      public static final int TRSetMileage_VALUE = 160837;
      
      
      public final int getNumber() { return value; }
      
      public static RecorderOperation valueOf(int value) {
        switch (value) {
          case 160800: return TRVersion;
          case 160801: return TRVersionRes;
          case 160802: return TRSpeedCollect;
          case 160803: return TRSpeedCollectionRes;
          case 160804: return TRDoubtCollect;
          case 160805: return TRDoubtCollectionRes;
          case 160806: return TRPulseCollect;
          case 160807: return TRPulseCollectionRes;
          case 160808: return TRSetPulseValue;
          case 160809: return TRCollectDriverInfo;
          case 160810: return TRCollectDriverInfoRes;
          case 160811: return TRCollectRealTime;
          case 160812: return TRCollectRealTimeRes;
          case 160813: return TRCollectMileage;
          case 160814: return TRCollectMileageRes;
          case 160815: return TRCollectVehicleInfo;
          case 160816: return TRCollectVehicleInfoRes;
          case 160817: return TRCollectStatusSignal;
          case 160818: return TRCollectStatusSignalRes;
          case 160819: return TRCollectOnlyCode;
          case 160820: return TRCollectOnlyCodeRes;
          case 160821: return TRCollectLocationData;
          case 160822: return TRCollectLocationDataRes;
          case 160823: return TRCollectOvertimeRecord;
          case 160824: return TRCollectOvertimeRecordRes;
          case 160825: return TRCollectDriverIdentity;
          case 160826: return TRCollectDriverIdentityRes;
          case 160827: return TRCollectPowerRecord;
          case 160828: return TRCollectPowerRecordRes;
          case 160829: return TRCollectParaModifyRecord;
          case 160830: return TRCollectParaModifyRecordRes;
          case 160831: return TRCollectSpeedLog;
          case 160832: return TRCollectSpeedLogRes;
          case 160833: return TRSetVehicleInfo;
          case 160834: return TRSetInstallDate;
          case 160835: return TRSetStatusSignal;
          case 160836: return TRSetCurrentDate;
          case 160837: return TRSetMileage;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RecorderOperation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RecorderOperation>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RecorderOperation>() {
              public RecorderOperation findValueByNumber(int number) {
                return RecorderOperation.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return DrivingRecorder.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final RecorderOperation[] VALUES = {
        TRVersion, TRVersionRes, TRSpeedCollect, TRSpeedCollectionRes, TRDoubtCollect, TRDoubtCollectionRes, TRPulseCollect, TRPulseCollectionRes, TRSetPulseValue, TRCollectDriverInfo, TRCollectDriverInfoRes, TRCollectRealTime, TRCollectRealTimeRes, TRCollectMileage, TRCollectMileageRes, TRCollectVehicleInfo, TRCollectVehicleInfoRes, TRCollectStatusSignal, TRCollectStatusSignalRes, TRCollectOnlyCode, TRCollectOnlyCodeRes, TRCollectLocationData, TRCollectLocationDataRes, TRCollectOvertimeRecord, TRCollectOvertimeRecordRes, TRCollectDriverIdentity, TRCollectDriverIdentityRes, TRCollectPowerRecord, TRCollectPowerRecordRes, TRCollectParaModifyRecord, TRCollectParaModifyRecordRes, TRCollectSpeedLog, TRCollectSpeedLogRes, TRSetVehicleInfo, TRSetInstallDate, TRSetStatusSignal, TRSetCurrentDate, TRSetMileage, 
      };
      
      public static RecorderOperation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private RecorderOperation(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:DrivingRecorder.RecorderOperation)
    }
    
    private int bitField0_;
    // required int64 terminalId = 1;
    public static final int TERMINALID_FIELD_NUMBER = 1;
    private long terminalId_;
    public boolean hasTerminalId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTerminalId() {
      return terminalId_;
    }
    
    // required .DrivingRecorder.RecorderOperation recorderCode = 2;
    public static final int RECORDERCODE_FIELD_NUMBER = 2;
    private RecorderOperation recorderCode_;
    public boolean hasRecorderCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public RecorderOperation getRecorderCode() {
      return recorderCode_;
    }
    
    // required bytes recorderContent = 3;
    public static final int RECORDERCONTENT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString recorderContent_;
    public boolean hasRecorderContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getRecorderContent() {
      return recorderContent_;
    }
    
    private void initFields() {
      terminalId_ = 0L;
      recorderCode_ = RecorderOperation.TRVersion;
      recorderContent_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTerminalId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRecorderCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRecorderContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, terminalId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, recorderCode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, recorderContent_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, terminalId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, recorderCode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, recorderContent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DrivingRecorder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DrivingRecorder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DrivingRecorder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DrivingRecorder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DrivingRecorder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DrivingRecorder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DrivingRecorder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DrivingRecorder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DrivingRecorder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DrivingRecorder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DrivingRecorder prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DrivingRecorderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCDrivingRecorder.internal_static_DrivingRecorder_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCDrivingRecorder.internal_static_DrivingRecorder_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.dataaccess.terminal.LCDrivingRecorder.DrivingRecorder.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        terminalId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        recorderCode_ = RecorderOperation.TRVersion;
        bitField0_ = (bitField0_ & ~0x00000002);
        recorderContent_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DrivingRecorder.getDescriptor();
      }
      
      public DrivingRecorder getDefaultInstanceForType() {
        return DrivingRecorder.getDefaultInstance();
      }
      
      public DrivingRecorder build() {
        DrivingRecorder result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DrivingRecorder buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DrivingRecorder result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DrivingRecorder buildPartial() {
        DrivingRecorder result = new DrivingRecorder(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.terminalId_ = terminalId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.recorderCode_ = recorderCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.recorderContent_ = recorderContent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DrivingRecorder) {
          return mergeFrom((DrivingRecorder)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DrivingRecorder other) {
        if (other == DrivingRecorder.getDefaultInstance()) return this;
        if (other.hasTerminalId()) {
          setTerminalId(other.getTerminalId());
        }
        if (other.hasRecorderCode()) {
          setRecorderCode(other.getRecorderCode());
        }
        if (other.hasRecorderContent()) {
          setRecorderContent(other.getRecorderContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTerminalId()) {
          
          return false;
        }
        if (!hasRecorderCode()) {
          
          return false;
        }
        if (!hasRecorderContent()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              terminalId_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              RecorderOperation value = RecorderOperation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                recorderCode_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              recorderContent_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 terminalId = 1;
      private long terminalId_ ;
      public boolean hasTerminalId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTerminalId() {
        return terminalId_;
      }
      public Builder setTerminalId(long value) {
        bitField0_ |= 0x00000001;
        terminalId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTerminalId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        terminalId_ = 0L;
        onChanged();
        return this;
      }
      
      // required .DrivingRecorder.RecorderOperation recorderCode = 2;
      private RecorderOperation recorderCode_ = RecorderOperation.TRVersion;
      public boolean hasRecorderCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public RecorderOperation getRecorderCode() {
        return recorderCode_;
      }
      public Builder setRecorderCode(RecorderOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        recorderCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecorderCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recorderCode_ = RecorderOperation.TRVersion;
        onChanged();
        return this;
      }
      
      // required bytes recorderContent = 3;
      private com.google.protobuf.ByteString recorderContent_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasRecorderContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getRecorderContent() {
        return recorderContent_;
      }
      public Builder setRecorderContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        recorderContent_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecorderContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recorderContent_ = getDefaultInstance().getRecorderContent();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DrivingRecorder)
    }
    
    static {
      defaultInstance = new DrivingRecorder(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DrivingRecorder)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DrivingRecorder_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DrivingRecorder_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n9core/proto/dataaccess/terminal/java/Dr" +
      "ivingRecorder.proto\"\227\t\n\017DrivingRecorder\022" +
      "\022\n\nterminalId\030\001 \002(\003\0228\n\014recorderCode\030\002 \002(" +
      "\0162\".DrivingRecorder.RecorderOperation\022\027\n" +
      "\017recorderContent\030\003 \002(\014\"\234\010\n\021RecorderOpera" +
      "tion\022\017\n\tTRVersion\020\240\350\t\022\022\n\014TRVersionRes\020\241\350" +
      "\t\022\024\n\016TRSpeedCollect\020\242\350\t\022\032\n\024TRSpeedCollec" +
      "tionRes\020\243\350\t\022\024\n\016TRDoubtCollect\020\244\350\t\022\032\n\024TRD" +
      "oubtCollectionRes\020\245\350\t\022\024\n\016TRPulseCollect\020" +
      "\246\350\t\022\032\n\024TRPulseCollectionRes\020\247\350\t\022\025\n\017TRSet",
      "PulseValue\020\250\350\t\022\031\n\023TRCollectDriverInfo\020\251\350" +
      "\t\022\034\n\026TRCollectDriverInfoRes\020\252\350\t\022\027\n\021TRCol" +
      "lectRealTime\020\253\350\t\022\032\n\024TRCollectRealTimeRes" +
      "\020\254\350\t\022\026\n\020TRCollectMileage\020\255\350\t\022\031\n\023TRCollec" +
      "tMileageRes\020\256\350\t\022\032\n\024TRCollectVehicleInfo\020" +
      "\257\350\t\022\035\n\027TRCollectVehicleInfoRes\020\260\350\t\022\033\n\025TR" +
      "CollectStatusSignal\020\261\350\t\022\036\n\030TRCollectStat" +
      "usSignalRes\020\262\350\t\022\027\n\021TRCollectOnlyCode\020\263\350\t" +
      "\022\032\n\024TRCollectOnlyCodeRes\020\264\350\t\022\033\n\025TRCollec" +
      "tLocationData\020\265\350\t\022\036\n\030TRCollectLocationDa",
      "taRes\020\266\350\t\022\035\n\027TRCollectOvertimeRecord\020\267\350\t" +
      "\022 \n\032TRCollectOvertimeRecordRes\020\270\350\t\022\035\n\027TR" +
      "CollectDriverIdentity\020\271\350\t\022 \n\032TRCollectDr" +
      "iverIdentityRes\020\272\350\t\022\032\n\024TRCollectPowerRec" +
      "ord\020\273\350\t\022\035\n\027TRCollectPowerRecordRes\020\274\350\t\022\037" +
      "\n\031TRCollectParaModifyRecord\020\275\350\t\022\"\n\034TRCol" +
      "lectParaModifyRecordRes\020\276\350\t\022\027\n\021TRCollect" +
      "SpeedLog\020\277\350\t\022\032\n\024TRCollectSpeedLogRes\020\300\350\t" +
      "\022\026\n\020TRSetVehicleInfo\020\301\350\t\022\026\n\020TRSetInstall" +
      "Date\020\302\350\t\022\027\n\021TRSetStatusSignal\020\303\350\t\022\026\n\020TRS",
      "etCurrentDate\020\304\350\t\022\022\n\014TRSetMileage\020\305\350\tBW\n" +
      "Bcom.navinfo.opentsp.platform.location.p" +
      "rotocol.dataaccess.terminalB\021LCDrivingRe" +
      "corder"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DrivingRecorder_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DrivingRecorder_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DrivingRecorder_descriptor,
              new String[] { "TerminalId", "RecorderCode", "RecorderContent", },
              DrivingRecorder.class,
              DrivingRecorder.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
