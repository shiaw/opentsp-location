// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/common/java/FaultInfo.proto

package com.navinfo.opentsp.platform.location.protocol.common;

public final class LCFaultInfo {
  private LCFaultInfo() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FaultInfoOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

    // optional .GpsLocationData gpsLocationData = 1;
    boolean hasGpsLocationData();
    GpsLocationData getGpsLocationData();
    GpsLocationDataOrBuilder getGpsLocationDataOrBuilder();

    // repeated .FaultListData faultListData = 2;
    java.util.List<FaultListData>
    getFaultListDataList();
    FaultListData getFaultListData(int index);
    int getFaultListDataCount();
    java.util.List<? extends FaultListDataOrBuilder>
    getFaultListDataOrBuilderList();
    FaultListDataOrBuilder getFaultListDataOrBuilder(
            int index);
  }
  public static final class FaultInfo extends
          com.google.protobuf.GeneratedMessage
          implements FaultInfoOrBuilder {
    // Use FaultInfo.newBuilder() to construct.
    private FaultInfo(Builder builder) {
      super(builder);
    }
    private FaultInfo(boolean noInit) {}

    private static final FaultInfo defaultInstance;
    public static FaultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FaultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return LCFaultInfo.internal_static_FaultInfo_descriptor;
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return LCFaultInfo.internal_static_FaultInfo_fieldAccessorTable;
    }

    private int bitField0_;
    // optional .GpsLocationData gpsLocationData = 1;
    public static final int GPSLOCATIONDATA_FIELD_NUMBER = 1;
    private GpsLocationData gpsLocationData_;
    public boolean hasGpsLocationData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public GpsLocationData getGpsLocationData() {
      return gpsLocationData_;
    }
    public GpsLocationDataOrBuilder getGpsLocationDataOrBuilder() {
      return gpsLocationData_;
    }

    // repeated .FaultListData faultListData = 2;
    public static final int FAULTLISTDATA_FIELD_NUMBER = 2;
    private java.util.List<FaultListData> faultListData_;
    public java.util.List<FaultListData> getFaultListDataList() {
      return faultListData_;
    }
    public java.util.List<? extends FaultListDataOrBuilder>
    getFaultListDataOrBuilderList() {
      return faultListData_;
    }
    public int getFaultListDataCount() {
      return faultListData_.size();
    }
    public FaultListData getFaultListData(int index) {
      return faultListData_.get(index);
    }
    public FaultListDataOrBuilder getFaultListDataOrBuilder(
            int index) {
      return faultListData_.get(index);
    }

    private void initFields() {
      gpsLocationData_ = GpsLocationData.getDefaultInstance();
      faultListData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasGpsLocationData()) {
        if (!getGpsLocationData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, gpsLocationData_);
      }
      for (int i = 0; i < faultListData_.size(); i++) {
        output.writeMessage(2, faultListData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, gpsLocationData_);
      }
      for (int i = 0; i < faultListData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, faultListData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FaultInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }
    public static FaultInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FaultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
            implements FaultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return LCFaultInfo.internal_static_FaultInfo_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return LCFaultInfo.internal_static_FaultInfo_fieldAccessorTable;
      }

      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCFaultInfo.FaultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGpsLocationDataFieldBuilder();
          getFaultListDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = GpsLocationData.getDefaultInstance();
        } else {
          gpsLocationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (faultListDataBuilder_ == null) {
          faultListData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          faultListDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return FaultInfo.getDescriptor();
      }

      public FaultInfo getDefaultInstanceForType() {
        return FaultInfo.getDefaultInstance();
      }

      public FaultInfo build() {
        FaultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private FaultInfo buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
        FaultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public FaultInfo buildPartial() {
        FaultInfo result = new FaultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (gpsLocationDataBuilder_ == null) {
          result.gpsLocationData_ = gpsLocationData_;
        } else {
          result.gpsLocationData_ = gpsLocationDataBuilder_.build();
        }
        if (faultListDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            faultListData_ = java.util.Collections.unmodifiableList(faultListData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.faultListData_ = faultListData_;
        } else {
          result.faultListData_ = faultListDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FaultInfo) {
          return mergeFrom((FaultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FaultInfo other) {
        if (other == FaultInfo.getDefaultInstance()) return this;
        if (other.hasGpsLocationData()) {
          mergeGpsLocationData(other.getGpsLocationData());
        }
        if (faultListDataBuilder_ == null) {
          if (!other.faultListData_.isEmpty()) {
            if (faultListData_.isEmpty()) {
              faultListData_ = other.faultListData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFaultListDataIsMutable();
              faultListData_.addAll(other.faultListData_);
            }
            onChanged();
          }
        } else {
          if (!other.faultListData_.isEmpty()) {
            if (faultListDataBuilder_.isEmpty()) {
              faultListDataBuilder_.dispose();
              faultListDataBuilder_ = null;
              faultListData_ = other.faultListData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              faultListDataBuilder_ =
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                              getFaultListDataFieldBuilder() : null;
            } else {
              faultListDataBuilder_.addAllMessages(other.faultListData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasGpsLocationData()) {
          if (!getGpsLocationData().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder(
                        this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              GpsLocationData.Builder subBuilder = GpsLocationData.newBuilder();
              if (hasGpsLocationData()) {
                subBuilder.mergeFrom(getGpsLocationData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGpsLocationData(subBuilder.buildPartial());
              break;
            }
            case 18: {
              FaultListData.Builder subBuilder = FaultListData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFaultListData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional .GpsLocationData gpsLocationData = 1;
      private GpsLocationData gpsLocationData_ = GpsLocationData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder> gpsLocationDataBuilder_;
      public boolean hasGpsLocationData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public GpsLocationData getGpsLocationData() {
        if (gpsLocationDataBuilder_ == null) {
          return gpsLocationData_;
        } else {
          return gpsLocationDataBuilder_.getMessage();
        }
      }
      public Builder setGpsLocationData(GpsLocationData value) {
        if (gpsLocationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpsLocationData_ = value;
          onChanged();
        } else {
          gpsLocationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setGpsLocationData(
              GpsLocationData.Builder builderForValue) {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = builderForValue.build();
          onChanged();
        } else {
          gpsLocationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeGpsLocationData(GpsLocationData value) {
        if (gpsLocationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
                  gpsLocationData_ != GpsLocationData.getDefaultInstance()) {
            gpsLocationData_ =
                    GpsLocationData.newBuilder(gpsLocationData_).mergeFrom(value).buildPartial();
          } else {
            gpsLocationData_ = value;
          }
          onChanged();
        } else {
          gpsLocationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearGpsLocationData() {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = GpsLocationData.getDefaultInstance();
          onChanged();
        } else {
          gpsLocationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public GpsLocationData.Builder getGpsLocationDataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGpsLocationDataFieldBuilder().getBuilder();
      }
      public GpsLocationDataOrBuilder getGpsLocationDataOrBuilder() {
        if (gpsLocationDataBuilder_ != null) {
          return gpsLocationDataBuilder_.getMessageOrBuilder();
        } else {
          return gpsLocationData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
              GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder>
      getGpsLocationDataFieldBuilder() {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder>(
                  gpsLocationData_,
                  getParentForChildren(),
                  isClean());
          gpsLocationData_ = null;
        }
        return gpsLocationDataBuilder_;
      }

      // repeated .FaultListData faultListData = 2;
      private java.util.List<FaultListData> faultListData_ =
              java.util.Collections.emptyList();
      private void ensureFaultListDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          faultListData_ = new java.util.ArrayList<FaultListData>(faultListData_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
              FaultListData, FaultListData.Builder, FaultListDataOrBuilder> faultListDataBuilder_;

      public java.util.List<FaultListData> getFaultListDataList() {
        if (faultListDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(faultListData_);
        } else {
          return faultListDataBuilder_.getMessageList();
        }
      }
      public int getFaultListDataCount() {
        if (faultListDataBuilder_ == null) {
          return faultListData_.size();
        } else {
          return faultListDataBuilder_.getCount();
        }
      }
      public FaultListData getFaultListData(int index) {
        if (faultListDataBuilder_ == null) {
          return faultListData_.get(index);
        } else {
          return faultListDataBuilder_.getMessage(index);
        }
      }
      public Builder setFaultListData(
              int index, FaultListData value) {
        if (faultListDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultListDataIsMutable();
          faultListData_.set(index, value);
          onChanged();
        } else {
          faultListDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFaultListData(
              int index, FaultListData.Builder builderForValue) {
        if (faultListDataBuilder_ == null) {
          ensureFaultListDataIsMutable();
          faultListData_.set(index, builderForValue.build());
          onChanged();
        } else {
          faultListDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFaultListData(FaultListData value) {
        if (faultListDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultListDataIsMutable();
          faultListData_.add(value);
          onChanged();
        } else {
          faultListDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFaultListData(
              int index, FaultListData value) {
        if (faultListDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultListDataIsMutable();
          faultListData_.add(index, value);
          onChanged();
        } else {
          faultListDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFaultListData(
              FaultListData.Builder builderForValue) {
        if (faultListDataBuilder_ == null) {
          ensureFaultListDataIsMutable();
          faultListData_.add(builderForValue.build());
          onChanged();
        } else {
          faultListDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFaultListData(
              int index, FaultListData.Builder builderForValue) {
        if (faultListDataBuilder_ == null) {
          ensureFaultListDataIsMutable();
          faultListData_.add(index, builderForValue.build());
          onChanged();
        } else {
          faultListDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFaultListData(
              Iterable<? extends FaultListData> values) {
        if (faultListDataBuilder_ == null) {
          ensureFaultListDataIsMutable();
          super.addAll(values, faultListData_);
          onChanged();
        } else {
          faultListDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFaultListData() {
        if (faultListDataBuilder_ == null) {
          faultListData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          faultListDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeFaultListData(int index) {
        if (faultListDataBuilder_ == null) {
          ensureFaultListDataIsMutable();
          faultListData_.remove(index);
          onChanged();
        } else {
          faultListDataBuilder_.remove(index);
        }
        return this;
      }
      public FaultListData.Builder getFaultListDataBuilder(
              int index) {
        return getFaultListDataFieldBuilder().getBuilder(index);
      }
      public FaultListDataOrBuilder getFaultListDataOrBuilder(
              int index) {
        if (faultListDataBuilder_ == null) {
          return faultListData_.get(index);  } else {
          return faultListDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends FaultListDataOrBuilder>
      getFaultListDataOrBuilderList() {
        if (faultListDataBuilder_ != null) {
          return faultListDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(faultListData_);
        }
      }
      public FaultListData.Builder addFaultListDataBuilder() {
        return getFaultListDataFieldBuilder().addBuilder(
                FaultListData.getDefaultInstance());
      }
      public FaultListData.Builder addFaultListDataBuilder(
              int index) {
        return getFaultListDataFieldBuilder().addBuilder(
                index, FaultListData.getDefaultInstance());
      }
      public java.util.List<FaultListData.Builder>
      getFaultListDataBuilderList() {
        return getFaultListDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
              FaultListData, FaultListData.Builder, FaultListDataOrBuilder>
      getFaultListDataFieldBuilder() {
        if (faultListDataBuilder_ == null) {
          faultListDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  FaultListData, FaultListData.Builder, FaultListDataOrBuilder>(
                  faultListData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          faultListData_ = null;
        }
        return faultListDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:FaultInfo)
    }

    static {
      defaultInstance = new FaultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FaultInfo)
  }

  public interface GpsLocationDataOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

    // required int64 gpsTime = 1;
    boolean hasGpsTime();
    long getGpsTime();

    // optional int32 latitude = 2;
    boolean hasLatitude();
    int getLatitude();

    // optional int32 longitude = 3;
    boolean hasLongitude();
    int getLongitude();

    // optional int32 height = 4;
    boolean hasHeight();
    int getHeight();

    // optional int32 direction = 5;
    boolean hasDirection();
    int getDirection();

    // optional int32 speed = 6;
    boolean hasSpeed();
    int getSpeed();
  }
  public static final class GpsLocationData extends
          com.google.protobuf.GeneratedMessage
          implements GpsLocationDataOrBuilder {
    // Use GpsLocationData.newBuilder() to construct.
    private GpsLocationData(Builder builder) {
      super(builder);
    }
    private GpsLocationData(boolean noInit) {}

    private static final GpsLocationData defaultInstance;
    public static GpsLocationData getDefaultInstance() {
      return defaultInstance;
    }

    public GpsLocationData getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return LCFaultInfo.internal_static_GpsLocationData_descriptor;
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return LCFaultInfo.internal_static_GpsLocationData_fieldAccessorTable;
    }

    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getGpsTime() {
      return gpsTime_;
    }

    // optional int32 latitude = 2;
    public static final int LATITUDE_FIELD_NUMBER = 2;
    private int latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLatitude() {
      return latitude_;
    }

    // optional int32 longitude = 3;
    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private int longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLongitude() {
      return longitude_;
    }

    // optional int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getHeight() {
      return height_;
    }

    // optional int32 direction = 5;
    public static final int DIRECTION_FIELD_NUMBER = 5;
    private int direction_;
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getDirection() {
      return direction_;
    }

    // optional int32 speed = 6;
    public static final int SPEED_FIELD_NUMBER = 6;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getSpeed() {
      return speed_;
    }

    private void initFields() {
      gpsTime_ = 0L;
      latitude_ = 0;
      longitude_ = 0;
      height_ = 0;
      direction_ = 0;
      speed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, direction_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, speed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, height_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, direction_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, speed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GpsLocationData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GpsLocationData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static GpsLocationData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GpsLocationData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static GpsLocationData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GpsLocationData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }
    public static GpsLocationData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GpsLocationData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GpsLocationData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GpsLocationData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GpsLocationData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
            implements GpsLocationDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return LCFaultInfo.internal_static_GpsLocationData_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return LCFaultInfo.internal_static_GpsLocationData_fieldAccessorTable;
      }

      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCFaultInfo.GpsLocationData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        direction_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return GpsLocationData.getDescriptor();
      }

      public GpsLocationData getDefaultInstanceForType() {
        return GpsLocationData.getDefaultInstance();
      }

      public GpsLocationData build() {
        GpsLocationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private GpsLocationData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
        GpsLocationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public GpsLocationData buildPartial() {
        GpsLocationData result = new GpsLocationData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.direction_ = direction_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.speed_ = speed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GpsLocationData) {
          return mergeFrom((GpsLocationData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GpsLocationData other) {
        if (other == GpsLocationData.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGpsTime()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder(
                        this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              latitude_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              longitude_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              direction_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              speed_ = input.readInt32();
              break;
            }
          }
        }
      }

      private int bitField0_;

      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getGpsTime() {
        return gpsTime_;
      }
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 latitude = 2;
      private int latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000002;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0;
        onChanged();
        return this;
      }

      // optional int32 longitude = 3;
      private int longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000004;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0;
        onChanged();
        return this;
      }

      // optional int32 height = 4;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }

      // optional int32 direction = 5;
      private int direction_ ;
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getDirection() {
        return direction_;
      }
      public Builder setDirection(int value) {
        bitField0_ |= 0x00000010;
        direction_ = value;
        onChanged();
        return this;
      }
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000010);
        direction_ = 0;
        onChanged();
        return this;
      }

      // optional int32 speed = 6;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000020;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GpsLocationData)
    }

    static {
      defaultInstance = new GpsLocationData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GpsLocationData)
  }

  public interface FaultListDataOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

    // optional int32 faultType = 1;
    boolean hasFaultType();
    int getFaultType();

    // optional int32 subSpeed = 2;
    boolean hasSubSpeed();
    int getSubSpeed();

    // optional int32 accelerator = 3;
    boolean hasAccelerator();
    int getAccelerator();

    // optional int32 brakeSignal = 4;
    boolean hasBrakeSignal();
    int getBrakeSignal();

    // optional int32 rotation = 5;
    boolean hasRotation();
    int getRotation();

    // optional int32 engineTurbochargedPressure = 6;
    boolean hasEngineTurbochargedPressure();
    int getEngineTurbochargedPressure();

    // optional int32 engineIntakePressure = 7;
    boolean hasEngineIntakePressure();
    int getEngineIntakePressure();

    // optional int32 engineExhaustTemperature = 8;
    boolean hasEngineExhaustTemperature();
    int getEngineExhaustTemperature();

    // optional int32 engineCoolantTemperature = 9;
    boolean hasEngineCoolantTemperature();
    int getEngineCoolantTemperature();

    // optional int32 accelerationRate = 10;
    boolean hasAccelerationRate();
    int getAccelerationRate();

    // optional int32 gear = 11;
    boolean hasGear();
    int getGear();

    // optional int32 engineOutputTorque = 12;
    boolean hasEngineOutputTorque();
    int getEngineOutputTorque();

    // optional int32 load = 13;
    boolean hasLoad();
    int getLoad();

    // optional int32 engineLoad = 14;
    boolean hasEngineLoad();
    int getEngineLoad();

    // optional int32 vehicleAcceleration = 15;
    boolean hasVehicleAcceleration();
    int getVehicleAcceleration();

    // optional int32 vehicleSpeedReduction = 16;
    boolean hasVehicleSpeedReduction();
    int getVehicleSpeedReduction();

    // optional int32 faultCodeCount = 17;
    boolean hasFaultCodeCount();
    int getFaultCodeCount();

    // repeated .FaultItem faultItem = 18;
    java.util.List<FaultItem>
    getFaultItemList();
    FaultItem getFaultItem(int index);
    int getFaultItemCount();
    java.util.List<? extends FaultItemOrBuilder>
    getFaultItemOrBuilderList();
    FaultItemOrBuilder getFaultItemOrBuilder(
            int index);
  }
  public static final class FaultListData extends
          com.google.protobuf.GeneratedMessage
          implements FaultListDataOrBuilder {
    // Use FaultListData.newBuilder() to construct.
    private FaultListData(Builder builder) {
      super(builder);
    }
    private FaultListData(boolean noInit) {}

    private static final FaultListData defaultInstance;
    public static FaultListData getDefaultInstance() {
      return defaultInstance;
    }

    public FaultListData getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return LCFaultInfo.internal_static_FaultListData_descriptor;
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return LCFaultInfo.internal_static_FaultListData_fieldAccessorTable;
    }

    private int bitField0_;
    // optional int32 faultType = 1;
    public static final int FAULTTYPE_FIELD_NUMBER = 1;
    private int faultType_;
    public boolean hasFaultType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getFaultType() {
      return faultType_;
    }

    // optional int32 subSpeed = 2;
    public static final int SUBSPEED_FIELD_NUMBER = 2;
    private int subSpeed_;
    public boolean hasSubSpeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSubSpeed() {
      return subSpeed_;
    }

    // optional int32 accelerator = 3;
    public static final int ACCELERATOR_FIELD_NUMBER = 3;
    private int accelerator_;
    public boolean hasAccelerator() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAccelerator() {
      return accelerator_;
    }

    // optional int32 brakeSignal = 4;
    public static final int BRAKESIGNAL_FIELD_NUMBER = 4;
    private int brakeSignal_;
    public boolean hasBrakeSignal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getBrakeSignal() {
      return brakeSignal_;
    }

    // optional int32 rotation = 5;
    public static final int ROTATION_FIELD_NUMBER = 5;
    private int rotation_;
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRotation() {
      return rotation_;
    }

    // optional int32 engineTurbochargedPressure = 6;
    public static final int ENGINETURBOCHARGEDPRESSURE_FIELD_NUMBER = 6;
    private int engineTurbochargedPressure_;
    public boolean hasEngineTurbochargedPressure() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getEngineTurbochargedPressure() {
      return engineTurbochargedPressure_;
    }

    // optional int32 engineIntakePressure = 7;
    public static final int ENGINEINTAKEPRESSURE_FIELD_NUMBER = 7;
    private int engineIntakePressure_;
    public boolean hasEngineIntakePressure() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getEngineIntakePressure() {
      return engineIntakePressure_;
    }

    // optional int32 engineExhaustTemperature = 8;
    public static final int ENGINEEXHAUSTTEMPERATURE_FIELD_NUMBER = 8;
    private int engineExhaustTemperature_;
    public boolean hasEngineExhaustTemperature() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getEngineExhaustTemperature() {
      return engineExhaustTemperature_;
    }

    // optional int32 engineCoolantTemperature = 9;
    public static final int ENGINECOOLANTTEMPERATURE_FIELD_NUMBER = 9;
    private int engineCoolantTemperature_;
    public boolean hasEngineCoolantTemperature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getEngineCoolantTemperature() {
      return engineCoolantTemperature_;
    }

    // optional int32 accelerationRate = 10;
    public static final int ACCELERATIONRATE_FIELD_NUMBER = 10;
    private int accelerationRate_;
    public boolean hasAccelerationRate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getAccelerationRate() {
      return accelerationRate_;
    }

    // optional int32 gear = 11;
    public static final int GEAR_FIELD_NUMBER = 11;
    private int gear_;
    public boolean hasGear() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getGear() {
      return gear_;
    }

    // optional int32 engineOutputTorque = 12;
    public static final int ENGINEOUTPUTTORQUE_FIELD_NUMBER = 12;
    private int engineOutputTorque_;
    public boolean hasEngineOutputTorque() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getEngineOutputTorque() {
      return engineOutputTorque_;
    }

    // optional int32 load = 13;
    public static final int LOAD_FIELD_NUMBER = 13;
    private int load_;
    public boolean hasLoad() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getLoad() {
      return load_;
    }

    // optional int32 engineLoad = 14;
    public static final int ENGINELOAD_FIELD_NUMBER = 14;
    private int engineLoad_;
    public boolean hasEngineLoad() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getEngineLoad() {
      return engineLoad_;
    }

    // optional int32 vehicleAcceleration = 15;
    public static final int VEHICLEACCELERATION_FIELD_NUMBER = 15;
    private int vehicleAcceleration_;
    public boolean hasVehicleAcceleration() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getVehicleAcceleration() {
      return vehicleAcceleration_;
    }

    // optional int32 vehicleSpeedReduction = 16;
    public static final int VEHICLESPEEDREDUCTION_FIELD_NUMBER = 16;
    private int vehicleSpeedReduction_;
    public boolean hasVehicleSpeedReduction() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getVehicleSpeedReduction() {
      return vehicleSpeedReduction_;
    }

    // optional int32 faultCodeCount = 17;
    public static final int FAULTCODECOUNT_FIELD_NUMBER = 17;
    private int faultCodeCount_;
    public boolean hasFaultCodeCount() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getFaultCodeCount() {
      return faultCodeCount_;
    }

    // repeated .FaultItem faultItem = 18;
    public static final int FAULTITEM_FIELD_NUMBER = 18;
    private java.util.List<FaultItem> faultItem_;
    public java.util.List<FaultItem> getFaultItemList() {
      return faultItem_;
    }
    public java.util.List<? extends FaultItemOrBuilder>
    getFaultItemOrBuilderList() {
      return faultItem_;
    }
    public int getFaultItemCount() {
      return faultItem_.size();
    }
    public FaultItem getFaultItem(int index) {
      return faultItem_.get(index);
    }
    public FaultItemOrBuilder getFaultItemOrBuilder(
            int index) {
      return faultItem_.get(index);
    }

    private void initFields() {
      faultType_ = 0;
      subSpeed_ = 0;
      accelerator_ = 0;
      brakeSignal_ = 0;
      rotation_ = 0;
      engineTurbochargedPressure_ = 0;
      engineIntakePressure_ = 0;
      engineExhaustTemperature_ = 0;
      engineCoolantTemperature_ = 0;
      accelerationRate_ = 0;
      gear_ = 0;
      engineOutputTorque_ = 0;
      load_ = 0;
      engineLoad_ = 0;
      vehicleAcceleration_ = 0;
      vehicleSpeedReduction_ = 0;
      faultCodeCount_ = 0;
      faultItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, faultType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, subSpeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, accelerator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, brakeSignal_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rotation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, engineTurbochargedPressure_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, engineIntakePressure_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, engineExhaustTemperature_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, engineCoolantTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, accelerationRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, gear_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, load_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, engineLoad_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, vehicleAcceleration_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, vehicleSpeedReduction_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, faultCodeCount_);
      }
      for (int i = 0; i < faultItem_.size(); i++) {
        output.writeMessage(18, faultItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, faultType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, subSpeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, accelerator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, brakeSignal_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, rotation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, engineTurbochargedPressure_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, engineIntakePressure_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(8, engineExhaustTemperature_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(9, engineCoolantTemperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(10, accelerationRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(11, gear_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(12, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(13, load_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(14, engineLoad_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(15, vehicleAcceleration_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(16, vehicleSpeedReduction_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(17, faultCodeCount_);
      }
      for (int i = 0; i < faultItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(18, faultItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FaultListData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultListData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultListData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultListData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultListData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultListData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }
    public static FaultListData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultListData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultListData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultListData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FaultListData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
            implements FaultListDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return LCFaultInfo.internal_static_FaultListData_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return LCFaultInfo.internal_static_FaultListData_fieldAccessorTable;
      }

      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCFaultInfo.FaultListData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFaultItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        faultType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accelerator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        brakeSignal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        engineTurbochargedPressure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        engineIntakePressure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        engineExhaustTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        engineCoolantTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        accelerationRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        gear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        engineOutputTorque_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        load_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        engineLoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        vehicleAcceleration_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        vehicleSpeedReduction_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        faultCodeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (faultItemBuilder_ == null) {
          faultItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          faultItemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return FaultListData.getDescriptor();
      }

      public FaultListData getDefaultInstanceForType() {
        return FaultListData.getDefaultInstance();
      }

      public FaultListData build() {
        FaultListData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private FaultListData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
        FaultListData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public FaultListData buildPartial() {
        FaultListData result = new FaultListData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.faultType_ = faultType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subSpeed_ = subSpeed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accelerator_ = accelerator_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.brakeSignal_ = brakeSignal_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rotation_ = rotation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.engineTurbochargedPressure_ = engineTurbochargedPressure_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.engineIntakePressure_ = engineIntakePressure_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.engineExhaustTemperature_ = engineExhaustTemperature_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.engineCoolantTemperature_ = engineCoolantTemperature_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.accelerationRate_ = accelerationRate_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gear_ = gear_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.engineOutputTorque_ = engineOutputTorque_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.load_ = load_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.engineLoad_ = engineLoad_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.vehicleAcceleration_ = vehicleAcceleration_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.vehicleSpeedReduction_ = vehicleSpeedReduction_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.faultCodeCount_ = faultCodeCount_;
        if (faultItemBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            faultItem_ = java.util.Collections.unmodifiableList(faultItem_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.faultItem_ = faultItem_;
        } else {
          result.faultItem_ = faultItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FaultListData) {
          return mergeFrom((FaultListData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FaultListData other) {
        if (other == FaultListData.getDefaultInstance()) return this;
        if (other.hasFaultType()) {
          setFaultType(other.getFaultType());
        }
        if (other.hasSubSpeed()) {
          setSubSpeed(other.getSubSpeed());
        }
        if (other.hasAccelerator()) {
          setAccelerator(other.getAccelerator());
        }
        if (other.hasBrakeSignal()) {
          setBrakeSignal(other.getBrakeSignal());
        }
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        if (other.hasEngineTurbochargedPressure()) {
          setEngineTurbochargedPressure(other.getEngineTurbochargedPressure());
        }
        if (other.hasEngineIntakePressure()) {
          setEngineIntakePressure(other.getEngineIntakePressure());
        }
        if (other.hasEngineExhaustTemperature()) {
          setEngineExhaustTemperature(other.getEngineExhaustTemperature());
        }
        if (other.hasEngineCoolantTemperature()) {
          setEngineCoolantTemperature(other.getEngineCoolantTemperature());
        }
        if (other.hasAccelerationRate()) {
          setAccelerationRate(other.getAccelerationRate());
        }
        if (other.hasGear()) {
          setGear(other.getGear());
        }
        if (other.hasEngineOutputTorque()) {
          setEngineOutputTorque(other.getEngineOutputTorque());
        }
        if (other.hasLoad()) {
          setLoad(other.getLoad());
        }
        if (other.hasEngineLoad()) {
          setEngineLoad(other.getEngineLoad());
        }
        if (other.hasVehicleAcceleration()) {
          setVehicleAcceleration(other.getVehicleAcceleration());
        }
        if (other.hasVehicleSpeedReduction()) {
          setVehicleSpeedReduction(other.getVehicleSpeedReduction());
        }
        if (other.hasFaultCodeCount()) {
          setFaultCodeCount(other.getFaultCodeCount());
        }
        if (faultItemBuilder_ == null) {
          if (!other.faultItem_.isEmpty()) {
            if (faultItem_.isEmpty()) {
              faultItem_ = other.faultItem_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureFaultItemIsMutable();
              faultItem_.addAll(other.faultItem_);
            }
            onChanged();
          }
        } else {
          if (!other.faultItem_.isEmpty()) {
            if (faultItemBuilder_.isEmpty()) {
              faultItemBuilder_.dispose();
              faultItemBuilder_ = null;
              faultItem_ = other.faultItem_;
              bitField0_ = (bitField0_ & ~0x00020000);
              faultItemBuilder_ =
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                              getFaultItemFieldBuilder() : null;
            } else {
              faultItemBuilder_.addAllMessages(other.faultItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder(
                        this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              faultType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subSpeed_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accelerator_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              brakeSignal_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rotation_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              engineTurbochargedPressure_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              engineIntakePressure_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              engineExhaustTemperature_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              engineCoolantTemperature_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              accelerationRate_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              gear_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              engineOutputTorque_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              load_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              engineLoad_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              vehicleAcceleration_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              vehicleSpeedReduction_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              faultCodeCount_ = input.readInt32();
              break;
            }
            case 146: {
              FaultItem.Builder subBuilder = FaultItem.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFaultItem(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional int32 faultType = 1;
      private int faultType_ ;
      public boolean hasFaultType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getFaultType() {
        return faultType_;
      }
      public Builder setFaultType(int value) {
        bitField0_ |= 0x00000001;
        faultType_ = value;
        onChanged();
        return this;
      }
      public Builder clearFaultType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        faultType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 subSpeed = 2;
      private int subSpeed_ ;
      public boolean hasSubSpeed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSubSpeed() {
        return subSpeed_;
      }
      public Builder setSubSpeed(int value) {
        bitField0_ |= 0x00000002;
        subSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subSpeed_ = 0;
        onChanged();
        return this;
      }

      // optional int32 accelerator = 3;
      private int accelerator_ ;
      public boolean hasAccelerator() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAccelerator() {
        return accelerator_;
      }
      public Builder setAccelerator(int value) {
        bitField0_ |= 0x00000004;
        accelerator_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccelerator() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accelerator_ = 0;
        onChanged();
        return this;
      }

      // optional int32 brakeSignal = 4;
      private int brakeSignal_ ;
      public boolean hasBrakeSignal() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBrakeSignal() {
        return brakeSignal_;
      }
      public Builder setBrakeSignal(int value) {
        bitField0_ |= 0x00000008;
        brakeSignal_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrakeSignal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        brakeSignal_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rotation = 5;
      private int rotation_ ;
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRotation() {
        return rotation_;
      }
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000010;
        rotation_ = value;
        onChanged();
        return this;
      }
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rotation_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineTurbochargedPressure = 6;
      private int engineTurbochargedPressure_ ;
      public boolean hasEngineTurbochargedPressure() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getEngineTurbochargedPressure() {
        return engineTurbochargedPressure_;
      }
      public Builder setEngineTurbochargedPressure(int value) {
        bitField0_ |= 0x00000020;
        engineTurbochargedPressure_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineTurbochargedPressure() {
        bitField0_ = (bitField0_ & ~0x00000020);
        engineTurbochargedPressure_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineIntakePressure = 7;
      private int engineIntakePressure_ ;
      public boolean hasEngineIntakePressure() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getEngineIntakePressure() {
        return engineIntakePressure_;
      }
      public Builder setEngineIntakePressure(int value) {
        bitField0_ |= 0x00000040;
        engineIntakePressure_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineIntakePressure() {
        bitField0_ = (bitField0_ & ~0x00000040);
        engineIntakePressure_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineExhaustTemperature = 8;
      private int engineExhaustTemperature_ ;
      public boolean hasEngineExhaustTemperature() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getEngineExhaustTemperature() {
        return engineExhaustTemperature_;
      }
      public Builder setEngineExhaustTemperature(int value) {
        bitField0_ |= 0x00000080;
        engineExhaustTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineExhaustTemperature() {
        bitField0_ = (bitField0_ & ~0x00000080);
        engineExhaustTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineCoolantTemperature = 9;
      private int engineCoolantTemperature_ ;
      public boolean hasEngineCoolantTemperature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getEngineCoolantTemperature() {
        return engineCoolantTemperature_;
      }
      public Builder setEngineCoolantTemperature(int value) {
        bitField0_ |= 0x00000100;
        engineCoolantTemperature_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineCoolantTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        engineCoolantTemperature_ = 0;
        onChanged();
        return this;
      }

      // optional int32 accelerationRate = 10;
      private int accelerationRate_ ;
      public boolean hasAccelerationRate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getAccelerationRate() {
        return accelerationRate_;
      }
      public Builder setAccelerationRate(int value) {
        bitField0_ |= 0x00000200;
        accelerationRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccelerationRate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        accelerationRate_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gear = 11;
      private int gear_ ;
      public boolean hasGear() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getGear() {
        return gear_;
      }
      public Builder setGear(int value) {
        bitField0_ |= 0x00000400;
        gear_ = value;
        onChanged();
        return this;
      }
      public Builder clearGear() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gear_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineOutputTorque = 12;
      private int engineOutputTorque_ ;
      public boolean hasEngineOutputTorque() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getEngineOutputTorque() {
        return engineOutputTorque_;
      }
      public Builder setEngineOutputTorque(int value) {
        bitField0_ |= 0x00000800;
        engineOutputTorque_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineOutputTorque() {
        bitField0_ = (bitField0_ & ~0x00000800);
        engineOutputTorque_ = 0;
        onChanged();
        return this;
      }

      // optional int32 load = 13;
      private int load_ ;
      public boolean hasLoad() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getLoad() {
        return load_;
      }
      public Builder setLoad(int value) {
        bitField0_ |= 0x00001000;
        load_ = value;
        onChanged();
        return this;
      }
      public Builder clearLoad() {
        bitField0_ = (bitField0_ & ~0x00001000);
        load_ = 0;
        onChanged();
        return this;
      }

      // optional int32 engineLoad = 14;
      private int engineLoad_ ;
      public boolean hasEngineLoad() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getEngineLoad() {
        return engineLoad_;
      }
      public Builder setEngineLoad(int value) {
        bitField0_ |= 0x00002000;
        engineLoad_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineLoad() {
        bitField0_ = (bitField0_ & ~0x00002000);
        engineLoad_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vehicleAcceleration = 15;
      private int vehicleAcceleration_ ;
      public boolean hasVehicleAcceleration() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getVehicleAcceleration() {
        return vehicleAcceleration_;
      }
      public Builder setVehicleAcceleration(int value) {
        bitField0_ |= 0x00004000;
        vehicleAcceleration_ = value;
        onChanged();
        return this;
      }
      public Builder clearVehicleAcceleration() {
        bitField0_ = (bitField0_ & ~0x00004000);
        vehicleAcceleration_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vehicleSpeedReduction = 16;
      private int vehicleSpeedReduction_ ;
      public boolean hasVehicleSpeedReduction() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getVehicleSpeedReduction() {
        return vehicleSpeedReduction_;
      }
      public Builder setVehicleSpeedReduction(int value) {
        bitField0_ |= 0x00008000;
        vehicleSpeedReduction_ = value;
        onChanged();
        return this;
      }
      public Builder clearVehicleSpeedReduction() {
        bitField0_ = (bitField0_ & ~0x00008000);
        vehicleSpeedReduction_ = 0;
        onChanged();
        return this;
      }

      // optional int32 faultCodeCount = 17;
      private int faultCodeCount_ ;
      public boolean hasFaultCodeCount() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getFaultCodeCount() {
        return faultCodeCount_;
      }
      public Builder setFaultCodeCount(int value) {
        bitField0_ |= 0x00010000;
        faultCodeCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearFaultCodeCount() {
        bitField0_ = (bitField0_ & ~0x00010000);
        faultCodeCount_ = 0;
        onChanged();
        return this;
      }

      // repeated .FaultItem faultItem = 18;
      private java.util.List<FaultItem> faultItem_ =
              java.util.Collections.emptyList();
      private void ensureFaultItemIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          faultItem_ = new java.util.ArrayList<FaultItem>(faultItem_);
          bitField0_ |= 0x00020000;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
              FaultItem, FaultItem.Builder, FaultItemOrBuilder> faultItemBuilder_;

      public java.util.List<FaultItem> getFaultItemList() {
        if (faultItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(faultItem_);
        } else {
          return faultItemBuilder_.getMessageList();
        }
      }
      public int getFaultItemCount() {
        if (faultItemBuilder_ == null) {
          return faultItem_.size();
        } else {
          return faultItemBuilder_.getCount();
        }
      }
      public FaultItem getFaultItem(int index) {
        if (faultItemBuilder_ == null) {
          return faultItem_.get(index);
        } else {
          return faultItemBuilder_.getMessage(index);
        }
      }
      public Builder setFaultItem(
              int index, FaultItem value) {
        if (faultItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultItemIsMutable();
          faultItem_.set(index, value);
          onChanged();
        } else {
          faultItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFaultItem(
              int index, FaultItem.Builder builderForValue) {
        if (faultItemBuilder_ == null) {
          ensureFaultItemIsMutable();
          faultItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          faultItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFaultItem(FaultItem value) {
        if (faultItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultItemIsMutable();
          faultItem_.add(value);
          onChanged();
        } else {
          faultItemBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFaultItem(
              int index, FaultItem value) {
        if (faultItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFaultItemIsMutable();
          faultItem_.add(index, value);
          onChanged();
        } else {
          faultItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFaultItem(
              FaultItem.Builder builderForValue) {
        if (faultItemBuilder_ == null) {
          ensureFaultItemIsMutable();
          faultItem_.add(builderForValue.build());
          onChanged();
        } else {
          faultItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFaultItem(
              int index, FaultItem.Builder builderForValue) {
        if (faultItemBuilder_ == null) {
          ensureFaultItemIsMutable();
          faultItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          faultItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFaultItem(
              Iterable<? extends FaultItem> values) {
        if (faultItemBuilder_ == null) {
          ensureFaultItemIsMutable();
          super.addAll(values, faultItem_);
          onChanged();
        } else {
          faultItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFaultItem() {
        if (faultItemBuilder_ == null) {
          faultItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          faultItemBuilder_.clear();
        }
        return this;
      }
      public Builder removeFaultItem(int index) {
        if (faultItemBuilder_ == null) {
          ensureFaultItemIsMutable();
          faultItem_.remove(index);
          onChanged();
        } else {
          faultItemBuilder_.remove(index);
        }
        return this;
      }
      public FaultItem.Builder getFaultItemBuilder(
              int index) {
        return getFaultItemFieldBuilder().getBuilder(index);
      }
      public FaultItemOrBuilder getFaultItemOrBuilder(
              int index) {
        if (faultItemBuilder_ == null) {
          return faultItem_.get(index);  } else {
          return faultItemBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends FaultItemOrBuilder>
      getFaultItemOrBuilderList() {
        if (faultItemBuilder_ != null) {
          return faultItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(faultItem_);
        }
      }
      public FaultItem.Builder addFaultItemBuilder() {
        return getFaultItemFieldBuilder().addBuilder(
                FaultItem.getDefaultInstance());
      }
      public FaultItem.Builder addFaultItemBuilder(
              int index) {
        return getFaultItemFieldBuilder().addBuilder(
                index, FaultItem.getDefaultInstance());
      }
      public java.util.List<FaultItem.Builder>
      getFaultItemBuilderList() {
        return getFaultItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
              FaultItem, FaultItem.Builder, FaultItemOrBuilder>
      getFaultItemFieldBuilder() {
        if (faultItemBuilder_ == null) {
          faultItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  FaultItem, FaultItem.Builder, FaultItemOrBuilder>(
                  faultItem_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          faultItem_ = null;
        }
        return faultItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:FaultListData)
    }

    static {
      defaultInstance = new FaultListData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FaultListData)
  }

  public interface FaultItemOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

    // optional int32 faultAddr = 1;
    boolean hasFaultAddr();
    int getFaultAddr();

    // optional int32 SPN = 2;
    boolean hasSPN();
    int getSPN();

    // optional int32 FMI = 3;
    boolean hasFMI();
    int getFMI();
  }
  public static final class FaultItem extends
          com.google.protobuf.GeneratedMessage
          implements FaultItemOrBuilder {
    // Use FaultItem.newBuilder() to construct.
    private FaultItem(Builder builder) {
      super(builder);
    }
    private FaultItem(boolean noInit) {}

    private static final FaultItem defaultInstance;
    public static FaultItem getDefaultInstance() {
      return defaultInstance;
    }

    public FaultItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return LCFaultInfo.internal_static_FaultItem_descriptor;
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return LCFaultInfo.internal_static_FaultItem_fieldAccessorTable;
    }

    private int bitField0_;
    // optional int32 faultAddr = 1;
    public static final int FAULTADDR_FIELD_NUMBER = 1;
    private int faultAddr_;
    public boolean hasFaultAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getFaultAddr() {
      return faultAddr_;
    }

    // optional int32 SPN = 2;
    public static final int SPN_FIELD_NUMBER = 2;
    private int sPN_;
    public boolean hasSPN() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSPN() {
      return sPN_;
    }

    // optional int32 FMI = 3;
    public static final int FMI_FIELD_NUMBER = 3;
    private int fMI_;
    public boolean hasFMI() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getFMI() {
      return fMI_;
    }

    private void initFields() {
      faultAddr_ = 0;
      sPN_ = 0;
      fMI_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, faultAddr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sPN_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fMI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, faultAddr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, sPN_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, fMI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FaultItem parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultItem parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultItem parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FaultItem parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
              .buildParsed();
    }
    public static FaultItem parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultItem parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }
    public static FaultItem parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultItem parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FaultItem parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FaultItem parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
              .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FaultItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
            implements FaultItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return LCFaultInfo.internal_static_FaultItem_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return LCFaultInfo.internal_static_FaultItem_fieldAccessorTable;
      }

      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCFaultInfo.FaultItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        faultAddr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sPN_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fMI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return FaultItem.getDescriptor();
      }

      public FaultItem getDefaultInstanceForType() {
        return FaultItem.getDefaultInstance();
      }

      public FaultItem build() {
        FaultItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private FaultItem buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
        FaultItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
        }
        return result;
      }

      public FaultItem buildPartial() {
        FaultItem result = new FaultItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.faultAddr_ = faultAddr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sPN_ = sPN_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fMI_ = fMI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FaultItem) {
          return mergeFrom((FaultItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FaultItem other) {
        if (other == FaultItem.getDefaultInstance()) return this;
        if (other.hasFaultAddr()) {
          setFaultAddr(other.getFaultAddr());
        }
        if (other.hasSPN()) {
          setSPN(other.getSPN());
        }
        if (other.hasFMI()) {
          setFMI(other.getFMI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder(
                        this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              faultAddr_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sPN_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fMI_ = input.readInt32();
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional int32 faultAddr = 1;
      private int faultAddr_ ;
      public boolean hasFaultAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getFaultAddr() {
        return faultAddr_;
      }
      public Builder setFaultAddr(int value) {
        bitField0_ |= 0x00000001;
        faultAddr_ = value;
        onChanged();
        return this;
      }
      public Builder clearFaultAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        faultAddr_ = 0;
        onChanged();
        return this;
      }

      // optional int32 SPN = 2;
      private int sPN_ ;
      public boolean hasSPN() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSPN() {
        return sPN_;
      }
      public Builder setSPN(int value) {
        bitField0_ |= 0x00000002;
        sPN_ = value;
        onChanged();
        return this;
      }
      public Builder clearSPN() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sPN_ = 0;
        onChanged();
        return this;
      }

      // optional int32 FMI = 3;
      private int fMI_ ;
      public boolean hasFMI() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getFMI() {
        return fMI_;
      }
      public Builder setFMI(int value) {
        bitField0_ |= 0x00000004;
        fMI_ = value;
        onChanged();
        return this;
      }
      public Builder clearFMI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fMI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FaultItem)
    }

    static {
      defaultInstance = new FaultItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FaultItem)
  }

  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_FaultInfo_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_FaultInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_GpsLocationData_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_GpsLocationData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_FaultListData_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_FaultListData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
          internal_static_FaultItem_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_FaultItem_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    String[] descriptorData = {
            "\n&core/proto/common/java/FaultInfo.proto" +
                    "\"]\n\tFaultInfo\022)\n\017gpsLocationData\030\001 \001(\0132\020" +
                    ".GpsLocationData\022%\n\rfaultListData\030\002 \003(\0132" +
                    "\016.FaultListData\"y\n\017GpsLocationData\022\017\n\007gp" +
                    "sTime\030\001 \002(\003\022\020\n\010latitude\030\002 \001(\005\022\021\n\tlongitu" +
                    "de\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\021\n\tdirection\030\005 " +
                    "\001(\005\022\r\n\005speed\030\006 \001(\005\"\317\003\n\rFaultListData\022\021\n\t" +
                    "faultType\030\001 \001(\005\022\020\n\010subSpeed\030\002 \001(\005\022\023\n\013acc" +
                    "elerator\030\003 \001(\005\022\023\n\013brakeSignal\030\004 \001(\005\022\020\n\010r" +
                    "otation\030\005 \001(\005\022\"\n\032engineTurbochargedPress",
            "ure\030\006 \001(\005\022\034\n\024engineIntakePressure\030\007 \001(\005\022" +
                    " \n\030engineExhaustTemperature\030\010 \001(\005\022 \n\030eng" +
                    "ineCoolantTemperature\030\t \001(\005\022\030\n\020accelerat" +
                    "ionRate\030\n \001(\005\022\014\n\004gear\030\013 \001(\005\022\032\n\022engineOut" +
                    "putTorque\030\014 \001(\005\022\014\n\004load\030\r \001(\005\022\022\n\nengineL" +
                    "oad\030\016 \001(\005\022\033\n\023vehicleAcceleration\030\017 \001(\005\022\035" +
                    "\n\025vehicleSpeedReduction\030\020 \001(\005\022\026\n\016faultCo" +
                    "deCount\030\021 \001(\005\022\035\n\tfaultItem\030\022 \003(\0132\n.Fault" +
                    "Item\"8\n\tFaultItem\022\021\n\tfaultAddr\030\001 \001(\005\022\013\n\003" +
                    "SPN\030\002 \001(\005\022\013\n\003FMI\030\003 \001(\005BD\n5com.navinfo.op",
            "entsp.platform.location.protocol.commonB" +
                    "\013LCFaultInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                internal_static_FaultInfo_descriptor =
                        getDescriptor().getMessageTypes().get(0);
                internal_static_FaultInfo_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_FaultInfo_descriptor,
                        new String[] { "GpsLocationData", "FaultListData", },
                        FaultInfo.class,
                        FaultInfo.Builder.class);
                internal_static_GpsLocationData_descriptor =
                        getDescriptor().getMessageTypes().get(1);
                internal_static_GpsLocationData_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_GpsLocationData_descriptor,
                        new String[] { "GpsTime", "Latitude", "Longitude", "Height", "Direction", "Speed", },
                        GpsLocationData.class,
                        GpsLocationData.Builder.class);
                internal_static_FaultListData_descriptor =
                        getDescriptor().getMessageTypes().get(2);
                internal_static_FaultListData_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_FaultListData_descriptor,
                        new String[] { "FaultType", "SubSpeed", "Accelerator", "BrakeSignal", "Rotation", "EngineTurbochargedPressure", "EngineIntakePressure", "EngineExhaustTemperature", "EngineCoolantTemperature", "AccelerationRate", "Gear", "EngineOutputTorque", "Load", "EngineLoad", "VehicleAcceleration", "VehicleSpeedReduction", "FaultCodeCount", "FaultItem", },
                        FaultListData.class,
                        FaultListData.Builder.class);
                internal_static_FaultItem_descriptor =
                        getDescriptor().getMessageTypes().get(3);
                internal_static_FaultItem_fieldAccessorTable = new
                        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_FaultItem_descriptor,
                        new String[] { "FaultAddr", "SPN", "FMI", },
                        FaultItem.class,
                        FaultItem.Builder.class);
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
