// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/proto/common/java/SpecialRealTimeData.proto

package com.navinfo.opentsp.platform.location.protocol.common;

public final class LCConcentratedRealTimeData {
  private LCConcentratedRealTimeData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SpecialRealTimeDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .GpsLocationData gpsLocationData = 1;
    boolean hasGpsLocationData();
    GpsLocationData getGpsLocationData();
    GpsLocationDataOrBuilder getGpsLocationDataOrBuilder();
    
    // required int32 dataUnitCount = 2;
    boolean hasDataUnitCount();
    int getDataUnitCount();
    
    // repeated .RealTimeDataUnit realTimeDataUnit = 3;
    java.util.List<RealTimeDataUnit>
        getRealTimeDataUnitList();
    RealTimeDataUnit getRealTimeDataUnit(int index);
    int getRealTimeDataUnitCount();
    java.util.List<? extends RealTimeDataUnitOrBuilder>
        getRealTimeDataUnitOrBuilderList();
    RealTimeDataUnitOrBuilder getRealTimeDataUnitOrBuilder(
            int index);
  }
  public static final class SpecialRealTimeData extends
      com.google.protobuf.GeneratedMessage
      implements SpecialRealTimeDataOrBuilder {
    // Use SpecialRealTimeData.newBuilder() to construct.
    private SpecialRealTimeData(Builder builder) {
      super(builder);
    }
    private SpecialRealTimeData(boolean noInit) {}
    
    private static final SpecialRealTimeData defaultInstance;
    public static SpecialRealTimeData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpecialRealTimeData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCConcentratedRealTimeData.internal_static_SpecialRealTimeData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCConcentratedRealTimeData.internal_static_SpecialRealTimeData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .GpsLocationData gpsLocationData = 1;
    public static final int GPSLOCATIONDATA_FIELD_NUMBER = 1;
    private GpsLocationData gpsLocationData_;
    public boolean hasGpsLocationData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public GpsLocationData getGpsLocationData() {
      return gpsLocationData_;
    }
    public GpsLocationDataOrBuilder getGpsLocationDataOrBuilder() {
      return gpsLocationData_;
    }
    
    // required int32 dataUnitCount = 2;
    public static final int DATAUNITCOUNT_FIELD_NUMBER = 2;
    private int dataUnitCount_;
    public boolean hasDataUnitCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDataUnitCount() {
      return dataUnitCount_;
    }
    
    // repeated .RealTimeDataUnit realTimeDataUnit = 3;
    public static final int REALTIMEDATAUNIT_FIELD_NUMBER = 3;
    private java.util.List<RealTimeDataUnit> realTimeDataUnit_;
    public java.util.List<RealTimeDataUnit> getRealTimeDataUnitList() {
      return realTimeDataUnit_;
    }
    public java.util.List<? extends RealTimeDataUnitOrBuilder>
        getRealTimeDataUnitOrBuilderList() {
      return realTimeDataUnit_;
    }
    public int getRealTimeDataUnitCount() {
      return realTimeDataUnit_.size();
    }
    public RealTimeDataUnit getRealTimeDataUnit(int index) {
      return realTimeDataUnit_.get(index);
    }
    public RealTimeDataUnitOrBuilder getRealTimeDataUnitOrBuilder(
        int index) {
      return realTimeDataUnit_.get(index);
    }
    
    private void initFields() {
      gpsLocationData_ = GpsLocationData.getDefaultInstance();
      dataUnitCount_ = 0;
      realTimeDataUnit_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasGpsLocationData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataUnitCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getGpsLocationData().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, gpsLocationData_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, dataUnitCount_);
      }
      for (int i = 0; i < realTimeDataUnit_.size(); i++) {
        output.writeMessage(3, realTimeDataUnit_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, gpsLocationData_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dataUnitCount_);
      }
      for (int i = 0; i < realTimeDataUnit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, realTimeDataUnit_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static SpecialRealTimeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SpecialRealTimeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SpecialRealTimeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SpecialRealTimeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SpecialRealTimeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SpecialRealTimeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SpecialRealTimeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SpecialRealTimeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SpecialRealTimeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SpecialRealTimeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SpecialRealTimeData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SpecialRealTimeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCConcentratedRealTimeData.internal_static_SpecialRealTimeData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCConcentratedRealTimeData.internal_static_SpecialRealTimeData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCConcentratedRealTimeData.SpecialRealTimeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGpsLocationDataFieldBuilder();
          getRealTimeDataUnitFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = GpsLocationData.getDefaultInstance();
        } else {
          gpsLocationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        dataUnitCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (realTimeDataUnitBuilder_ == null) {
          realTimeDataUnit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          realTimeDataUnitBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SpecialRealTimeData.getDescriptor();
      }
      
      public SpecialRealTimeData getDefaultInstanceForType() {
        return SpecialRealTimeData.getDefaultInstance();
      }
      
      public SpecialRealTimeData build() {
        SpecialRealTimeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private SpecialRealTimeData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        SpecialRealTimeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public SpecialRealTimeData buildPartial() {
        SpecialRealTimeData result = new SpecialRealTimeData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (gpsLocationDataBuilder_ == null) {
          result.gpsLocationData_ = gpsLocationData_;
        } else {
          result.gpsLocationData_ = gpsLocationDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dataUnitCount_ = dataUnitCount_;
        if (realTimeDataUnitBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            realTimeDataUnit_ = java.util.Collections.unmodifiableList(realTimeDataUnit_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.realTimeDataUnit_ = realTimeDataUnit_;
        } else {
          result.realTimeDataUnit_ = realTimeDataUnitBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SpecialRealTimeData) {
          return mergeFrom((SpecialRealTimeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SpecialRealTimeData other) {
        if (other == SpecialRealTimeData.getDefaultInstance()) return this;
        if (other.hasGpsLocationData()) {
          mergeGpsLocationData(other.getGpsLocationData());
        }
        if (other.hasDataUnitCount()) {
          setDataUnitCount(other.getDataUnitCount());
        }
        if (realTimeDataUnitBuilder_ == null) {
          if (!other.realTimeDataUnit_.isEmpty()) {
            if (realTimeDataUnit_.isEmpty()) {
              realTimeDataUnit_ = other.realTimeDataUnit_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRealTimeDataUnitIsMutable();
              realTimeDataUnit_.addAll(other.realTimeDataUnit_);
            }
            onChanged();
          }
        } else {
          if (!other.realTimeDataUnit_.isEmpty()) {
            if (realTimeDataUnitBuilder_.isEmpty()) {
              realTimeDataUnitBuilder_.dispose();
              realTimeDataUnitBuilder_ = null;
              realTimeDataUnit_ = other.realTimeDataUnit_;
              bitField0_ = (bitField0_ & ~0x00000004);
              realTimeDataUnitBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRealTimeDataUnitFieldBuilder() : null;
            } else {
              realTimeDataUnitBuilder_.addAllMessages(other.realTimeDataUnit_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasGpsLocationData()) {
          
          return false;
        }
        if (!hasDataUnitCount()) {
          
          return false;
        }
        if (!getGpsLocationData().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              GpsLocationData.Builder subBuilder = GpsLocationData.newBuilder();
              if (hasGpsLocationData()) {
                subBuilder.mergeFrom(getGpsLocationData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGpsLocationData(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dataUnitCount_ = input.readInt32();
              break;
            }
            case 26: {
              RealTimeDataUnit.Builder subBuilder = RealTimeDataUnit.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRealTimeDataUnit(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .GpsLocationData gpsLocationData = 1;
      private GpsLocationData gpsLocationData_ = GpsLocationData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder> gpsLocationDataBuilder_;
      public boolean hasGpsLocationData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public GpsLocationData getGpsLocationData() {
        if (gpsLocationDataBuilder_ == null) {
          return gpsLocationData_;
        } else {
          return gpsLocationDataBuilder_.getMessage();
        }
      }
      public Builder setGpsLocationData(GpsLocationData value) {
        if (gpsLocationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpsLocationData_ = value;
          onChanged();
        } else {
          gpsLocationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setGpsLocationData(
          GpsLocationData.Builder builderForValue) {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = builderForValue.build();
          onChanged();
        } else {
          gpsLocationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeGpsLocationData(GpsLocationData value) {
        if (gpsLocationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              gpsLocationData_ != GpsLocationData.getDefaultInstance()) {
            gpsLocationData_ =
              GpsLocationData.newBuilder(gpsLocationData_).mergeFrom(value).buildPartial();
          } else {
            gpsLocationData_ = value;
          }
          onChanged();
        } else {
          gpsLocationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearGpsLocationData() {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationData_ = GpsLocationData.getDefaultInstance();
          onChanged();
        } else {
          gpsLocationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public GpsLocationData.Builder getGpsLocationDataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGpsLocationDataFieldBuilder().getBuilder();
      }
      public GpsLocationDataOrBuilder getGpsLocationDataOrBuilder() {
        if (gpsLocationDataBuilder_ != null) {
          return gpsLocationDataBuilder_.getMessageOrBuilder();
        } else {
          return gpsLocationData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder>
          getGpsLocationDataFieldBuilder() {
        if (gpsLocationDataBuilder_ == null) {
          gpsLocationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GpsLocationData, GpsLocationData.Builder, GpsLocationDataOrBuilder>(
                  gpsLocationData_,
                  getParentForChildren(),
                  isClean());
          gpsLocationData_ = null;
        }
        return gpsLocationDataBuilder_;
      }
      
      // required int32 dataUnitCount = 2;
      private int dataUnitCount_ ;
      public boolean hasDataUnitCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDataUnitCount() {
        return dataUnitCount_;
      }
      public Builder setDataUnitCount(int value) {
        bitField0_ |= 0x00000002;
        dataUnitCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearDataUnitCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataUnitCount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .RealTimeDataUnit realTimeDataUnit = 3;
      private java.util.List<RealTimeDataUnit> realTimeDataUnit_ =
        java.util.Collections.emptyList();
      private void ensureRealTimeDataUnitIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          realTimeDataUnit_ = new java.util.ArrayList<RealTimeDataUnit>(realTimeDataUnit_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          RealTimeDataUnit, RealTimeDataUnit.Builder, RealTimeDataUnitOrBuilder> realTimeDataUnitBuilder_;
      
      public java.util.List<RealTimeDataUnit> getRealTimeDataUnitList() {
        if (realTimeDataUnitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(realTimeDataUnit_);
        } else {
          return realTimeDataUnitBuilder_.getMessageList();
        }
      }
      public int getRealTimeDataUnitCount() {
        if (realTimeDataUnitBuilder_ == null) {
          return realTimeDataUnit_.size();
        } else {
          return realTimeDataUnitBuilder_.getCount();
        }
      }
      public RealTimeDataUnit getRealTimeDataUnit(int index) {
        if (realTimeDataUnitBuilder_ == null) {
          return realTimeDataUnit_.get(index);
        } else {
          return realTimeDataUnitBuilder_.getMessage(index);
        }
      }
      public Builder setRealTimeDataUnit(
          int index, RealTimeDataUnit value) {
        if (realTimeDataUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.set(index, value);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRealTimeDataUnit(
          int index, RealTimeDataUnit.Builder builderForValue) {
        if (realTimeDataUnitBuilder_ == null) {
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.set(index, builderForValue.build());
          onChanged();
        } else {
          realTimeDataUnitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRealTimeDataUnit(RealTimeDataUnit value) {
        if (realTimeDataUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.add(value);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRealTimeDataUnit(
          int index, RealTimeDataUnit value) {
        if (realTimeDataUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.add(index, value);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRealTimeDataUnit(
          RealTimeDataUnit.Builder builderForValue) {
        if (realTimeDataUnitBuilder_ == null) {
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.add(builderForValue.build());
          onChanged();
        } else {
          realTimeDataUnitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRealTimeDataUnit(
          int index, RealTimeDataUnit.Builder builderForValue) {
        if (realTimeDataUnitBuilder_ == null) {
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.add(index, builderForValue.build());
          onChanged();
        } else {
          realTimeDataUnitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRealTimeDataUnit(
          Iterable<? extends RealTimeDataUnit> values) {
        if (realTimeDataUnitBuilder_ == null) {
          ensureRealTimeDataUnitIsMutable();
          super.addAll(values, realTimeDataUnit_);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRealTimeDataUnit() {
        if (realTimeDataUnitBuilder_ == null) {
          realTimeDataUnit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.clear();
        }
        return this;
      }
      public Builder removeRealTimeDataUnit(int index) {
        if (realTimeDataUnitBuilder_ == null) {
          ensureRealTimeDataUnitIsMutable();
          realTimeDataUnit_.remove(index);
          onChanged();
        } else {
          realTimeDataUnitBuilder_.remove(index);
        }
        return this;
      }
      public RealTimeDataUnit.Builder getRealTimeDataUnitBuilder(
          int index) {
        return getRealTimeDataUnitFieldBuilder().getBuilder(index);
      }
      public RealTimeDataUnitOrBuilder getRealTimeDataUnitOrBuilder(
          int index) {
        if (realTimeDataUnitBuilder_ == null) {
          return realTimeDataUnit_.get(index);  } else {
          return realTimeDataUnitBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends RealTimeDataUnitOrBuilder>
           getRealTimeDataUnitOrBuilderList() {
        if (realTimeDataUnitBuilder_ != null) {
          return realTimeDataUnitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(realTimeDataUnit_);
        }
      }
      public RealTimeDataUnit.Builder addRealTimeDataUnitBuilder() {
        return getRealTimeDataUnitFieldBuilder().addBuilder(
            RealTimeDataUnit.getDefaultInstance());
      }
      public RealTimeDataUnit.Builder addRealTimeDataUnitBuilder(
          int index) {
        return getRealTimeDataUnitFieldBuilder().addBuilder(
            index, RealTimeDataUnit.getDefaultInstance());
      }
      public java.util.List<RealTimeDataUnit.Builder>
           getRealTimeDataUnitBuilderList() {
        return getRealTimeDataUnitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          RealTimeDataUnit, RealTimeDataUnit.Builder, RealTimeDataUnitOrBuilder>
          getRealTimeDataUnitFieldBuilder() {
        if (realTimeDataUnitBuilder_ == null) {
          realTimeDataUnitBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              RealTimeDataUnit, RealTimeDataUnit.Builder, RealTimeDataUnitOrBuilder>(
                  realTimeDataUnit_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          realTimeDataUnit_ = null;
        }
        return realTimeDataUnitBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:SpecialRealTimeData)
    }
    
    static {
      defaultInstance = new SpecialRealTimeData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SpecialRealTimeData)
  }
  
  public interface GpsLocationDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 gpsTime = 1;
    boolean hasGpsTime();
    long getGpsTime();
    
    // optional int32 latitude = 2;
    boolean hasLatitude();
    int getLatitude();
    
    // optional int32 longitude = 3;
    boolean hasLongitude();
    int getLongitude();
    
    // optional int32 height = 4;
    boolean hasHeight();
    int getHeight();
  }
  public static final class GpsLocationData extends
      com.google.protobuf.GeneratedMessage
      implements GpsLocationDataOrBuilder {
    // Use GpsLocationData.newBuilder() to construct.
    private GpsLocationData(Builder builder) {
      super(builder);
    }
    private GpsLocationData(boolean noInit) {}
    
    private static final GpsLocationData defaultInstance;
    public static GpsLocationData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GpsLocationData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCConcentratedRealTimeData.internal_static_GpsLocationData_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCConcentratedRealTimeData.internal_static_GpsLocationData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 gpsTime = 1;
    public static final int GPSTIME_FIELD_NUMBER = 1;
    private long gpsTime_;
    public boolean hasGpsTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getGpsTime() {
      return gpsTime_;
    }
    
    // optional int32 latitude = 2;
    public static final int LATITUDE_FIELD_NUMBER = 2;
    private int latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLatitude() {
      return latitude_;
    }
    
    // optional int32 longitude = 3;
    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private int longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLongitude() {
      return longitude_;
    }
    
    // optional int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getHeight() {
      return height_;
    }
    
    private void initFields() {
      gpsTime_ = 0L;
      latitude_ = 0;
      longitude_ = 0;
      height_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasGpsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, gpsTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static GpsLocationData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GpsLocationData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GpsLocationData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GpsLocationData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GpsLocationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GpsLocationData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static GpsLocationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GpsLocationData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GpsLocationData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GpsLocationData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GpsLocationData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GpsLocationDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCConcentratedRealTimeData.internal_static_GpsLocationData_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCConcentratedRealTimeData.internal_static_GpsLocationData_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCConcentratedRealTimeData.GpsLocationData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        gpsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GpsLocationData.getDescriptor();
      }
      
      public GpsLocationData getDefaultInstanceForType() {
        return GpsLocationData.getDefaultInstance();
      }
      
      public GpsLocationData build() {
        GpsLocationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private GpsLocationData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        GpsLocationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public GpsLocationData buildPartial() {
        GpsLocationData result = new GpsLocationData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpsTime_ = gpsTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GpsLocationData) {
          return mergeFrom((GpsLocationData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(GpsLocationData other) {
        if (other == GpsLocationData.getDefaultInstance()) return this;
        if (other.hasGpsTime()) {
          setGpsTime(other.getGpsTime());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasGpsTime()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gpsTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              latitude_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              longitude_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 gpsTime = 1;
      private long gpsTime_ ;
      public boolean hasGpsTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getGpsTime() {
        return gpsTime_;
      }
      public Builder setGpsTime(long value) {
        bitField0_ |= 0x00000001;
        gpsTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearGpsTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 latitude = 2;
      private int latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000002;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 longitude = 3;
      private int longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000004;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 height = 4;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:GpsLocationData)
    }
    
    static {
      defaultInstance = new GpsLocationData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GpsLocationData)
  }
  
  public interface RealTimeDataUnitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 engineOutputTorque = 1;
    boolean hasEngineOutputTorque();
    int getEngineOutputTorque();
    
    // optional int32 speed = 2;
    boolean hasSpeed();
    int getSpeed();
    
    // optional int32 accelerator = 3;
    boolean hasAccelerator();
    int getAccelerator();
    
    // optional int32 brake = 4;
    boolean hasBrake();
    int getBrake();
    
    // optional int32 rotation = 5;
    boolean hasRotation();
    int getRotation();
    
    // optional int32 gear = 6;
    boolean hasGear();
    int getGear();
    
    // optional int32 clutchSwitch = 7;
    boolean hasClutchSwitch();
    int getClutchSwitch();
    
    // optional int32 realTimeOilConsumption = 8;
    boolean hasRealTimeOilConsumption();
    int getRealTimeOilConsumption();
    
    // optional int32 fuelConsumptionRate = 9;
    boolean hasFuelConsumptionRate();
    int getFuelConsumptionRate();
  }
  public static final class RealTimeDataUnit extends
      com.google.protobuf.GeneratedMessage
      implements RealTimeDataUnitOrBuilder {
    // Use RealTimeDataUnit.newBuilder() to construct.
    private RealTimeDataUnit(Builder builder) {
      super(builder);
    }
    private RealTimeDataUnit(boolean noInit) {}
    
    private static final RealTimeDataUnit defaultInstance;
    public static RealTimeDataUnit getDefaultInstance() {
      return defaultInstance;
    }
    
    public RealTimeDataUnit getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LCConcentratedRealTimeData.internal_static_RealTimeDataUnit_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LCConcentratedRealTimeData.internal_static_RealTimeDataUnit_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 engineOutputTorque = 1;
    public static final int ENGINEOUTPUTTORQUE_FIELD_NUMBER = 1;
    private int engineOutputTorque_;
    public boolean hasEngineOutputTorque() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getEngineOutputTorque() {
      return engineOutputTorque_;
    }
    
    // optional int32 speed = 2;
    public static final int SPEED_FIELD_NUMBER = 2;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSpeed() {
      return speed_;
    }
    
    // optional int32 accelerator = 3;
    public static final int ACCELERATOR_FIELD_NUMBER = 3;
    private int accelerator_;
    public boolean hasAccelerator() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAccelerator() {
      return accelerator_;
    }
    
    // optional int32 brake = 4;
    public static final int BRAKE_FIELD_NUMBER = 4;
    private int brake_;
    public boolean hasBrake() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getBrake() {
      return brake_;
    }
    
    // optional int32 rotation = 5;
    public static final int ROTATION_FIELD_NUMBER = 5;
    private int rotation_;
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRotation() {
      return rotation_;
    }
    
    // optional int32 gear = 6;
    public static final int GEAR_FIELD_NUMBER = 6;
    private int gear_;
    public boolean hasGear() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getGear() {
      return gear_;
    }
    
    // optional int32 clutchSwitch = 7;
    public static final int CLUTCHSWITCH_FIELD_NUMBER = 7;
    private int clutchSwitch_;
    public boolean hasClutchSwitch() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getClutchSwitch() {
      return clutchSwitch_;
    }
    
    // optional int32 realTimeOilConsumption = 8;
    public static final int REALTIMEOILCONSUMPTION_FIELD_NUMBER = 8;
    private int realTimeOilConsumption_;
    public boolean hasRealTimeOilConsumption() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getRealTimeOilConsumption() {
      return realTimeOilConsumption_;
    }
    
    // optional int32 fuelConsumptionRate = 9;
    public static final int FUELCONSUMPTIONRATE_FIELD_NUMBER = 9;
    private int fuelConsumptionRate_;
    public boolean hasFuelConsumptionRate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getFuelConsumptionRate() {
      return fuelConsumptionRate_;
    }
    
    private void initFields() {
      engineOutputTorque_ = 0;
      speed_ = 0;
      accelerator_ = 0;
      brake_ = 0;
      rotation_ = 0;
      gear_ = 0;
      clutchSwitch_ = 0;
      realTimeOilConsumption_ = 0;
      fuelConsumptionRate_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, speed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, accelerator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, brake_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rotation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, gear_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, clutchSwitch_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, realTimeOilConsumption_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, fuelConsumptionRate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, engineOutputTorque_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, speed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, accelerator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, brake_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rotation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, gear_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, clutchSwitch_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, realTimeOilConsumption_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, fuelConsumptionRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static RealTimeDataUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RealTimeDataUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeDataUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static RealTimeDataUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeDataUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RealTimeDataUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static RealTimeDataUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RealTimeDataUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static RealTimeDataUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static RealTimeDataUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RealTimeDataUnit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RealTimeDataUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LCConcentratedRealTimeData.internal_static_RealTimeDataUnit_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LCConcentratedRealTimeData.internal_static_RealTimeDataUnit_fieldAccessorTable;
      }
      
      // Construct using com.navinfo.opentsp.platform.location.protocol.common.LCConcentratedRealTimeData.RealTimeDataUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        engineOutputTorque_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accelerator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        brake_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        gear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        clutchSwitch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        realTimeOilConsumption_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        fuelConsumptionRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RealTimeDataUnit.getDescriptor();
      }
      
      public RealTimeDataUnit getDefaultInstanceForType() {
        return RealTimeDataUnit.getDefaultInstance();
      }
      
      public RealTimeDataUnit build() {
        RealTimeDataUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private RealTimeDataUnit buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        RealTimeDataUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public RealTimeDataUnit buildPartial() {
        RealTimeDataUnit result = new RealTimeDataUnit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.engineOutputTorque_ = engineOutputTorque_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accelerator_ = accelerator_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.brake_ = brake_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rotation_ = rotation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gear_ = gear_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clutchSwitch_ = clutchSwitch_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.realTimeOilConsumption_ = realTimeOilConsumption_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fuelConsumptionRate_ = fuelConsumptionRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RealTimeDataUnit) {
          return mergeFrom((RealTimeDataUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(RealTimeDataUnit other) {
        if (other == RealTimeDataUnit.getDefaultInstance()) return this;
        if (other.hasEngineOutputTorque()) {
          setEngineOutputTorque(other.getEngineOutputTorque());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasAccelerator()) {
          setAccelerator(other.getAccelerator());
        }
        if (other.hasBrake()) {
          setBrake(other.getBrake());
        }
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        if (other.hasGear()) {
          setGear(other.getGear());
        }
        if (other.hasClutchSwitch()) {
          setClutchSwitch(other.getClutchSwitch());
        }
        if (other.hasRealTimeOilConsumption()) {
          setRealTimeOilConsumption(other.getRealTimeOilConsumption());
        }
        if (other.hasFuelConsumptionRate()) {
          setFuelConsumptionRate(other.getFuelConsumptionRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              engineOutputTorque_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              speed_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accelerator_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              brake_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rotation_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              gear_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              clutchSwitch_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              realTimeOilConsumption_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              fuelConsumptionRate_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 engineOutputTorque = 1;
      private int engineOutputTorque_ ;
      public boolean hasEngineOutputTorque() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getEngineOutputTorque() {
        return engineOutputTorque_;
      }
      public Builder setEngineOutputTorque(int value) {
        bitField0_ |= 0x00000001;
        engineOutputTorque_ = value;
        onChanged();
        return this;
      }
      public Builder clearEngineOutputTorque() {
        bitField0_ = (bitField0_ & ~0x00000001);
        engineOutputTorque_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 speed = 2;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000002;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 accelerator = 3;
      private int accelerator_ ;
      public boolean hasAccelerator() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAccelerator() {
        return accelerator_;
      }
      public Builder setAccelerator(int value) {
        bitField0_ |= 0x00000004;
        accelerator_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccelerator() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accelerator_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 brake = 4;
      private int brake_ ;
      public boolean hasBrake() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBrake() {
        return brake_;
      }
      public Builder setBrake(int value) {
        bitField0_ |= 0x00000008;
        brake_ = value;
        onChanged();
        return this;
      }
      public Builder clearBrake() {
        bitField0_ = (bitField0_ & ~0x00000008);
        brake_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 rotation = 5;
      private int rotation_ ;
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRotation() {
        return rotation_;
      }
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000010;
        rotation_ = value;
        onChanged();
        return this;
      }
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rotation_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 gear = 6;
      private int gear_ ;
      public boolean hasGear() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getGear() {
        return gear_;
      }
      public Builder setGear(int value) {
        bitField0_ |= 0x00000020;
        gear_ = value;
        onChanged();
        return this;
      }
      public Builder clearGear() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gear_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 clutchSwitch = 7;
      private int clutchSwitch_ ;
      public boolean hasClutchSwitch() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getClutchSwitch() {
        return clutchSwitch_;
      }
      public Builder setClutchSwitch(int value) {
        bitField0_ |= 0x00000040;
        clutchSwitch_ = value;
        onChanged();
        return this;
      }
      public Builder clearClutchSwitch() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clutchSwitch_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 realTimeOilConsumption = 8;
      private int realTimeOilConsumption_ ;
      public boolean hasRealTimeOilConsumption() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRealTimeOilConsumption() {
        return realTimeOilConsumption_;
      }
      public Builder setRealTimeOilConsumption(int value) {
        bitField0_ |= 0x00000080;
        realTimeOilConsumption_ = value;
        onChanged();
        return this;
      }
      public Builder clearRealTimeOilConsumption() {
        bitField0_ = (bitField0_ & ~0x00000080);
        realTimeOilConsumption_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 fuelConsumptionRate = 9;
      private int fuelConsumptionRate_ ;
      public boolean hasFuelConsumptionRate() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getFuelConsumptionRate() {
        return fuelConsumptionRate_;
      }
      public Builder setFuelConsumptionRate(int value) {
        bitField0_ |= 0x00000100;
        fuelConsumptionRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearFuelConsumptionRate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fuelConsumptionRate_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RealTimeDataUnit)
    }
    
    static {
      defaultInstance = new RealTimeDataUnit(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RealTimeDataUnit)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SpecialRealTimeData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SpecialRealTimeData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GpsLocationData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GpsLocationData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RealTimeDataUnit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RealTimeDataUnit_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n0core/proto/common/java/SpecialRealTime" +
      "Data.proto\"\204\001\n\023SpecialRealTimeData\022)\n\017gp" +
      "sLocationData\030\001 \002(\0132\020.GpsLocationData\022\025\n" +
      "\rdataUnitCount\030\002 \002(\005\022+\n\020realTimeDataUnit" +
      "\030\003 \003(\0132\021.RealTimeDataUnit\"W\n\017GpsLocation" +
      "Data\022\017\n\007gpsTime\030\001 \002(\003\022\020\n\010latitude\030\002 \001(\005\022" +
      "\021\n\tlongitude\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\"\324\001\n\020R" +
      "ealTimeDataUnit\022\032\n\022engineOutputTorque\030\001 " +
      "\001(\005\022\r\n\005speed\030\002 \001(\005\022\023\n\013accelerator\030\003 \001(\005\022" +
      "\r\n\005brake\030\004 \001(\005\022\020\n\010rotation\030\005 \001(\005\022\014\n\004gear",
      "\030\006 \001(\005\022\024\n\014clutchSwitch\030\007 \001(\005\022\036\n\026realTime" +
      "OilConsumption\030\010 \001(\005\022\033\n\023fuelConsumptionR" +
      "ate\030\t \001(\005BS\n5com.navinfo.opentsp.platfor" +
      "m.location.protocol.commonB\032LCConcentrat" +
      "edRealTimeData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SpecialRealTimeData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SpecialRealTimeData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SpecialRealTimeData_descriptor,
              new String[] { "GpsLocationData", "DataUnitCount", "RealTimeDataUnit", },
              SpecialRealTimeData.class,
              SpecialRealTimeData.Builder.class);
          internal_static_GpsLocationData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GpsLocationData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GpsLocationData_descriptor,
              new String[] { "GpsTime", "Latitude", "Longitude", "Height", },
              GpsLocationData.class,
              GpsLocationData.Builder.class);
          internal_static_RealTimeDataUnit_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_RealTimeDataUnit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RealTimeDataUnit_descriptor,
              new String[] { "EngineOutputTorque", "Speed", "Accelerator", "Brake", "Rotation", "Gear", "ClutchSwitch", "RealTimeOilConsumption", "FuelConsumptionRate", },
              RealTimeDataUnit.class,
              RealTimeDataUnit.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
